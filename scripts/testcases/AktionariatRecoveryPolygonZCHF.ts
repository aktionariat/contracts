import hre, { ethers } from "hardhat";
import { Contract } from "ethers";
import { expect } from "chai";
import { HardhatEthersSigner } from "@nomicfoundation/hardhat-ethers/signers";
import { switchForkedNetwork } from "../helpers/switchNetwork";
import { MultiSigCloneFactory } from "../../typechain-types";

describe("Aktionariat Polygon ZCHF Recovery", function () {
  let deployer: HardhatEthersSigner;
  let currentNonce: number;
  
  let contractCreationCodeMultiSig = ""

  let contractCreationCodeCloneMaster = "0x60a060405234801561001057600080fd5b5060405161040538038061040583398101604081905261002f91610044565b60601b6001600160601b031916608052610074565b60006020828403121561005657600080fd5b81516001600160a01b038116811461006d57600080fd5b9392505050565b60805160601c61036861009d60003960008181607a0152818160b6015260e901526103686000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80630e787cce1461004657806364293af314610075578063a3def9231461009c575b600080fd5b610059610054366004610319565b6100af565b6040516001600160a01b03909116815260200160405180910390f35b6100597f000000000000000000000000000000000000000000000000000000000000000081565b6100596100aa3660046102e1565b6100e1565b60006100db7f0000000000000000000000000000000000000000000000000000000000000000836101d0565b92915050565b60008061010e7f00000000000000000000000000000000000000000000000000000000000000008461023d565b60405163189acdbd60e31b81526001600160a01b0386811660048301529192509082169063c4d66de890602401600060405180830381600087803b15801561015557600080fd5b505af1158015610169573d6000803e3d6000fd5b5050505060405161018e906d135d5b1d1a54da59d5d85b1b195d60921b8152600e0190565b604051908190038120906001600160a01b038316907f5748f17320a7bfc4dad968e541c61b9fa9923765f9efdfa3dffc76763e02d19690600090a39392505050565b6000610236838330604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b8152606093841b60148201526f5af43d82803e903d91602b57fd5bf3ff60801b6028820152921b6038830152604c8201526037808220606c830152605591012090565b9392505050565b6000604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81528360601b60148201526e5af43d82803e903d91602b57fd5bf360881b6028820152826037826000f59150506001600160a01b0381166100db5760405162461bcd60e51b815260206004820152601760248201527f455243313136373a2063726561746532206661696c6564000000000000000000604482015260640160405180910390fd5b600080604083850312156102f457600080fd5b82356001600160a01b038116811461030b57600080fd5b946020939093013593505050565b60006020828403121561032b57600080fd5b503591905056fea2646970667358221220678d3966199a6285118bf31211c62b32fc000c0a4f55c4394a51ccbb8b8e5bf764736f6c6343000807003300000000000000000000000043ffaa65fe273d2ef9edd78418091d41b1aa40e8"
  
  let contractABI = [{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Received","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"signer","type":"address"},{"indexed":false,"internalType":"uint8","name":"signaturesNeeded","type":"uint8"}],"name":"SignerChange","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"toAddress","type":"address"},{"indexed":false,"internalType":"bytes4","name":"selector","type":"bytes4"},{"indexed":false,"internalType":"address[]","name":"signers","type":"address[]"}],"name":"Transacted","type":"event"},{"inputs":[],"name":"MAX_INCREASE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"checkExecution","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint128","name":"nonce","type":"uint128"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint8[]","name":"v","type":"uint8[]"},{"internalType":"bytes32[]","name":"r","type":"bytes32[]"},{"internalType":"bytes32[]","name":"s","type":"bytes32[]"}],"name":"checkSignatures","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"contractId","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint128","name":"nonce","type":"uint128"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint8[]","name":"v","type":"uint8[]"},{"internalType":"bytes32[]","name":"r","type":"bytes32[]"},{"internalType":"bytes32[]","name":"s","type":"bytes32[]"}],"name":"execute","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint128","name":"nonce","type":"uint128"}],"name":"isFree","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"source","type":"address"},{"internalType":"address","name":"destination","type":"address"}],"name":"migrate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"destination","type":"address"}],"name":"migrate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"nextNonce","outputs":[{"internalType":"uint128","name":"","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"uint8","name":"signaturesNeeded","type":"uint8"}],"name":"setSigner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"signerCount","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"signers","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"x","type":"uint256"}],"name":"toBytes","outputs":[{"internalType":"bytes","name":"result","type":"bytes"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"bytes32","name":"transactionHash","type":"bytes32"},{"internalType":"uint8[]","name":"v","type":"uint8[]"},{"internalType":"bytes32[]","name":"r","type":"bytes32[]"},{"internalType":"bytes32[]","name":"s","type":"bytes32[]"}],"name":"verifySignatures","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}]
  
  let targetDeterministicAddressMultiSig = "0x4Fd9DbA1d53B7E6cC933a2Fdd12B1c012a0654F6";
  let multisSigCloneFactory: MultiSigCloneFactory;
  let multiSigWalletMaster: Contract;

  before(async function() {
    await switchForkedNetwork("polygon");
    [deployer] = await ethers.getSigners();
    currentNonce = await deployer.getNonce()
  });

  it("Should have correct deployer 0x39E5351", async function () {
    expect(deployer.address).to.equal("0x39E5351E6CE3c4B19B8b0a2F5C82c511782457BE");
  });

  it("Should start with a nonce less than the required nonce", async function () {
    currentNonce = await deployer.getNonce();
    expect(currentNonce).to.be.lessThanOrEqual(139);
  });

  it("Should send empty transactions until required nonce is reached", async function () {
    for (let i = currentNonce ; i < 139; i++) {
      await deployer.sendTransaction({ to: deployer.address, value: ethers.parseEther("0.0"),  });
      currentNonce = await deployer.getNonce();
    }

    expect(currentNonce).to.equal(139);
  });

  it("Should deploy MultiSigWalletV3 at correct nonce to pretermined address", async function () {
    currentNonce = await deployer.getNonce();
    expect(currentNonce).to.equal(139);

    const contractFactory = await ethers.getContractFactory([], contractCreationCodeMultiSig, deployer);
    const deployedContract = await contractFactory.deploy();
    const dep = await deployedContract.waitForDeployment();
    expect(dep.target).to.equal("0x43Ffaa65fe273D2EF9EDd78418091d41B1AA40E8");
  });

  it("Should skip nonces and deploy MultiSigCloneFactory at correct nonce to pretermined address", async function () {
    currentNonce = await deployer.getNonce();
    expect(currentNonce).to.equal(140);

    const contractFactory = await ethers.getContractFactory([], contractCreationCodeCloneMaster, deployer);
    const deployedContract = await contractFactory.deploy();
    const dep = await deployedContract.waitForDeployment();
    expect(dep.target).to.equal("0xC894ef112CC26741397053248F9f677398Eb56e2");
  });

  it("Should be able to correctly predict the deployed multisig", async function () {
    multisSigCloneFactory = await ethers.getContractAt("MultiSigCloneFactory", "0xC894ef112CC26741397053248F9f677398Eb56e2");
    let predictedAdress = await multisSigCloneFactory.connect(deployer).predict("0x6669787632330000000000000000000000000000000000000000000000000000");
    expect(predictedAdress).to.equal(targetDeterministicAddressMultiSig);
  });

  it("Should use deployed MultiSigCloneFactory to deploy a MultiSig Clone with correct salt", async function () {
    multisSigCloneFactory = await ethers.getContractAt("MultiSigCloneFactory", "0xC894ef112CC26741397053248F9f677398Eb56e2");
    await multisSigCloneFactory.connect(deployer).create("0x59f0941e75f2f77ca4577e48c3c5333a3f8d277b", "0x6669787632330000000000000000000000000000000000000000000000000000");
  });

  it("Should now have some code at 0x4Fd9DbA1d53B7E6cC933a2Fdd12B1c012a0654F6", async function () {
    expect(await ethers.provider.getCode(targetDeterministicAddressMultiSig)).to.not.equal("0x");
  });

  it("Should be able to call methods of the deployed multisig", async function () {
    multiSigWalletMaster = await ethers.getContractAt(contractABI, targetDeterministicAddressMultiSig, deployer);
    expect(await multiSigWalletMaster.signerCount()).to.equal(1);
    expect(await multiSigWalletMaster.signers("0x59f0941e75f2f77ca4577e48c3c5333a3f8d277b")).to.equal(1);
  });

});