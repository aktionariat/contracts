{
  "address": "0x587dD31FA6b5C90955d66f6E08a93Cd336744191",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_shareToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_increment",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_baseCurrency",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_paymentHub",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newPaymentHub",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "who",
          "type": "address"
        }
      ],
      "name": "ChangePaymentHub",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "ref",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "amount",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "base",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totPrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newprice",
          "type": "uint256"
        }
      ],
      "name": "Trade",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "COPYRIGHT",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "erc20",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "base",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "buyingEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "driftIncrement",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "driftStart",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "getBuyPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "getLicenseFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "getPriceAtTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "getSellPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "money",
          "type": "uint256"
        }
      ],
      "name": "getShares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "hasDrift",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "increment",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "ref",
          "type": "bytes"
        }
      ],
      "name": "notifyTrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "ref",
          "type": "bytes"
        }
      ],
      "name": "notifyTradeAndTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "buyers",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "shares",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes[]",
          "name": "ref",
          "type": "bytes[]"
        }
      ],
      "name": "notifyTrades",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "buyers",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "shares",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes[]",
          "name": "ref",
          "type": "bytes[]"
        }
      ],
      "name": "notifyTradesAndTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "ref",
          "type": "bytes"
        }
      ],
      "name": "onTokenTransfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "ref",
          "type": "bytes"
        }
      ],
      "name": "onTokenTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paymenthub",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "ref",
          "type": "bytes"
        }
      ],
      "name": "processIncoming",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sellingEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "secondsPerStep",
          "type": "uint256"
        },
        {
          "internalType": "int256",
          "name": "newDriftIncrement",
          "type": "int256"
        }
      ],
      "name": "setDrift",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "newBuyingEnabled",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "newSellingEnabled",
          "type": "bool"
        }
      ],
      "name": "setEnabled",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "hub",
          "type": "address"
        }
      ],
      "name": "setPaymentHub",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "newIncrement",
          "type": "uint256"
        }
      ],
      "name": "setPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "settings_",
          "type": "uint256"
        }
      ],
      "name": "setSettings",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "settings",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timeToDrift",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "ercAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawEther",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x6bbac8031849f7fb6fba3700d695655210829600b2e6bd3e1e18b3e05891fb96",
  "receipt": {
    "to": null,
    "from": "0x39E5351E6CE3c4B19B8b0a2F5C82c511782457BE",
    "contractAddress": "0x587dD31FA6b5C90955d66f6E08a93Cd336744191",
    "transactionIndex": 50,
    "gasUsed": "1684841",
    "logsBloom": "0x
    "blockHash": "0xc7c1cfbb0a5fd48d08b54787d60044f5baf3ab245ef027e8b872520c40923f3a",
    "transactionHash": "0x6bbac8031849f7fb6fba3700d695655210829600b2e6bd3e1e18b3e05891fb96",
    "logs": [
      {
        "transactionIndex": 50,
        "blockNumber": 11910737,
        "transactionHash": "0x6bbac8031849f7fb6fba3700d695655210829600b2e6bd3e1e18b3e05891fb96",
        "address": "0x587dD31FA6b5C90955d66f6E08a93Cd336744191",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000001eeae347c477803215ebc02fcc08bc1c587a5134"
        ],
        "data": "0x",
        "logIndex": 25,
        "blockHash": "0xc7c1cfbb0a5fd48d08b54787d60044f5baf3ab245ef027e8b872520c40923f3a"
      }
    ],
    "blockNumber": 11910737,
    "cumulativeGasUsed": "5900358",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x7686a6F82715Debd78fd6a507b60B9A752A0a2D6",
    "1000000000000000000",
    0,
    "0xB4272071eCAdd69d933AdcD19cA99fe80664fc08",
    "0x1eeAE347c477803215ebc02fcc08bc1c587a5134",
    "0x31A531fc56F5a5680E931783982CaD29D01A9CD8"
  ],
  "numDeployments": 1,
  "solcInputHash": "79803b37f9f5c1fe49ee98f562930e9e",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_shareToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_increment\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_baseCurrency\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_paymentHub\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newPaymentHub\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"ChangePaymentHub\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"ref\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"base\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newprice\",\"type\":\"uint256\"}],\"name\":\"Trade\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"COPYRIGHT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"erc20\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"base\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyingEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"driftIncrement\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"driftStart\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"getBuyPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getLicenseFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"getPriceAtTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"getSellPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"money\",\"type\":\"uint256\"}],\"name\":\"getShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hasDrift\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"increment\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ref\",\"type\":\"bytes\"}],\"name\":\"notifyTrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ref\",\"type\":\"bytes\"}],\"name\":\"notifyTradeAndTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"buyers\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"ref\",\"type\":\"bytes[]\"}],\"name\":\"notifyTrades\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"buyers\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"ref\",\"type\":\"bytes[]\"}],\"name\":\"notifyTradesAndTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ref\",\"type\":\"bytes\"}],\"name\":\"onTokenTransfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ref\",\"type\":\"bytes\"}],\"name\":\"onTokenTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paymenthub\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ref\",\"type\":\"bytes\"}],\"name\":\"processIncoming\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellingEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"secondsPerStep\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"newDriftIncrement\",\"type\":\"int256\"}],\"name\":\"setDrift\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"newBuyingEnabled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"newSellingEnabled\",\"type\":\"bool\"}],\"name\":\"setEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"hub\",\"type\":\"address\"}],\"name\":\"setPaymentHub\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newIncrement\",\"type\":\"uint256\"}],\"name\":\"setPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"settings_\",\"type\":\"uint256\"}],\"name\":\"setSettings\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"settings\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timeToDrift\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ercAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawEther\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"processIncoming(address,address,uint256,bytes)\":{\"notice\":\"Payment hub might actually have sent another accepted token, including Ether.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/brokerbot/LicensedBrokerbot.sol\":\"LicensedBrokerbot\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/ERC20/IERC20.sol\":{\"content\":\"/**\\n* SPDX-License-Identifier: MIT\\n*\\n* Copyright (c) 2016-2019 zOS Global Limited\\n*\\n*/\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP. Does not include\\n * the optional functions; to access them see `ERC20Detailed`.\\n */\\n\\ninterface IERC20 {\\n\\n    // Optional functions\\n    function name() external view returns (string memory);\\n\\n    function symbol() external view returns (string memory);\\n\\n    event NameChanged(string name, string symbol);\\n\\n    function decimals() external view returns (uint8);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a `Transfer` event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through `transferFrom`. This is\\n     * zero by default.\\n     *\\n     * This value changes when `approve` or `transferFrom` are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * > Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an `Approval` event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a `Transfer` event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to `approve`. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n}\",\"keccak256\":\"0xfaefd97261d6413e7b891435756e82b7133d5c7c854ab04af50b2ab089136f4b\",\"license\":\"MIT\"},\"src/ERC20/IERC677Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IERC677Receiver {\\n    \\n    function onTokenTransfer(address from, uint256 amount, bytes calldata data) external returns (bool);\\n\\n}\",\"keccak256\":\"0x40703acdfa2126286b117ad0cca84c0a4ca2d3b18586765186c9bdd8ad5cf744\",\"license\":\"MIT\"},\"src/brokerbot/Brokerbot.sol\":{\"content\":\"/**\\n* SPDX-License-Identifier: LicenseRef-Aktionariat\\n*\\n* MIT License with Automated License Fee Payments\\n*\\n* COPYRIGHT (c) 2020 Aktionariat AG (aktionariat.com)\\n*\\n* Permission is hereby granted to any person obtaining a copy of this software\\n* and associated documentation files (the \\\"Software\\\"), to deal in the Software\\n* without restriction, including without limitation the rights to use, copy,\\n* modify, merge, publish, distribute, sublicense, and/or sell copies of the\\n* Software, and to permit persons to whom the Software is furnished to do so,\\n* subject to the following conditions:\\n*\\n* - The above COPYRIGHT notice and this permission notice shall be included in\\n*   all copies or substantial portions of the Software.\\n* - All automated license fee payments integrated into this and related Software\\n*   are preserved.\\n*\\n* THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\n* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\n* SOFTWARE.\\n*/\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Ownable.sol\\\";\\nimport \\\"../ERC20/IERC20.sol\\\";\\nimport \\\"../ERC20/IERC677Receiver.sol\\\";\\n\\ncontract Brokerbot is Ownable {\\n\\n    address public paymenthub;\\n\\n    address public immutable base;  // ERC-20 currency\\n    address public immutable token; // ERC-20 share token\\n\\n    address public constant COPYRIGHT = 0x29Fe8914e76da5cE2d90De98a64d0055f199d06D; // Aktionariat AG\\n\\n    uint256 private price; // current offer price, without drift\\n    uint256 public increment; // increment\\n\\n    uint256 public driftStart;\\n    uint256 public timeToDrift; // seconds until drift pushes price by one drift increment\\n    int256 public driftIncrement;\\n\\n    uint8 private constant LICENSEFEEBPS = 90;\\n\\n    // Note that these settings might be hard-coded in various places, so better not change these values.\\n    uint8 private constant BUYING_ENABLED = 0x1;\\n    uint8 private constant SELLING_ENABLED = 0x2;\\n    // note that in the UI, we call the setting \\\"convert ether\\\", which is the opposite\\n    uint8 private constant KEEP_ETHER = 0x4;\\n    uint8 private constant VERSION = 0x1;\\n\\n    // more bits to be used by payment hub\\n    uint256 public settings = BUYING_ENABLED | SELLING_ENABLED | (VERSION<<248);\\n\\n    event Trade(address indexed token, address who, bytes ref, int amount, address base, uint totPrice, uint fee, uint newprice);\\n    event ChangePaymentHub(address newPaymentHub, address who);\\n\\n    constructor(\\n        address _shareToken,\\n        uint256 _price,\\n        uint256 _increment,\\n        address _baseCurrency,\\n        address _owner,\\n        address _paymentHub\\n    )\\n        Ownable(_owner)\\n    {\\n        base = _baseCurrency;\\n        token = _shareToken;\\n        price = _price;\\n        increment = _increment;\\n        paymenthub = _paymentHub;\\n        // Should we disabled recoverability in the recovery hub here?\\n        // No, if someone attacks us, we can always trigger a transfer and recover the tokens as well as the collateral.\\n    }\\n\\n    function setPrice(uint256 newPrice, uint256 newIncrement) external onlyOwner {\\n        anchorPrice(newPrice);\\n        increment = newIncrement;\\n    }\\n\\n    function hasDrift() public view returns (bool) {\\n        return timeToDrift != 0;\\n    }\\n\\n    // secondsPerStep should be negative for downwards drift\\n    function setDrift(uint256 secondsPerStep, int256 newDriftIncrement) external onlyOwner {\\n        anchorPrice(getPrice());\\n        timeToDrift = secondsPerStep;\\n        driftIncrement = newDriftIncrement;\\n    }\\n\\n    function anchorPrice(uint256 currentPrice) private {\\n        price = currentPrice;\\n        // rely on time stamp is ok, no exact time stamp needed\\n        // solhint-disable-next-line not-rely-on-time\\n        driftStart = block.timestamp;\\n    }\\n\\n    function getPrice() public view returns (uint256) {\\n        // rely on time stamp is ok, no exact time stamp needed\\n        // solhint-disable-next-line not-rely-on-time\\n        return getPriceAtTime(block.timestamp);\\n    }\\n\\n    function getPriceAtTime(uint256 timestamp) public view returns (uint256) {\\n        if (hasDrift()){\\n            uint256 passed = timestamp - driftStart;\\n            int256 drifted = int256(passed / timeToDrift) * driftIncrement;\\n            int256 driftedPrice = int256(price) + drifted;\\n            if (driftedPrice < 0){\\n                return 0;\\n            } else {\\n                return uint256(driftedPrice);\\n            }\\n        } else {\\n            return price;\\n        }\\n    }\\n\\n    function buy(address from, uint256 paid, bytes calldata ref) internal returns (uint256) {\\n        uint shares = getShares(paid);\\n        uint costs = notifyTraded(from, shares, ref);\\n        if (costs < paid){\\n            IERC20(base).transfer(from, paid - costs);\\n        }\\n        IERC20(token).transfer(from, shares);\\n        return shares;\\n    }\\n\\n    function notifyTraded(address from, uint256 shares, bytes calldata ref) internal returns (uint256) {\\n        require(hasSetting(BUYING_ENABLED), \\\"buying disabled\\\");\\n        uint costs = getBuyPrice(shares);\\n        price = price + (shares * increment);\\n        emit Trade(token, from, ref, int256(shares), base, costs, 0, getPrice());\\n        return costs;\\n    }\\n\\n    function notifyTrade(address buyer, uint256 shares, bytes calldata ref) external onlyOwner {\\n        notifyTraded(buyer, shares, ref);\\n    }\\n\\n    function notifyTradeAndTransfer(address buyer, uint256 shares, bytes calldata ref) public onlyOwner {\\n        notifyTraded(buyer, shares, ref);\\n        IERC20(token).transfer(buyer, shares);\\n    }\\n\\n    function notifyTrades(address[] calldata buyers, uint256[] calldata shares, bytes[] calldata ref) external onlyOwner {\\n        for (uint i = 0; i < buyers.length; i++) {\\n            notifyTraded(buyers[i], shares[i], ref[i]);\\n        }\\n    }\\n\\n    function notifyTradesAndTransfer(address[] calldata buyers, uint256[] calldata shares, bytes[] calldata ref) external onlyOwner {\\n        for (uint i = 0; i < buyers.length; i++) {\\n            notifyTradeAndTransfer(buyers[i], shares[i], ref[i]);\\n        }\\n    }\\n\\n    /**\\n     * Payment hub might actually have sent another accepted token, including Ether.\\n     */\\n    function processIncoming(address token_, address from, uint256 amount, bytes calldata ref) public payable returns (uint256) {\\n        require(msg.sender == token_ || msg.sender == base || msg.sender == paymenthub, \\\"invalid calle\\\");\\n        if (token_ == token){\\n            return sell(from, amount, ref);\\n        } else if (token_ == base){\\n            return buy(from, amount, ref);\\n        } else {\\n            require(false, \\\"invalid token\\\");\\n            return 0;\\n        }\\n    }\\n\\n    // ERC-677 recipient\\n    function onTokenTransfer(address from, uint256 amount, bytes calldata ref) external returns (bool) {\\n        processIncoming(msg.sender, from, amount, ref);\\n        return true;\\n    }\\n\\n    // (deprecated ITokenReceiver, still called by old payment hub)\\n    function onTokenTransfer(address token_, address from, uint256 amount, bytes calldata ref) external {\\n        processIncoming(token_, from, amount, ref);\\n    }\\n\\n    function buyingEnabled() external view returns (bool){\\n        return hasSetting(BUYING_ENABLED);\\n    }\\n\\n    function sellingEnabled() external view returns (bool){\\n        return hasSetting(SELLING_ENABLED);\\n    }\\n\\n    function hasSetting(uint256 setting) private view returns (bool) {\\n        return settings & setting == setting;\\n    }\\n\\n    function isDirectSale(bytes calldata ref) internal pure returns (bool) {\\n        if (ref.length == 0 || ref.length == 20) {\\n            return true; // old format\\n        } else {\\n            if (ref[0] == bytes1(0x01)){\\n                return true;\\n            } else if (ref[0] == bytes1(0x02)) {\\n                return false;\\n            } else {\\n                require(false, \\\"unknown ref\\\");\\n                return true;\\n            }\\n        }\\n    }\\n\\n\\n    function sell(address recipient, uint256 amount, bytes calldata ref) internal returns (uint256) {\\n        require(hasSetting(SELLING_ENABLED), \\\"selling disabled\\\");\\n        uint256 totPrice = getSellPrice(amount);\\n        IERC20 baseToken = IERC20(base);\\n        uint256 fee = getLicenseFee(totPrice);\\n        price -= amount * increment;\\n        if (fee > 0){\\n            baseToken.transfer(COPYRIGHT, fee);\\n        }\\n        if (isDirectSale(ref)){\\n            baseToken.transfer(recipient, totPrice - fee);\\n        }\\n        emit Trade(token, recipient, ref, -int256(amount), base, totPrice, fee, getPrice());\\n        return totPrice;\\n    }\\n\\n    function getLicenseFee(uint256 totPrice) public virtual pure returns (uint256) {\\n        return totPrice * LICENSEFEEBPS / 10000;\\n    }\\n\\n    function getSellPrice(uint256 shares) public view returns (uint256) {\\n        return getPrice(getPrice() - (shares * increment), shares);\\n    }\\n\\n    function getBuyPrice(uint256 shares) public view returns (uint256) {\\n        return getPrice(getPrice(), shares);\\n    }\\n\\n    function getPrice(uint256 lowest, uint256 shares) internal view returns (uint256){\\n        if (shares == 0) {\\n            return 0;\\n        } else {\\n            uint256 highest = lowest + (shares - 1) * increment;\\n            return ((lowest + highest) / 2) * shares;\\n        }\\n    }\\n\\n    function getShares(uint256 money) public view returns (uint256) {\\n        uint256 currentPrice = getPrice();\\n        uint256 min = 0;\\n        uint256 max = money / currentPrice;\\n        while (min < max){\\n            uint256 middle = (min + max)/2;\\n            uint256 totalPrice = getPrice(currentPrice, middle);\\n            if (money > totalPrice){\\n                min = middle + 1;\\n            } else {\\n                max = middle;\\n            }\\n        }\\n        return min;\\n    }\\n\\n    function withdrawEther(uint256 amount) external ownerOrHub() {\\n        payable(msg.sender).transfer(amount); // return change\\n    }\\n\\n    function approve(address erc20, address who, uint256 amount) external onlyOwner() {\\n        IERC20(erc20).approve(who, amount);\\n    }\\n\\n    function withdraw(address ercAddress, address to, uint256 amount) external ownerOrHub() {\\n        IERC20(ercAddress).transfer(to, amount);\\n    }\\n\\n    function setPaymentHub(address hub) external onlyOwner() {\\n        paymenthub = hub;\\n        emit ChangePaymentHub(paymenthub, msg.sender);\\n    }\\n\\n    function setSettings(uint256 settings_) external onlyOwner() {\\n        settings = settings_;\\n    }\\n\\n    function setEnabled(bool newBuyingEnabled, bool newSellingEnabled) external onlyOwner() {\\n        if (newBuyingEnabled != hasSetting(BUYING_ENABLED)){\\n            settings ^= BUYING_ENABLED;\\n        }\\n        if (newSellingEnabled != hasSetting(SELLING_ENABLED)){\\n            settings ^= SELLING_ENABLED;\\n        }\\n    }\\n    \\n    modifier ownerOrHub() {\\n        require(owner == msg.sender || paymenthub == msg.sender, \\\"not owner\\\");\\n        _;\\n    }\\n}\",\"keccak256\":\"0x26dbe8fde14a0780da46154ffecb431b4ad90bd56552ad487b4ed43e44f2be1a\",\"license\":\"LicenseRef-Aktionariat\"},\"src/brokerbot/LicensedBrokerbot.sol\":{\"content\":\"/**\\n* SPDX-License-Identifier: LicenseRef-Aktionariat\\n*\\n* Proprietary License\\n*\\n* This code cannot be used without an explicit permission from the copyright holder.\\n* If you wish to use the Aktionariat Brokerbot, you can either use the open version\\n* named Brokerbot.sol that can be used under an MIT License with Automated License Fee Payments,\\n* or you can get in touch with use to negotiate a license to use LicensedBrokerbot.sol .\\n*\\n* Copyright (c) 2021 Aktionariat AG (aktionariat.com), All rights reserved.\\n*/\\npragma solidity ^0.8.0;\\n\\nimport \\\"./Brokerbot.sol\\\";\\n\\ncontract LicensedBrokerbot is Brokerbot {\\n\\n    constructor(\\n        address _shareToken,\\n        uint256 _price,\\n        uint256 _increment,\\n        address _baseCurrency,\\n        address _owner,\\n        address _paymentHub\\n    ) Brokerbot (_shareToken, _price, _increment, _baseCurrency, _owner, _paymentHub) \\n    // solhint-disable-next-line no-empty-blocks\\n    {}\\n\\n    function getLicenseFee(uint256) public pure override returns (uint256) {\\n        return 0;\\n    }\\n}\",\"keccak256\":\"0xff58685eeb97da99fe70a5e1817e432c566859236ff1b4ac7f8bc50c7db4f1e9\",\"license\":\"LicenseRef-Aktionariat\"},\"src/utils/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n//\\n// From https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\\n//\\n// Modifications:\\n// - Replaced Context._msgSender() with msg.sender\\n// - Made leaner\\n// - Extracted interface\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\ncontract Ownable {\\n\\n    address public owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor (address initialOwner) {\\n        owner = initialOwner;\\n        emit OwnershipTransferred(address(0), owner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) external onlyOwner {\\n        emit OwnershipTransferred(owner, newOwner);\\n        owner = newOwner;\\n    }\\n\\n    modifier onlyOwner() {\\n        require(owner == msg.sender, \\\"not owner\\\");\\n        _;\\n    }\\n}\",\"keccak256\":\"0x1104f456d1ee340a1674c34f132578b599d8fd1a8e12e57d5a7691de1191caca\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60c060405260036007553480156200001657600080fd5b5060405162001dab38038062001dab8339810160408190526200003991620000ff565b600080546001600160a01b0319166001600160a01b03841690811782556040518892889288928892889288928492907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350606092831b6001600160601b03199081166080529590921b90941660a052600292909255600355600180546001600160a01b0319166001600160a01b03909216919091179055506200016e95505050505050565b80516001600160a01b0381168114620000fa57600080fd5b919050565b60008060008060008060c087890312156200011957600080fd5b6200012487620000e2565b955060208701519450604087015193506200014260608801620000e2565b92506200015260808801620000e2565b91506200016260a08801620000e2565b90509295509295509295565b60805160601c60a05160601c611bc4620001e7600039600081816106080152818161080101528181610b51015281816111fe015281816113a401526114af0152600081816102d10152818161078c0152818161084e0152818161106a0152818161124d015281816112ce01526114f60152611bc46000f3fe6080604052600436106102045760003560e01c80639bb8c0fd11610118578063d9caed12116100a0578063f771cb651161006f578063f771cb65146105c1578063f7d97577146105d6578063fc0c546a146105f6578063fff4da1f1461062a578063fff897451461064a57600080fd5b8063d9caed121461054b578063e06174e41461056b578063e1f21c6714610581578063f2fde38b146105a157600080fd5b8063ba730e53116100e7578063ba730e53146104bf578063bf13d438146104df578063c7780ab2146104ff578063d09de08a14610515578063d7e06ca81461052b57600080fd5b80639bb8c0fd1461043f578063a4c0ed361461045f578063afaefe9e1461047f578063b03a13fe1461049f57600080fd5b8063777adcf01161019b5780638a07d3d01161016a5780638a07d3d0146103b25780638da5cb5b146103d55780638ed2fe91146103f557806391be6ad51461040a57806398d5fdca1461042a57600080fd5b8063777adcf0146103465780637cd6a7fd146103665780637ff6c1911461038657806384b41fda1461039c57600080fd5b80635001f3b5116101d75780635001f3b5146102bf5780635c627935146102f357806369365c52146103135780636f7267b71461032657600080fd5b806308d4db141461020957806321bea8581461023c578063289469901461025d5780633bed33ce1461029d575b600080fd5b34801561021557600080fd5b506102296102243660046118c3565b61066a565b6040519081526020015b60405180910390f35b34801561024857600080fd5b506102296102573660046118c3565b50600090565b34801561026957600080fd5b506102857329fe8914e76da5ce2d90de98a64d0055f199d06d81565b6040516001600160a01b039091168152602001610233565b3480156102a957600080fd5b506102bd6102b83660046118c3565b610683565b005b3480156102cb57600080fd5b506102857f000000000000000000000000000000000000000000000000000000000000000081565b3480156102ff57600080fd5b506102bd61030e36600461188a565b6106fc565b61022961032136600461170a565b61076d565b34801561033257600080fd5b506102296103413660046118c3565b6108d3565b34801561035257600080fd5b50600154610285906001600160a01b031681565b34801561037257600080fd5b506102bd6103813660046118c3565b61094d565b34801561039257600080fd5b5061022960045481565b3480156103a857600080fd5b5061022960055481565b3480156103be57600080fd5b5060055415155b6040519015158152602001610233565b3480156103e157600080fd5b50600054610285906001600160a01b031681565b34801561040157600080fd5b506103c561097c565b34801561041657600080fd5b506102bd6104253660046117d3565b610991565b34801561043657600080fd5b50610229610a48565b34801561044b57600080fd5b506102bd61045a366004611779565b610a53565b34801561046b57600080fd5b506103c561047a366004611779565b610a90565b34801561048b57600080fd5b506102bd61049a3660046118dc565b610aab565b3480156104ab57600080fd5b506102bd6104ba366004611779565b610af4565b3480156104cb57600080fd5b506102296104da3660046118c3565b610bcd565b3480156104eb57600080fd5b506102296104fa3660046118c3565b610bf2565b34801561050b57600080fd5b5061022960065481565b34801561052157600080fd5b5061022960035481565b34801561053757600080fd5b506102bd61054636600461170a565b610c70565b34801561055757600080fd5b506102bd6105663660046116ce565b610c85565b34801561057757600080fd5b5061022960075481565b34801561058d57600080fd5b506102bd61059c3660046116ce565b610d4d565b3480156105ad57600080fd5b506102bd6105bc3660046116ac565b610dac565b3480156105cd57600080fd5b506103c5610e31565b3480156105e257600080fd5b506102bd6105f13660046118dc565b610e41565b34801561060257600080fd5b506102857f000000000000000000000000000000000000000000000000000000000000000081565b34801561063657600080fd5b506102bd6106453660046116ac565b610e7e565b34801561065657600080fd5b506102bd6106653660046117d3565b610f01565b600061067d610677610a48565b83610fb5565b92915050565b6000546001600160a01b03163314806106a657506001546001600160a01b031633145b6106cb5760405162461bcd60e51b81526004016106c290611979565b60405180910390fd5b604051339082156108fc029083906000818181858888f193505050501580156106f8573d6000803e3d6000fd5b5050565b6000546001600160a01b031633146107265760405162461bcd60e51b81526004016106c290611979565b610734600160075481161490565b151582151514610748576007805460011890555b610756600260075481161490565b1515811515146106f8576007805460021890555050565b6000336001600160a01b03871614806107ae5750336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016145b806107c357506001546001600160a01b031633145b6107ff5760405162461bcd60e51b815260206004820152600d60248201526c696e76616c69642063616c6c6560981b60448201526064016106c2565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316866001600160a01b0316141561084c576108458585858561100c565b90506108ca565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316866001600160a01b03161415610892576108458585858561129e565b60405162461bcd60e51b815260206004820152600d60248201526c34b73b30b634b2103a37b5b2b760991b60448201526064016106c2565b95945050505050565b6000806108de610a48565b90506000806108ed8386611a3c565b90505b8082101561094557600060026109068385611a24565b6109109190611a3c565b9050600061091e8583610fb5565b90508087111561093a57610933826001611a24565b935061093e565b8192505b50506108f0565b509392505050565b6000546001600160a01b031633146109775760405162461bcd60e51b81526004016106c290611979565b600755565b600061098c600160075481161490565b905090565b6000546001600160a01b031633146109bb5760405162461bcd60e51b81526004016106c290611979565b60005b85811015610a3f57610a2d8787838181106109db576109db611b67565b90506020020160208101906109f091906116ac565b868684818110610a0257610a02611b67565b90506020020135858585818110610a1b57610a1b611b67565b90506020028101906104ba919061199c565b80610a3781611b19565b9150506109be565b50505050505050565b600061098c42610bf2565b6000546001600160a01b03163314610a7d5760405162461bcd60e51b81526004016106c290611979565b610a898484848461142c565b5050505050565b6000610a9f338686868661076d565b50600195945050505050565b6000546001600160a01b03163314610ad55760405162461bcd60e51b81526004016106c290611979565b610ae9610ae0610a48565b60025542600455565b600591909155600655565b6000546001600160a01b03163314610b1e5760405162461bcd60e51b81526004016106c290611979565b610b2a8484848461142c565b5060405163a9059cbb60e01b81526001600160a01b038581166004830152602482018590527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb90604401602060405180830381600087803b158015610b9557600080fd5b505af1158015610ba9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a89919061186d565b600061067d60035483610be09190611ae3565b610be8610a48565b6106779190611b02565b6000610bff600554151590565b15610c6357600060045483610c149190611b02565b9050600060065460055483610c299190611a3c565b610c339190611a5e565b9050600081600254610c4591906119e3565b90506000811215610c5b57506000949350505050565b949350505050565b505060025490565b919050565b610c7d858585858561076d565b505050505050565b6000546001600160a01b0316331480610ca857506001546001600160a01b031633145b610cc45760405162461bcd60e51b81526004016106c290611979565b60405163a9059cbb60e01b81526001600160a01b0383811660048301526024820183905284169063a9059cbb906044015b602060405180830381600087803b158015610d0f57600080fd5b505af1158015610d23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d47919061186d565b50505050565b6000546001600160a01b03163314610d775760405162461bcd60e51b81526004016106c290611979565b60405163095ea7b360e01b81526001600160a01b0383811660048301526024820183905284169063095ea7b390604401610cf5565b6000546001600160a01b03163314610dd65760405162461bcd60e51b81526004016106c290611979565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b600061098c600260075481161490565b6000546001600160a01b03163314610e6b5760405162461bcd60e51b81526004016106c290611979565b610e788260025542600455565b60035550565b6000546001600160a01b03163314610ea85760405162461bcd60e51b81526004016106c290611979565b600180546001600160a01b0319166001600160a01b038316908117909155604080519182523360208301527f9dd461e0e3ea931454353c64df48625d3a1e4170d434479509d9a7f17cd070bf910160405180910390a150565b6000546001600160a01b03163314610f2b5760405162461bcd60e51b81526004016106c290611979565b60005b85811015610a3f57610fa2878783818110610f4b57610f4b611b67565b9050602002016020810190610f6091906116ac565b868684818110610f7257610f72611b67565b90506020020135858585818110610f8b57610f8b611b67565b9050602002810190610f9d919061199c565b61142c565b5080610fad81611b19565b915050610f2e565b600081610fc45750600061067d565b600354600090610fd5600185611b02565b610fdf9190611ae3565b610fe99085611a24565b9050826002610ff88387611a24565b6110029190611a3c565b610c5b9190611ae3565b600061101c600260075481161490565b61105b5760405162461bcd60e51b815260206004820152601060248201526f1cd95b1b1a5b99c8191a5cd8589b195960821b60448201526064016106c2565b600061106685610bcd565b90507f00000000000000000000000000000000000000000000000000000000000000006000600354876110999190611ae3565b600260008282546110aa9190611b02565b9091555050801561114b5760405163a9059cbb60e01b81527329fe8914e76da5ce2d90de98a64d0055f199d06d6004820152602481018290526001600160a01b0383169063a9059cbb90604401602060405180830381600087803b15801561111157600080fd5b505af1158015611125573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611149919061186d565b505b6111558686611545565b156111f4576001600160a01b03821663a9059cbb896111748487611b02565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b1580156111ba57600080fd5b505af11580156111ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111f2919061186d565b505b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f424641a08047715d4b70195e1d90818d302683d9f65f41910ca13f5a486d37cc89888861124b8c611b34565b7f00000000000000000000000000000000000000000000000000000000000000008988611276610a48565b60405161128a989796959493929190611927565b60405180910390a250909695505050505050565b6000806112aa856108d3565b905060006112ba8783878761142c565b90508581101561137e576001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663a9059cbb886112fe848a611b02565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b15801561134457600080fd5b505af1158015611358573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061137c919061186d565b505b60405163a9059cbb60e01b81526001600160a01b038881166004830152602482018490527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb90604401602060405180830381600087803b1580156113e857600080fd5b505af11580156113fc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611420919061186d565b50909695505050505050565b600061143c600160075481161490565b61147a5760405162461bcd60e51b815260206004820152600f60248201526e189d5e5a5b99c8191a5cd8589b1959608a1b60448201526064016106c2565b60006114858561066a565b9050600354856114959190611ae3565b6002546114a29190611a24565b6002556001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f424641a08047715d4b70195e1d90818d302683d9f65f41910ca13f5a486d37cc878686897f0000000000000000000000000000000000000000000000000000000000000000876000611520610a48565b604051611534989796959493929190611927565b60405180910390a295945050505050565b60008115806115545750601482145b156115615750600161067d565b600160f81b838360008161157757611577611b67565b9050013560f81c60f81b6001600160f81b03191614156115995750600161067d565b600160f91b83836000816115af576115af611b67565b9050013560f81c60f81b6001600160f81b03191614156115d15750600061067d565b60405162461bcd60e51b815260206004820152600b60248201526a3ab735b737bbb7103932b360a91b60448201526064016106c2565b80356001600160a01b0381168114610c6b57600080fd5b60008083601f84011261163057600080fd5b50813567ffffffffffffffff81111561164857600080fd5b6020830191508360208260051b850101111561166357600080fd5b9250929050565b60008083601f84011261167c57600080fd5b50813567ffffffffffffffff81111561169457600080fd5b60208301915083602082850101111561166357600080fd5b6000602082840312156116be57600080fd5b6116c782611607565b9392505050565b6000806000606084860312156116e357600080fd5b6116ec84611607565b92506116fa60208501611607565b9150604084013590509250925092565b60008060008060006080868803121561172257600080fd5b61172b86611607565b945061173960208701611607565b935060408601359250606086013567ffffffffffffffff81111561175c57600080fd5b6117688882890161166a565b969995985093965092949392505050565b6000806000806060858703121561178f57600080fd5b61179885611607565b935060208501359250604085013567ffffffffffffffff8111156117bb57600080fd5b6117c78782880161166a565b95989497509550505050565b600080600080600080606087890312156117ec57600080fd5b863567ffffffffffffffff8082111561180457600080fd5b6118108a838b0161161e565b9098509650602089013591508082111561182957600080fd5b6118358a838b0161161e565b9096509450604089013591508082111561184e57600080fd5b5061185b89828a0161161e565b979a9699509497509295939492505050565b60006020828403121561187f57600080fd5b81516116c781611b7d565b6000806040838503121561189d57600080fd5b82356118a881611b7d565b915060208301356118b881611b7d565b809150509250929050565b6000602082840312156118d557600080fd5b5035919050565b600080604083850312156118ef57600080fd5b50508035926020909101359150565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b600060018060a01b03808b16835260e0602084015261194a60e084018a8c6118fe565b6040840198909852959095166060820152608081019390935260a083019190915260c090910152509392505050565b6020808252600990820152683737ba1037bbb732b960b91b604082015260600190565b6000808335601e198436030181126119b357600080fd5b83018035915067ffffffffffffffff8211156119ce57600080fd5b60200191503681900382131561166357600080fd5b600080821280156001600160ff1b0384900385131615611a0557611a05611b51565b600160ff1b8390038412811615611a1e57611a1e611b51565b50500190565b60008219821115611a3757611a37611b51565b500190565b600082611a5957634e487b7160e01b600052601260045260246000fd5b500490565b60006001600160ff1b0381841382841380821686840486111615611a8457611a84611b51565b600160ff1b6000871282811687830589121615611aa357611aa3611b51565b60008712925087820587128484161615611abf57611abf611b51565b87850587128184161615611ad557611ad5611b51565b505050929093029392505050565b6000816000190483118215151615611afd57611afd611b51565b500290565b600082821015611b1457611b14611b51565b500390565b6000600019821415611b2d57611b2d611b51565b5060010190565b6000600160ff1b821415611b4a57611b4a611b51565b5060000390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b8015158114611b8b57600080fd5b5056fea26469706673582212209d61237aaead170be2c5a81ab52b018eeb595c504ccbff010eee4d1e4abb270264736f6c63430008070033",
  "deployedBytecode": "0x6080604052600436106102045760003560e01c80639bb8c0fd11610118578063d9caed12116100a0578063f771cb651161006f578063f771cb65146105c1578063f7d97577146105d6578063fc0c546a146105f6578063fff4da1f1461062a578063fff897451461064a57600080fd5b8063d9caed121461054b578063e06174e41461056b578063e1f21c6714610581578063f2fde38b146105a157600080fd5b8063ba730e53116100e7578063ba730e53146104bf578063bf13d438146104df578063c7780ab2146104ff578063d09de08a14610515578063d7e06ca81461052b57600080fd5b80639bb8c0fd1461043f578063a4c0ed361461045f578063afaefe9e1461047f578063b03a13fe1461049f57600080fd5b8063777adcf01161019b5780638a07d3d01161016a5780638a07d3d0146103b25780638da5cb5b146103d55780638ed2fe91146103f557806391be6ad51461040a57806398d5fdca1461042a57600080fd5b8063777adcf0146103465780637cd6a7fd146103665780637ff6c1911461038657806384b41fda1461039c57600080fd5b80635001f3b5116101d75780635001f3b5146102bf5780635c627935146102f357806369365c52146103135780636f7267b71461032657600080fd5b806308d4db141461020957806321bea8581461023c578063289469901461025d5780633bed33ce1461029d575b600080fd5b34801561021557600080fd5b506102296102243660046118c3565b61066a565b6040519081526020015b60405180910390f35b34801561024857600080fd5b506102296102573660046118c3565b50600090565b34801561026957600080fd5b506102857329fe8914e76da5ce2d90de98a64d0055f199d06d81565b6040516001600160a01b039091168152602001610233565b3480156102a957600080fd5b506102bd6102b83660046118c3565b610683565b005b3480156102cb57600080fd5b506102857f000000000000000000000000000000000000000000000000000000000000000081565b3480156102ff57600080fd5b506102bd61030e36600461188a565b6106fc565b61022961032136600461170a565b61076d565b34801561033257600080fd5b506102296103413660046118c3565b6108d3565b34801561035257600080fd5b50600154610285906001600160a01b031681565b34801561037257600080fd5b506102bd6103813660046118c3565b61094d565b34801561039257600080fd5b5061022960045481565b3480156103a857600080fd5b5061022960055481565b3480156103be57600080fd5b5060055415155b6040519015158152602001610233565b3480156103e157600080fd5b50600054610285906001600160a01b031681565b34801561040157600080fd5b506103c561097c565b34801561041657600080fd5b506102bd6104253660046117d3565b610991565b34801561043657600080fd5b50610229610a48565b34801561044b57600080fd5b506102bd61045a366004611779565b610a53565b34801561046b57600080fd5b506103c561047a366004611779565b610a90565b34801561048b57600080fd5b506102bd61049a3660046118dc565b610aab565b3480156104ab57600080fd5b506102bd6104ba366004611779565b610af4565b3480156104cb57600080fd5b506102296104da3660046118c3565b610bcd565b3480156104eb57600080fd5b506102296104fa3660046118c3565b610bf2565b34801561050b57600080fd5b5061022960065481565b34801561052157600080fd5b5061022960035481565b34801561053757600080fd5b506102bd61054636600461170a565b610c70565b34801561055757600080fd5b506102bd6105663660046116ce565b610c85565b34801561057757600080fd5b5061022960075481565b34801561058d57600080fd5b506102bd61059c3660046116ce565b610d4d565b3480156105ad57600080fd5b506102bd6105bc3660046116ac565b610dac565b3480156105cd57600080fd5b506103c5610e31565b3480156105e257600080fd5b506102bd6105f13660046118dc565b610e41565b34801561060257600080fd5b506102857f000000000000000000000000000000000000000000000000000000000000000081565b34801561063657600080fd5b506102bd6106453660046116ac565b610e7e565b34801561065657600080fd5b506102bd6106653660046117d3565b610f01565b600061067d610677610a48565b83610fb5565b92915050565b6000546001600160a01b03163314806106a657506001546001600160a01b031633145b6106cb5760405162461bcd60e51b81526004016106c290611979565b60405180910390fd5b604051339082156108fc029083906000818181858888f193505050501580156106f8573d6000803e3d6000fd5b5050565b6000546001600160a01b031633146107265760405162461bcd60e51b81526004016106c290611979565b610734600160075481161490565b151582151514610748576007805460011890555b610756600260075481161490565b1515811515146106f8576007805460021890555050565b6000336001600160a01b03871614806107ae5750336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016145b806107c357506001546001600160a01b031633145b6107ff5760405162461bcd60e51b815260206004820152600d60248201526c696e76616c69642063616c6c6560981b60448201526064016106c2565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316866001600160a01b0316141561084c576108458585858561100c565b90506108ca565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316866001600160a01b03161415610892576108458585858561129e565b60405162461bcd60e51b815260206004820152600d60248201526c34b73b30b634b2103a37b5b2b760991b60448201526064016106c2565b95945050505050565b6000806108de610a48565b90506000806108ed8386611a3c565b90505b8082101561094557600060026109068385611a24565b6109109190611a3c565b9050600061091e8583610fb5565b90508087111561093a57610933826001611a24565b935061093e565b8192505b50506108f0565b509392505050565b6000546001600160a01b031633146109775760405162461bcd60e51b81526004016106c290611979565b600755565b600061098c600160075481161490565b905090565b6000546001600160a01b031633146109bb5760405162461bcd60e51b81526004016106c290611979565b60005b85811015610a3f57610a2d8787838181106109db576109db611b67565b90506020020160208101906109f091906116ac565b868684818110610a0257610a02611b67565b90506020020135858585818110610a1b57610a1b611b67565b90506020028101906104ba919061199c565b80610a3781611b19565b9150506109be565b50505050505050565b600061098c42610bf2565b6000546001600160a01b03163314610a7d5760405162461bcd60e51b81526004016106c290611979565b610a898484848461142c565b5050505050565b6000610a9f338686868661076d565b50600195945050505050565b6000546001600160a01b03163314610ad55760405162461bcd60e51b81526004016106c290611979565b610ae9610ae0610a48565b60025542600455565b600591909155600655565b6000546001600160a01b03163314610b1e5760405162461bcd60e51b81526004016106c290611979565b610b2a8484848461142c565b5060405163a9059cbb60e01b81526001600160a01b038581166004830152602482018590527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb90604401602060405180830381600087803b158015610b9557600080fd5b505af1158015610ba9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a89919061186d565b600061067d60035483610be09190611ae3565b610be8610a48565b6106779190611b02565b6000610bff600554151590565b15610c6357600060045483610c149190611b02565b9050600060065460055483610c299190611a3c565b610c339190611a5e565b9050600081600254610c4591906119e3565b90506000811215610c5b57506000949350505050565b949350505050565b505060025490565b919050565b610c7d858585858561076d565b505050505050565b6000546001600160a01b0316331480610ca857506001546001600160a01b031633145b610cc45760405162461bcd60e51b81526004016106c290611979565b60405163a9059cbb60e01b81526001600160a01b0383811660048301526024820183905284169063a9059cbb906044015b602060405180830381600087803b158015610d0f57600080fd5b505af1158015610d23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d47919061186d565b50505050565b6000546001600160a01b03163314610d775760405162461bcd60e51b81526004016106c290611979565b60405163095ea7b360e01b81526001600160a01b0383811660048301526024820183905284169063095ea7b390604401610cf5565b6000546001600160a01b03163314610dd65760405162461bcd60e51b81526004016106c290611979565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b600061098c600260075481161490565b6000546001600160a01b03163314610e6b5760405162461bcd60e51b81526004016106c290611979565b610e788260025542600455565b60035550565b6000546001600160a01b03163314610ea85760405162461bcd60e51b81526004016106c290611979565b600180546001600160a01b0319166001600160a01b038316908117909155604080519182523360208301527f9dd461e0e3ea931454353c64df48625d3a1e4170d434479509d9a7f17cd070bf910160405180910390a150565b6000546001600160a01b03163314610f2b5760405162461bcd60e51b81526004016106c290611979565b60005b85811015610a3f57610fa2878783818110610f4b57610f4b611b67565b9050602002016020810190610f6091906116ac565b868684818110610f7257610f72611b67565b90506020020135858585818110610f8b57610f8b611b67565b9050602002810190610f9d919061199c565b61142c565b5080610fad81611b19565b915050610f2e565b600081610fc45750600061067d565b600354600090610fd5600185611b02565b610fdf9190611ae3565b610fe99085611a24565b9050826002610ff88387611a24565b6110029190611a3c565b610c5b9190611ae3565b600061101c600260075481161490565b61105b5760405162461bcd60e51b815260206004820152601060248201526f1cd95b1b1a5b99c8191a5cd8589b195960821b60448201526064016106c2565b600061106685610bcd565b90507f00000000000000000000000000000000000000000000000000000000000000006000600354876110999190611ae3565b600260008282546110aa9190611b02565b9091555050801561114b5760405163a9059cbb60e01b81527329fe8914e76da5ce2d90de98a64d0055f199d06d6004820152602481018290526001600160a01b0383169063a9059cbb90604401602060405180830381600087803b15801561111157600080fd5b505af1158015611125573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611149919061186d565b505b6111558686611545565b156111f4576001600160a01b03821663a9059cbb896111748487611b02565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b1580156111ba57600080fd5b505af11580156111ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111f2919061186d565b505b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f424641a08047715d4b70195e1d90818d302683d9f65f41910ca13f5a486d37cc89888861124b8c611b34565b7f00000000000000000000000000000000000000000000000000000000000000008988611276610a48565b60405161128a989796959493929190611927565b60405180910390a250909695505050505050565b6000806112aa856108d3565b905060006112ba8783878761142c565b90508581101561137e576001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663a9059cbb886112fe848a611b02565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b15801561134457600080fd5b505af1158015611358573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061137c919061186d565b505b60405163a9059cbb60e01b81526001600160a01b038881166004830152602482018490527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb90604401602060405180830381600087803b1580156113e857600080fd5b505af11580156113fc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611420919061186d565b50909695505050505050565b600061143c600160075481161490565b61147a5760405162461bcd60e51b815260206004820152600f60248201526e189d5e5a5b99c8191a5cd8589b1959608a1b60448201526064016106c2565b60006114858561066a565b9050600354856114959190611ae3565b6002546114a29190611a24565b6002556001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f424641a08047715d4b70195e1d90818d302683d9f65f41910ca13f5a486d37cc878686897f0000000000000000000000000000000000000000000000000000000000000000876000611520610a48565b604051611534989796959493929190611927565b60405180910390a295945050505050565b60008115806115545750601482145b156115615750600161067d565b600160f81b838360008161157757611577611b67565b9050013560f81c60f81b6001600160f81b03191614156115995750600161067d565b600160f91b83836000816115af576115af611b67565b9050013560f81c60f81b6001600160f81b03191614156115d15750600061067d565b60405162461bcd60e51b815260206004820152600b60248201526a3ab735b737bbb7103932b360a91b60448201526064016106c2565b80356001600160a01b0381168114610c6b57600080fd5b60008083601f84011261163057600080fd5b50813567ffffffffffffffff81111561164857600080fd5b6020830191508360208260051b850101111561166357600080fd5b9250929050565b60008083601f84011261167c57600080fd5b50813567ffffffffffffffff81111561169457600080fd5b60208301915083602082850101111561166357600080fd5b6000602082840312156116be57600080fd5b6116c782611607565b9392505050565b6000806000606084860312156116e357600080fd5b6116ec84611607565b92506116fa60208501611607565b9150604084013590509250925092565b60008060008060006080868803121561172257600080fd5b61172b86611607565b945061173960208701611607565b935060408601359250606086013567ffffffffffffffff81111561175c57600080fd5b6117688882890161166a565b969995985093965092949392505050565b6000806000806060858703121561178f57600080fd5b61179885611607565b935060208501359250604085013567ffffffffffffffff8111156117bb57600080fd5b6117c78782880161166a565b95989497509550505050565b600080600080600080606087890312156117ec57600080fd5b863567ffffffffffffffff8082111561180457600080fd5b6118108a838b0161161e565b9098509650602089013591508082111561182957600080fd5b6118358a838b0161161e565b9096509450604089013591508082111561184e57600080fd5b5061185b89828a0161161e565b979a9699509497509295939492505050565b60006020828403121561187f57600080fd5b81516116c781611b7d565b6000806040838503121561189d57600080fd5b82356118a881611b7d565b915060208301356118b881611b7d565b809150509250929050565b6000602082840312156118d557600080fd5b5035919050565b600080604083850312156118ef57600080fd5b50508035926020909101359150565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b600060018060a01b03808b16835260e0602084015261194a60e084018a8c6118fe565b6040840198909852959095166060820152608081019390935260a083019190915260c090910152509392505050565b6020808252600990820152683737ba1037bbb732b960b91b604082015260600190565b6000808335601e198436030181126119b357600080fd5b83018035915067ffffffffffffffff8211156119ce57600080fd5b60200191503681900382131561166357600080fd5b600080821280156001600160ff1b0384900385131615611a0557611a05611b51565b600160ff1b8390038412811615611a1e57611a1e611b51565b50500190565b60008219821115611a3757611a37611b51565b500190565b600082611a5957634e487b7160e01b600052601260045260246000fd5b500490565b60006001600160ff1b0381841382841380821686840486111615611a8457611a84611b51565b600160ff1b6000871282811687830589121615611aa357611aa3611b51565b60008712925087820587128484161615611abf57611abf611b51565b87850587128184161615611ad557611ad5611b51565b505050929093029392505050565b6000816000190483118215151615611afd57611afd611b51565b500290565b600082821015611b1457611b14611b51565b500390565b6000600019821415611b2d57611b2d611b51565b5060010190565b6000600160ff1b821415611b4a57611b4a611b51565b5060000390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b8015158114611b8b57600080fd5b5056fea26469706673582212209d61237aaead170be2c5a81ab52b018eeb595c504ccbff010eee4d1e4abb270264736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "processIncoming(address,address,uint256,bytes)": {
        "notice": "Payment hub might actually have sent another accepted token, including Ether."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 8231,
        "contract": "src/brokerbot/LicensedBrokerbot.sol:LicensedBrokerbot",
        "label": "owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 1376,
        "contract": "src/brokerbot/LicensedBrokerbot.sol:LicensedBrokerbot",
        "label": "paymenthub",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 1385,
        "contract": "src/brokerbot/LicensedBrokerbot.sol:LicensedBrokerbot",
        "label": "price",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 1387,
        "contract": "src/brokerbot/LicensedBrokerbot.sol:LicensedBrokerbot",
        "label": "increment",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 1389,
        "contract": "src/brokerbot/LicensedBrokerbot.sol:LicensedBrokerbot",
        "label": "driftStart",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 1391,
        "contract": "src/brokerbot/LicensedBrokerbot.sol:LicensedBrokerbot",
        "label": "timeToDrift",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 1393,
        "contract": "src/brokerbot/LicensedBrokerbot.sol:LicensedBrokerbot",
        "label": "driftIncrement",
        "offset": 0,
        "slot": "6",
        "type": "t_int256"
      },
      {
        "astId": 1418,
        "contract": "src/brokerbot/LicensedBrokerbot.sol:LicensedBrokerbot",
        "label": "settings",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_int256": {
        "encoding": "inplace",
        "label": "int256",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}