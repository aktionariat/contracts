{
  "address": "0x7bcF5079669866A77425542c48881E5E9642c221",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_shareToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_increment",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_baseCurrency",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_paymentHub",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newPaymentHub",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "who",
          "type": "address"
        }
      ],
      "name": "ChangePaymentHub",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "ref",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "amount",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "base",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totPrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newprice",
          "type": "uint256"
        }
      ],
      "name": "Trade",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "COPYRIGHT",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "erc20",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "base",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "buyingEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "driftIncrement",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "driftStart",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "getBuyPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "totPrice",
          "type": "uint256"
        }
      ],
      "name": "getLicenseFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "getPriceAtTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "getSellPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "money",
          "type": "uint256"
        }
      ],
      "name": "getShares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "hasDrift",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "increment",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "ref",
          "type": "bytes"
        }
      ],
      "name": "notifyTrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "ref",
          "type": "bytes"
        }
      ],
      "name": "notifyTradeAndTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "buyers",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "shares",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes[]",
          "name": "ref",
          "type": "bytes[]"
        }
      ],
      "name": "notifyTrades",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "buyers",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "shares",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes[]",
          "name": "ref",
          "type": "bytes[]"
        }
      ],
      "name": "notifyTradesAndTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "ref",
          "type": "bytes"
        }
      ],
      "name": "onTokenTransfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "ref",
          "type": "bytes"
        }
      ],
      "name": "onTokenTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paymenthub",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "ref",
          "type": "bytes"
        }
      ],
      "name": "processIncoming",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sellingEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "secondsPerStep",
          "type": "uint256"
        },
        {
          "internalType": "int256",
          "name": "newDriftIncrement",
          "type": "int256"
        }
      ],
      "name": "setDrift",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "newBuyingEnabled",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "newSellingEnabled",
          "type": "bool"
        }
      ],
      "name": "setEnabled",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "hub",
          "type": "address"
        }
      ],
      "name": "setPaymentHub",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "newIncrement",
          "type": "uint256"
        }
      ],
      "name": "setPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "settings_",
          "type": "uint256"
        }
      ],
      "name": "setSettings",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "settings",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timeToDrift",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "ercAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawEther",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xb56885d9410e1319c8c34ebb707000a37a7ac5425a2f9df738b95373de323569",
  "receipt": {
    "to": null,
    "from": "0x39E5351E6CE3c4B19B8b0a2F5C82c511782457BE",
    "contractAddress": "0x7bcF5079669866A77425542c48881E5E9642c221",
    "transactionIndex": 53,
    "gasUsed": "1712193",
    "logsBloom": "0x
    "blockHash": "0x0925ac0de88ceb4e00e70adfd416ae60aba752c381876a9e2e2c92a2412b309c",
    "transactionHash": "0xb56885d9410e1319c8c34ebb707000a37a7ac5425a2f9df738b95373de323569",
    "logs": [
      {
        "transactionIndex": 53,
        "blockNumber": 11900754,
        "transactionHash": "0xb56885d9410e1319c8c34ebb707000a37a7ac5425a2f9df738b95373de323569",
        "address": "0x7bcF5079669866A77425542c48881E5E9642c221",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000007c1c862953165cd5a01cfaa13ef539dfdd93a9b6"
        ],
        "data": "0x",
        "logIndex": 13,
        "blockHash": "0x0925ac0de88ceb4e00e70adfd416ae60aba752c381876a9e2e2c92a2412b309c"
      }
    ],
    "blockNumber": 11900754,
    "cumulativeGasUsed": "5082769",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xbf0e13ab37573ABB68ff9C33Ee9FF8148b8a61E2",
    "500000000000000000",
    20000000000000,
    "0x6b175474e89094c44da98b954eedeac495271d0f",
    "0x7c1c862953165cd5a01cfaa13ef539dfdd93a9b6",
    "0x99D77d8FD7E78C3d4fCC85Dcca494B71ac42845E"
  ],
  "numDeployments": 1,
  "solcInputHash": "3a8d93c9bf1cdabbfe33adbd981a1060",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_shareToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_increment\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_baseCurrency\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_paymentHub\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newPaymentHub\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"ChangePaymentHub\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"ref\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"base\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newprice\",\"type\":\"uint256\"}],\"name\":\"Trade\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"COPYRIGHT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"erc20\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"base\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyingEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"driftIncrement\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"driftStart\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"getBuyPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"totPrice\",\"type\":\"uint256\"}],\"name\":\"getLicenseFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"getPriceAtTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"getSellPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"money\",\"type\":\"uint256\"}],\"name\":\"getShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hasDrift\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"increment\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ref\",\"type\":\"bytes\"}],\"name\":\"notifyTrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ref\",\"type\":\"bytes\"}],\"name\":\"notifyTradeAndTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"buyers\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"ref\",\"type\":\"bytes[]\"}],\"name\":\"notifyTrades\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"buyers\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"ref\",\"type\":\"bytes[]\"}],\"name\":\"notifyTradesAndTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ref\",\"type\":\"bytes\"}],\"name\":\"onTokenTransfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ref\",\"type\":\"bytes\"}],\"name\":\"onTokenTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paymenthub\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ref\",\"type\":\"bytes\"}],\"name\":\"processIncoming\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellingEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"secondsPerStep\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"newDriftIncrement\",\"type\":\"int256\"}],\"name\":\"setDrift\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"newBuyingEnabled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"newSellingEnabled\",\"type\":\"bool\"}],\"name\":\"setEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"hub\",\"type\":\"address\"}],\"name\":\"setPaymentHub\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newIncrement\",\"type\":\"uint256\"}],\"name\":\"setPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"settings_\",\"type\":\"uint256\"}],\"name\":\"setSettings\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"settings\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timeToDrift\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ercAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawEther\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"processIncoming(address,address,uint256,bytes)\":{\"notice\":\"Payment hub might actually have sent another accepted token, including Ether.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/brokerbot/Brokerbot.sol\":\"Brokerbot\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/ERC20/IERC20.sol\":{\"content\":\"/**\\n* SPDX-License-Identifier: MIT\\n*\\n* Copyright (c) 2016-2019 zOS Global Limited\\n*\\n*/\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP. Does not include\\n * the optional functions; to access them see `ERC20Detailed`.\\n */\\n\\ninterface IERC20 {\\n\\n    // Optional functions\\n    function name() external view returns (string memory);\\n\\n    function symbol() external view returns (string memory);\\n\\n    event NameChanged(string name, string symbol);\\n\\n    function decimals() external view returns (uint8);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a `Transfer` event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through `transferFrom`. This is\\n     * zero by default.\\n     *\\n     * This value changes when `approve` or `transferFrom` are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * > Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an `Approval` event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a `Transfer` event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to `approve`. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n}\",\"keccak256\":\"0xfaefd97261d6413e7b891435756e82b7133d5c7c854ab04af50b2ab089136f4b\",\"license\":\"MIT\"},\"src/ERC20/IERC677Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IERC677Receiver {\\n    \\n    function onTokenTransfer(address from, uint256 amount, bytes calldata data) external returns (bool);\\n\\n}\",\"keccak256\":\"0x40703acdfa2126286b117ad0cca84c0a4ca2d3b18586765186c9bdd8ad5cf744\",\"license\":\"MIT\"},\"src/brokerbot/Brokerbot.sol\":{\"content\":\"/**\\n* SPDX-License-Identifier: LicenseRef-Aktionariat\\n*\\n* MIT License with Automated License Fee Payments\\n*\\n* COPYRIGHT (c) 2020 Aktionariat AG (aktionariat.com)\\n*\\n* Permission is hereby granted to any person obtaining a copy of this software\\n* and associated documentation files (the \\\"Software\\\"), to deal in the Software\\n* without restriction, including without limitation the rights to use, copy,\\n* modify, merge, publish, distribute, sublicense, and/or sell copies of the\\n* Software, and to permit persons to whom the Software is furnished to do so,\\n* subject to the following conditions:\\n*\\n* - The above COPYRIGHT notice and this permission notice shall be included in\\n*   all copies or substantial portions of the Software.\\n* - All automated license fee payments integrated into this and related Software\\n*   are preserved.\\n*\\n* THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\n* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\n* SOFTWARE.\\n*/\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Ownable.sol\\\";\\nimport \\\"../ERC20/IERC20.sol\\\";\\nimport \\\"../ERC20/IERC677Receiver.sol\\\";\\n\\ncontract Brokerbot is Ownable {\\n\\n    address public paymenthub;\\n\\n    address public immutable base;  // ERC-20 currency\\n    address public immutable token; // ERC-20 share token\\n\\n    address public constant COPYRIGHT = 0x29Fe8914e76da5cE2d90De98a64d0055f199d06D; // Aktionariat AG\\n\\n    uint256 private price; // current offer price, without drift\\n    uint256 public increment; // increment\\n\\n    uint256 public driftStart;\\n    uint256 public timeToDrift; // seconds until drift pushes price by one drift increment\\n    int256 public driftIncrement;\\n\\n    uint8 private constant LICENSEFEEBPS = 90;\\n\\n    // Note that these settings might be hard-coded in various places, so better not change these values.\\n    uint8 private constant BUYING_ENABLED = 0x1;\\n    uint8 private constant SELLING_ENABLED = 0x2;\\n    // note that in the UI, we call the setting \\\"convert ether\\\", which is the opposite\\n    uint8 private constant KEEP_ETHER = 0x4;\\n    uint8 private constant VERSION = 0x1;\\n\\n    // more bits to be used by payment hub\\n    uint256 public settings = BUYING_ENABLED | SELLING_ENABLED | (VERSION<<248);\\n\\n    event Trade(address indexed token, address who, bytes ref, int amount, address base, uint totPrice, uint fee, uint newprice);\\n    event ChangePaymentHub(address newPaymentHub, address who);\\n\\n    constructor(\\n        address _shareToken,\\n        uint256 _price,\\n        uint256 _increment,\\n        address _baseCurrency,\\n        address _owner,\\n        address _paymentHub\\n    )\\n        Ownable(_owner)\\n    {\\n        base = _baseCurrency;\\n        token = _shareToken;\\n        price = _price;\\n        increment = _increment;\\n        paymenthub = _paymentHub;\\n        // Should we disabled recoverability in the recovery hub here?\\n        // No, if someone attacks us, we can always trigger a transfer and recover the tokens as well as the collateral.\\n    }\\n\\n    function setPrice(uint256 newPrice, uint256 newIncrement) external onlyOwner {\\n        anchorPrice(newPrice);\\n        increment = newIncrement;\\n    }\\n\\n    function hasDrift() public view returns (bool) {\\n        return timeToDrift != 0;\\n    }\\n\\n    // secondsPerStep should be negative for downwards drift\\n    function setDrift(uint256 secondsPerStep, int256 newDriftIncrement) external onlyOwner {\\n        anchorPrice(getPrice());\\n        timeToDrift = secondsPerStep;\\n        driftIncrement = newDriftIncrement;\\n    }\\n\\n    function anchorPrice(uint256 currentPrice) private {\\n        price = currentPrice;\\n        // rely on time stamp is ok, no exact time stamp needed\\n        // solhint-disable-next-line not-rely-on-time\\n        driftStart = block.timestamp;\\n    }\\n\\n    function getPrice() public view returns (uint256) {\\n        // rely on time stamp is ok, no exact time stamp needed\\n        // solhint-disable-next-line not-rely-on-time\\n        return getPriceAtTime(block.timestamp);\\n    }\\n\\n    function getPriceAtTime(uint256 timestamp) public view returns (uint256) {\\n        if (hasDrift()){\\n            uint256 passed = timestamp - driftStart;\\n            int256 drifted = int256(passed / timeToDrift) * driftIncrement;\\n            int256 driftedPrice = int256(price) + drifted;\\n            if (driftedPrice < 0){\\n                return 0;\\n            } else {\\n                return uint256(driftedPrice);\\n            }\\n        } else {\\n            return price;\\n        }\\n    }\\n\\n    function buy(address from, uint256 paid, bytes calldata ref) internal returns (uint256) {\\n        uint shares = getShares(paid);\\n        uint costs = notifyTraded(from, shares, ref);\\n        if (costs < paid){\\n            IERC20(base).transfer(from, paid - costs);\\n        }\\n        IERC20(token).transfer(from, shares);\\n        return shares;\\n    }\\n\\n    function notifyTraded(address from, uint256 shares, bytes calldata ref) internal returns (uint256) {\\n        require(hasSetting(BUYING_ENABLED), \\\"buying disabled\\\");\\n        uint costs = getBuyPrice(shares);\\n        price = price + (shares * increment);\\n        emit Trade(token, from, ref, int256(shares), base, costs, 0, getPrice());\\n        return costs;\\n    }\\n\\n    function notifyTrade(address buyer, uint256 shares, bytes calldata ref) external onlyOwner {\\n        notifyTraded(buyer, shares, ref);\\n    }\\n\\n    function notifyTradeAndTransfer(address buyer, uint256 shares, bytes calldata ref) public onlyOwner {\\n        notifyTraded(buyer, shares, ref);\\n        IERC20(token).transfer(buyer, shares);\\n    }\\n\\n    function notifyTrades(address[] calldata buyers, uint256[] calldata shares, bytes[] calldata ref) external onlyOwner {\\n        for (uint i = 0; i < buyers.length; i++) {\\n            notifyTraded(buyers[i], shares[i], ref[i]);\\n        }\\n    }\\n\\n    function notifyTradesAndTransfer(address[] calldata buyers, uint256[] calldata shares, bytes[] calldata ref) external onlyOwner {\\n        for (uint i = 0; i < buyers.length; i++) {\\n            notifyTradeAndTransfer(buyers[i], shares[i], ref[i]);\\n        }\\n    }\\n\\n    /**\\n     * Payment hub might actually have sent another accepted token, including Ether.\\n     */\\n    function processIncoming(address token_, address from, uint256 amount, bytes calldata ref) public payable returns (uint256) {\\n        require(msg.sender == token_ || msg.sender == base || msg.sender == paymenthub, \\\"invalid calle\\\");\\n        if (token_ == token){\\n            return sell(from, amount, ref);\\n        } else if (token_ == base){\\n            return buy(from, amount, ref);\\n        } else {\\n            require(false, \\\"invalid token\\\");\\n            return 0;\\n        }\\n    }\\n\\n    // ERC-677 recipient\\n    function onTokenTransfer(address from, uint256 amount, bytes calldata ref) external returns (bool) {\\n        processIncoming(msg.sender, from, amount, ref);\\n        return true;\\n    }\\n\\n    // (deprecated ITokenReceiver, still called by old payment hub)\\n    function onTokenTransfer(address token_, address from, uint256 amount, bytes calldata ref) external {\\n        processIncoming(token_, from, amount, ref);\\n    }\\n\\n    function buyingEnabled() external view returns (bool){\\n        return hasSetting(BUYING_ENABLED);\\n    }\\n\\n    function sellingEnabled() external view returns (bool){\\n        return hasSetting(SELLING_ENABLED);\\n    }\\n\\n    function hasSetting(uint256 setting) private view returns (bool) {\\n        return settings & setting == setting;\\n    }\\n\\n    function isDirectSale(bytes calldata ref) internal pure returns (bool) {\\n        if (ref.length == 0 || ref.length == 20) {\\n            return true; // old format\\n        } else {\\n            if (ref[0] == bytes1(0x01)){\\n                return true;\\n            } else if (ref[0] == bytes1(0x02)) {\\n                return false;\\n            } else {\\n                require(false, \\\"unknown ref\\\");\\n                return true;\\n            }\\n        }\\n    }\\n\\n\\n    function sell(address recipient, uint256 amount, bytes calldata ref) internal returns (uint256) {\\n        require(hasSetting(SELLING_ENABLED), \\\"selling disabled\\\");\\n        uint256 totPrice = getSellPrice(amount);\\n        IERC20 baseToken = IERC20(base);\\n        uint256 fee = getLicenseFee(totPrice);\\n        price -= amount * increment;\\n        if (fee > 0){\\n            baseToken.transfer(COPYRIGHT, fee);\\n        }\\n        if (isDirectSale(ref)){\\n            baseToken.transfer(recipient, totPrice - fee);\\n        }\\n        emit Trade(token, recipient, ref, -int256(amount), base, totPrice, fee, getPrice());\\n        return totPrice;\\n    }\\n\\n    function getLicenseFee(uint256 totPrice) public virtual pure returns (uint256) {\\n        return totPrice * LICENSEFEEBPS / 10000;\\n    }\\n\\n    function getSellPrice(uint256 shares) public view returns (uint256) {\\n        return getPrice(getPrice() - (shares * increment), shares);\\n    }\\n\\n    function getBuyPrice(uint256 shares) public view returns (uint256) {\\n        return getPrice(getPrice(), shares);\\n    }\\n\\n    function getPrice(uint256 lowest, uint256 shares) internal view returns (uint256){\\n        if (shares == 0) {\\n            return 0;\\n        } else {\\n            uint256 highest = lowest + (shares - 1) * increment;\\n            return ((lowest + highest) / 2) * shares;\\n        }\\n    }\\n\\n    function getShares(uint256 money) public view returns (uint256) {\\n        uint256 currentPrice = getPrice();\\n        uint256 min = 0;\\n        uint256 max = money / currentPrice;\\n        while (min < max){\\n            uint256 middle = (min + max)/2;\\n            uint256 totalPrice = getPrice(currentPrice, middle);\\n            if (money > totalPrice){\\n                min = middle + 1;\\n            } else {\\n                max = middle;\\n            }\\n        }\\n        return min;\\n    }\\n\\n    function withdrawEther(uint256 amount) external ownerOrHub() {\\n        payable(msg.sender).transfer(amount); // return change\\n    }\\n\\n    function approve(address erc20, address who, uint256 amount) external onlyOwner() {\\n        IERC20(erc20).approve(who, amount);\\n    }\\n\\n    function withdraw(address ercAddress, address to, uint256 amount) external ownerOrHub() {\\n        IERC20(ercAddress).transfer(to, amount);\\n    }\\n\\n    function setPaymentHub(address hub) external onlyOwner() {\\n        paymenthub = hub;\\n        emit ChangePaymentHub(paymenthub, msg.sender);\\n    }\\n\\n    function setSettings(uint256 settings_) external onlyOwner() {\\n        settings = settings_;\\n    }\\n\\n    function setEnabled(bool newBuyingEnabled, bool newSellingEnabled) external onlyOwner() {\\n        if (newBuyingEnabled != hasSetting(BUYING_ENABLED)){\\n            settings ^= BUYING_ENABLED;\\n        }\\n        if (newSellingEnabled != hasSetting(SELLING_ENABLED)){\\n            settings ^= SELLING_ENABLED;\\n        }\\n    }\\n    \\n    modifier ownerOrHub() {\\n        require(owner == msg.sender || paymenthub == msg.sender, \\\"not owner\\\");\\n        _;\\n    }\\n}\",\"keccak256\":\"0x26dbe8fde14a0780da46154ffecb431b4ad90bd56552ad487b4ed43e44f2be1a\",\"license\":\"LicenseRef-Aktionariat\"},\"src/utils/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n//\\n// From https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\\n//\\n// Modifications:\\n// - Replaced Context._msgSender() with msg.sender\\n// - Made leaner\\n// - Extracted interface\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\ncontract Ownable {\\n\\n    address public owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor (address initialOwner) {\\n        owner = initialOwner;\\n        emit OwnershipTransferred(address(0), owner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) external onlyOwner {\\n        emit OwnershipTransferred(owner, newOwner);\\n        owner = newOwner;\\n    }\\n\\n    modifier onlyOwner() {\\n        require(owner == msg.sender, \\\"not owner\\\");\\n        _;\\n    }\\n}\",\"keccak256\":\"0x1104f456d1ee340a1674c34f132578b599d8fd1a8e12e57d5a7691de1191caca\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60c060405260036007553480156200001657600080fd5b5060405162001dbc38038062001dbc8339810160408190526200003991620000ec565b600080546001600160a01b0319166001600160a01b03841690811782556040518492907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350606092831b6001600160601b03199081166080529590921b90941660a052600292909255600355600180546001600160a01b0319166001600160a01b03909216919091179055506200015b565b80516001600160a01b0381168114620000e757600080fd5b919050565b60008060008060008060c087890312156200010657600080fd5b6200011187620000cf565b955060208701519450604087015193506200012f60608801620000cf565b92506200013f60808801620000cf565b91506200014f60a08801620000cf565b90509295509295509295565b60805160601c60a05160601c611be8620001d4600039600081816106070152818161081a01528181610b6a01528181611222015281816113c801526114d30152600081816102d0015281816107a5015281816108670152818161108301528181611271015281816112f2015261151a0152611be86000f3fe6080604052600436106102045760003560e01c80639bb8c0fd11610118578063d9caed12116100a0578063f771cb651161006f578063f771cb65146105c0578063f7d97577146105d5578063fc0c546a146105f5578063fff4da1f14610629578063fff897451461064957600080fd5b8063d9caed121461054a578063e06174e41461056a578063e1f21c6714610580578063f2fde38b146105a057600080fd5b8063ba730e53116100e7578063ba730e53146104be578063bf13d438146104de578063c7780ab2146104fe578063d09de08a14610514578063d7e06ca81461052a57600080fd5b80639bb8c0fd1461043e578063a4c0ed361461045e578063afaefe9e1461047e578063b03a13fe1461049e57600080fd5b8063777adcf01161019b5780638a07d3d01161016a5780638a07d3d0146103b15780638da5cb5b146103d45780638ed2fe91146103f457806391be6ad51461040957806398d5fdca1461042957600080fd5b8063777adcf0146103455780637cd6a7fd146103655780637ff6c1911461038557806384b41fda1461039b57600080fd5b80635001f3b5116101d75780635001f3b5146102be5780635c627935146102f257806369365c52146103125780636f7267b71461032557600080fd5b806308d4db141461020957806321bea8581461023c578063289469901461025c5780633bed33ce1461029c575b600080fd5b34801561021557600080fd5b506102296102243660046118e7565b610669565b6040519081526020015b60405180910390f35b34801561024857600080fd5b506102296102573660046118e7565b610682565b34801561026857600080fd5b506102847329fe8914e76da5ce2d90de98a64d0055f199d06d81565b6040516001600160a01b039091168152602001610233565b3480156102a857600080fd5b506102bc6102b73660046118e7565b61069c565b005b3480156102ca57600080fd5b506102847f000000000000000000000000000000000000000000000000000000000000000081565b3480156102fe57600080fd5b506102bc61030d3660046118ae565b610715565b61022961032036600461172e565b610786565b34801561033157600080fd5b506102296103403660046118e7565b6108ec565b34801561035157600080fd5b50600154610284906001600160a01b031681565b34801561037157600080fd5b506102bc6103803660046118e7565b610966565b34801561039157600080fd5b5061022960045481565b3480156103a757600080fd5b5061022960055481565b3480156103bd57600080fd5b5060055415155b6040519015158152602001610233565b3480156103e057600080fd5b50600054610284906001600160a01b031681565b34801561040057600080fd5b506103c4610995565b34801561041557600080fd5b506102bc6104243660046117f7565b6109aa565b34801561043557600080fd5b50610229610a61565b34801561044a57600080fd5b506102bc61045936600461179d565b610a6c565b34801561046a57600080fd5b506103c461047936600461179d565b610aa9565b34801561048a57600080fd5b506102bc610499366004611900565b610ac4565b3480156104aa57600080fd5b506102bc6104b936600461179d565b610b0d565b3480156104ca57600080fd5b506102296104d93660046118e7565b610be6565b3480156104ea57600080fd5b506102296104f93660046118e7565b610c0b565b34801561050a57600080fd5b5061022960065481565b34801561052057600080fd5b5061022960035481565b34801561053657600080fd5b506102bc61054536600461172e565b610c89565b34801561055657600080fd5b506102bc6105653660046116f2565b610c9e565b34801561057657600080fd5b5061022960075481565b34801561058c57600080fd5b506102bc61059b3660046116f2565b610d66565b3480156105ac57600080fd5b506102bc6105bb3660046116d0565b610dc5565b3480156105cc57600080fd5b506103c4610e4a565b3480156105e157600080fd5b506102bc6105f0366004611900565b610e5a565b34801561060157600080fd5b506102847f000000000000000000000000000000000000000000000000000000000000000081565b34801561063557600080fd5b506102bc6106443660046116d0565b610e97565b34801561065557600080fd5b506102bc6106643660046117f7565b610f1a565b600061067c610676610a61565b83610fce565b92915050565b6000612710610692605a84611b07565b61067c9190611a60565b6000546001600160a01b03163314806106bf57506001546001600160a01b031633145b6106e45760405162461bcd60e51b81526004016106db9061199d565b60405180910390fd5b604051339082156108fc029083906000818181858888f19350505050158015610711573d6000803e3d6000fd5b5050565b6000546001600160a01b0316331461073f5760405162461bcd60e51b81526004016106db9061199d565b61074d600160075481161490565b151582151514610761576007805460011890555b61076f600260075481161490565b151581151514610711576007805460021890555050565b6000336001600160a01b03871614806107c75750336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016145b806107dc57506001546001600160a01b031633145b6108185760405162461bcd60e51b815260206004820152600d60248201526c696e76616c69642063616c6c6560981b60448201526064016106db565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316866001600160a01b031614156108655761085e85858585611025565b90506108e3565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316866001600160a01b031614156108ab5761085e858585856112c2565b60405162461bcd60e51b815260206004820152600d60248201526c34b73b30b634b2103a37b5b2b760991b60448201526064016106db565b95945050505050565b6000806108f7610a61565b90506000806109068386611a60565b90505b8082101561095e576000600261091f8385611a48565b6109299190611a60565b905060006109378583610fce565b9050808711156109535761094c826001611a48565b9350610957565b8192505b5050610909565b509392505050565b6000546001600160a01b031633146109905760405162461bcd60e51b81526004016106db9061199d565b600755565b60006109a5600160075481161490565b905090565b6000546001600160a01b031633146109d45760405162461bcd60e51b81526004016106db9061199d565b60005b85811015610a5857610a468787838181106109f4576109f4611b8b565b9050602002016020810190610a0991906116d0565b868684818110610a1b57610a1b611b8b565b90506020020135858585818110610a3457610a34611b8b565b90506020028101906104b991906119c0565b80610a5081611b3d565b9150506109d7565b50505050505050565b60006109a542610c0b565b6000546001600160a01b03163314610a965760405162461bcd60e51b81526004016106db9061199d565b610aa284848484611450565b5050505050565b6000610ab83386868686610786565b50600195945050505050565b6000546001600160a01b03163314610aee5760405162461bcd60e51b81526004016106db9061199d565b610b02610af9610a61565b60025542600455565b600591909155600655565b6000546001600160a01b03163314610b375760405162461bcd60e51b81526004016106db9061199d565b610b4384848484611450565b5060405163a9059cbb60e01b81526001600160a01b038581166004830152602482018590527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb90604401602060405180830381600087803b158015610bae57600080fd5b505af1158015610bc2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa29190611891565b600061067c60035483610bf99190611b07565b610c01610a61565b6106769190611b26565b6000610c18600554151590565b15610c7c57600060045483610c2d9190611b26565b9050600060065460055483610c429190611a60565b610c4c9190611a82565b9050600081600254610c5e9190611a07565b90506000811215610c7457506000949350505050565b949350505050565b505060025490565b919050565b610c968585858585610786565b505050505050565b6000546001600160a01b0316331480610cc157506001546001600160a01b031633145b610cdd5760405162461bcd60e51b81526004016106db9061199d565b60405163a9059cbb60e01b81526001600160a01b0383811660048301526024820183905284169063a9059cbb906044015b602060405180830381600087803b158015610d2857600080fd5b505af1158015610d3c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d609190611891565b50505050565b6000546001600160a01b03163314610d905760405162461bcd60e51b81526004016106db9061199d565b60405163095ea7b360e01b81526001600160a01b0383811660048301526024820183905284169063095ea7b390604401610d0e565b6000546001600160a01b03163314610def5760405162461bcd60e51b81526004016106db9061199d565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60006109a5600260075481161490565b6000546001600160a01b03163314610e845760405162461bcd60e51b81526004016106db9061199d565b610e918260025542600455565b60035550565b6000546001600160a01b03163314610ec15760405162461bcd60e51b81526004016106db9061199d565b600180546001600160a01b0319166001600160a01b038316908117909155604080519182523360208301527f9dd461e0e3ea931454353c64df48625d3a1e4170d434479509d9a7f17cd070bf910160405180910390a150565b6000546001600160a01b03163314610f445760405162461bcd60e51b81526004016106db9061199d565b60005b85811015610a5857610fbb878783818110610f6457610f64611b8b565b9050602002016020810190610f7991906116d0565b868684818110610f8b57610f8b611b8b565b90506020020135858585818110610fa457610fa4611b8b565b9050602002810190610fb691906119c0565b611450565b5080610fc681611b3d565b915050610f47565b600081610fdd5750600061067c565b600354600090610fee600185611b26565b610ff89190611b07565b6110029085611a48565b90508260026110118387611a48565b61101b9190611a60565b610c749190611b07565b6000611035600260075481161490565b6110745760405162461bcd60e51b815260206004820152601060248201526f1cd95b1b1a5b99c8191a5cd8589b195960821b60448201526064016106db565b600061107f85610be6565b90507f000000000000000000000000000000000000000000000000000000000000000060006110ad83610682565b9050600354876110bd9190611b07565b600260008282546110ce9190611b26565b9091555050801561116f5760405163a9059cbb60e01b81527329fe8914e76da5ce2d90de98a64d0055f199d06d6004820152602481018290526001600160a01b0383169063a9059cbb90604401602060405180830381600087803b15801561113557600080fd5b505af1158015611149573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061116d9190611891565b505b6111798686611569565b15611218576001600160a01b03821663a9059cbb896111988487611b26565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b1580156111de57600080fd5b505af11580156111f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112169190611891565b505b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f424641a08047715d4b70195e1d90818d302683d9f65f41910ca13f5a486d37cc89888861126f8c611b58565b7f0000000000000000000000000000000000000000000000000000000000000000898861129a610a61565b6040516112ae98979695949392919061194b565b60405180910390a250909695505050505050565b6000806112ce856108ec565b905060006112de87838787611450565b9050858110156113a2576001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663a9059cbb88611322848a611b26565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b15801561136857600080fd5b505af115801561137c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113a09190611891565b505b60405163a9059cbb60e01b81526001600160a01b038881166004830152602482018490527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb90604401602060405180830381600087803b15801561140c57600080fd5b505af1158015611420573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114449190611891565b50909695505050505050565b6000611460600160075481161490565b61149e5760405162461bcd60e51b815260206004820152600f60248201526e189d5e5a5b99c8191a5cd8589b1959608a1b60448201526064016106db565b60006114a985610669565b9050600354856114b99190611b07565b6002546114c69190611a48565b6002556001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f424641a08047715d4b70195e1d90818d302683d9f65f41910ca13f5a486d37cc878686897f0000000000000000000000000000000000000000000000000000000000000000876000611544610a61565b60405161155898979695949392919061194b565b60405180910390a295945050505050565b60008115806115785750601482145b156115855750600161067c565b600160f81b838360008161159b5761159b611b8b565b9050013560f81c60f81b6001600160f81b03191614156115bd5750600161067c565b600160f91b83836000816115d3576115d3611b8b565b9050013560f81c60f81b6001600160f81b03191614156115f55750600061067c565b60405162461bcd60e51b815260206004820152600b60248201526a3ab735b737bbb7103932b360a91b60448201526064016106db565b80356001600160a01b0381168114610c8457600080fd5b60008083601f84011261165457600080fd5b50813567ffffffffffffffff81111561166c57600080fd5b6020830191508360208260051b850101111561168757600080fd5b9250929050565b60008083601f8401126116a057600080fd5b50813567ffffffffffffffff8111156116b857600080fd5b60208301915083602082850101111561168757600080fd5b6000602082840312156116e257600080fd5b6116eb8261162b565b9392505050565b60008060006060848603121561170757600080fd5b6117108461162b565b925061171e6020850161162b565b9150604084013590509250925092565b60008060008060006080868803121561174657600080fd5b61174f8661162b565b945061175d6020870161162b565b935060408601359250606086013567ffffffffffffffff81111561178057600080fd5b61178c8882890161168e565b969995985093965092949392505050565b600080600080606085870312156117b357600080fd5b6117bc8561162b565b935060208501359250604085013567ffffffffffffffff8111156117df57600080fd5b6117eb8782880161168e565b95989497509550505050565b6000806000806000806060878903121561181057600080fd5b863567ffffffffffffffff8082111561182857600080fd5b6118348a838b01611642565b9098509650602089013591508082111561184d57600080fd5b6118598a838b01611642565b9096509450604089013591508082111561187257600080fd5b5061187f89828a01611642565b979a9699509497509295939492505050565b6000602082840312156118a357600080fd5b81516116eb81611ba1565b600080604083850312156118c157600080fd5b82356118cc81611ba1565b915060208301356118dc81611ba1565b809150509250929050565b6000602082840312156118f957600080fd5b5035919050565b6000806040838503121561191357600080fd5b50508035926020909101359150565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b600060018060a01b03808b16835260e0602084015261196e60e084018a8c611922565b6040840198909852959095166060820152608081019390935260a083019190915260c090910152509392505050565b6020808252600990820152683737ba1037bbb732b960b91b604082015260600190565b6000808335601e198436030181126119d757600080fd5b83018035915067ffffffffffffffff8211156119f257600080fd5b60200191503681900382131561168757600080fd5b600080821280156001600160ff1b0384900385131615611a2957611a29611b75565b600160ff1b8390038412811615611a4257611a42611b75565b50500190565b60008219821115611a5b57611a5b611b75565b500190565b600082611a7d57634e487b7160e01b600052601260045260246000fd5b500490565b60006001600160ff1b0381841382841380821686840486111615611aa857611aa8611b75565b600160ff1b6000871282811687830589121615611ac757611ac7611b75565b60008712925087820587128484161615611ae357611ae3611b75565b87850587128184161615611af957611af9611b75565b505050929093029392505050565b6000816000190483118215151615611b2157611b21611b75565b500290565b600082821015611b3857611b38611b75565b500390565b6000600019821415611b5157611b51611b75565b5060010190565b6000600160ff1b821415611b6e57611b6e611b75565b5060000390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b8015158114611baf57600080fd5b5056fea2646970667358221220053ddbf176f8c04d1cb729dd0e79b7910bb5a0c1b4d08b282d78a815c8ea529464736f6c63430008070033",
  "deployedBytecode": "0x6080604052600436106102045760003560e01c80639bb8c0fd11610118578063d9caed12116100a0578063f771cb651161006f578063f771cb65146105c0578063f7d97577146105d5578063fc0c546a146105f5578063fff4da1f14610629578063fff897451461064957600080fd5b8063d9caed121461054a578063e06174e41461056a578063e1f21c6714610580578063f2fde38b146105a057600080fd5b8063ba730e53116100e7578063ba730e53146104be578063bf13d438146104de578063c7780ab2146104fe578063d09de08a14610514578063d7e06ca81461052a57600080fd5b80639bb8c0fd1461043e578063a4c0ed361461045e578063afaefe9e1461047e578063b03a13fe1461049e57600080fd5b8063777adcf01161019b5780638a07d3d01161016a5780638a07d3d0146103b15780638da5cb5b146103d45780638ed2fe91146103f457806391be6ad51461040957806398d5fdca1461042957600080fd5b8063777adcf0146103455780637cd6a7fd146103655780637ff6c1911461038557806384b41fda1461039b57600080fd5b80635001f3b5116101d75780635001f3b5146102be5780635c627935146102f257806369365c52146103125780636f7267b71461032557600080fd5b806308d4db141461020957806321bea8581461023c578063289469901461025c5780633bed33ce1461029c575b600080fd5b34801561021557600080fd5b506102296102243660046118e7565b610669565b6040519081526020015b60405180910390f35b34801561024857600080fd5b506102296102573660046118e7565b610682565b34801561026857600080fd5b506102847329fe8914e76da5ce2d90de98a64d0055f199d06d81565b6040516001600160a01b039091168152602001610233565b3480156102a857600080fd5b506102bc6102b73660046118e7565b61069c565b005b3480156102ca57600080fd5b506102847f000000000000000000000000000000000000000000000000000000000000000081565b3480156102fe57600080fd5b506102bc61030d3660046118ae565b610715565b61022961032036600461172e565b610786565b34801561033157600080fd5b506102296103403660046118e7565b6108ec565b34801561035157600080fd5b50600154610284906001600160a01b031681565b34801561037157600080fd5b506102bc6103803660046118e7565b610966565b34801561039157600080fd5b5061022960045481565b3480156103a757600080fd5b5061022960055481565b3480156103bd57600080fd5b5060055415155b6040519015158152602001610233565b3480156103e057600080fd5b50600054610284906001600160a01b031681565b34801561040057600080fd5b506103c4610995565b34801561041557600080fd5b506102bc6104243660046117f7565b6109aa565b34801561043557600080fd5b50610229610a61565b34801561044a57600080fd5b506102bc61045936600461179d565b610a6c565b34801561046a57600080fd5b506103c461047936600461179d565b610aa9565b34801561048a57600080fd5b506102bc610499366004611900565b610ac4565b3480156104aa57600080fd5b506102bc6104b936600461179d565b610b0d565b3480156104ca57600080fd5b506102296104d93660046118e7565b610be6565b3480156104ea57600080fd5b506102296104f93660046118e7565b610c0b565b34801561050a57600080fd5b5061022960065481565b34801561052057600080fd5b5061022960035481565b34801561053657600080fd5b506102bc61054536600461172e565b610c89565b34801561055657600080fd5b506102bc6105653660046116f2565b610c9e565b34801561057657600080fd5b5061022960075481565b34801561058c57600080fd5b506102bc61059b3660046116f2565b610d66565b3480156105ac57600080fd5b506102bc6105bb3660046116d0565b610dc5565b3480156105cc57600080fd5b506103c4610e4a565b3480156105e157600080fd5b506102bc6105f0366004611900565b610e5a565b34801561060157600080fd5b506102847f000000000000000000000000000000000000000000000000000000000000000081565b34801561063557600080fd5b506102bc6106443660046116d0565b610e97565b34801561065557600080fd5b506102bc6106643660046117f7565b610f1a565b600061067c610676610a61565b83610fce565b92915050565b6000612710610692605a84611b07565b61067c9190611a60565b6000546001600160a01b03163314806106bf57506001546001600160a01b031633145b6106e45760405162461bcd60e51b81526004016106db9061199d565b60405180910390fd5b604051339082156108fc029083906000818181858888f19350505050158015610711573d6000803e3d6000fd5b5050565b6000546001600160a01b0316331461073f5760405162461bcd60e51b81526004016106db9061199d565b61074d600160075481161490565b151582151514610761576007805460011890555b61076f600260075481161490565b151581151514610711576007805460021890555050565b6000336001600160a01b03871614806107c75750336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016145b806107dc57506001546001600160a01b031633145b6108185760405162461bcd60e51b815260206004820152600d60248201526c696e76616c69642063616c6c6560981b60448201526064016106db565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316866001600160a01b031614156108655761085e85858585611025565b90506108e3565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316866001600160a01b031614156108ab5761085e858585856112c2565b60405162461bcd60e51b815260206004820152600d60248201526c34b73b30b634b2103a37b5b2b760991b60448201526064016106db565b95945050505050565b6000806108f7610a61565b90506000806109068386611a60565b90505b8082101561095e576000600261091f8385611a48565b6109299190611a60565b905060006109378583610fce565b9050808711156109535761094c826001611a48565b9350610957565b8192505b5050610909565b509392505050565b6000546001600160a01b031633146109905760405162461bcd60e51b81526004016106db9061199d565b600755565b60006109a5600160075481161490565b905090565b6000546001600160a01b031633146109d45760405162461bcd60e51b81526004016106db9061199d565b60005b85811015610a5857610a468787838181106109f4576109f4611b8b565b9050602002016020810190610a0991906116d0565b868684818110610a1b57610a1b611b8b565b90506020020135858585818110610a3457610a34611b8b565b90506020028101906104b991906119c0565b80610a5081611b3d565b9150506109d7565b50505050505050565b60006109a542610c0b565b6000546001600160a01b03163314610a965760405162461bcd60e51b81526004016106db9061199d565b610aa284848484611450565b5050505050565b6000610ab83386868686610786565b50600195945050505050565b6000546001600160a01b03163314610aee5760405162461bcd60e51b81526004016106db9061199d565b610b02610af9610a61565b60025542600455565b600591909155600655565b6000546001600160a01b03163314610b375760405162461bcd60e51b81526004016106db9061199d565b610b4384848484611450565b5060405163a9059cbb60e01b81526001600160a01b038581166004830152602482018590527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb90604401602060405180830381600087803b158015610bae57600080fd5b505af1158015610bc2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa29190611891565b600061067c60035483610bf99190611b07565b610c01610a61565b6106769190611b26565b6000610c18600554151590565b15610c7c57600060045483610c2d9190611b26565b9050600060065460055483610c429190611a60565b610c4c9190611a82565b9050600081600254610c5e9190611a07565b90506000811215610c7457506000949350505050565b949350505050565b505060025490565b919050565b610c968585858585610786565b505050505050565b6000546001600160a01b0316331480610cc157506001546001600160a01b031633145b610cdd5760405162461bcd60e51b81526004016106db9061199d565b60405163a9059cbb60e01b81526001600160a01b0383811660048301526024820183905284169063a9059cbb906044015b602060405180830381600087803b158015610d2857600080fd5b505af1158015610d3c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d609190611891565b50505050565b6000546001600160a01b03163314610d905760405162461bcd60e51b81526004016106db9061199d565b60405163095ea7b360e01b81526001600160a01b0383811660048301526024820183905284169063095ea7b390604401610d0e565b6000546001600160a01b03163314610def5760405162461bcd60e51b81526004016106db9061199d565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60006109a5600260075481161490565b6000546001600160a01b03163314610e845760405162461bcd60e51b81526004016106db9061199d565b610e918260025542600455565b60035550565b6000546001600160a01b03163314610ec15760405162461bcd60e51b81526004016106db9061199d565b600180546001600160a01b0319166001600160a01b038316908117909155604080519182523360208301527f9dd461e0e3ea931454353c64df48625d3a1e4170d434479509d9a7f17cd070bf910160405180910390a150565b6000546001600160a01b03163314610f445760405162461bcd60e51b81526004016106db9061199d565b60005b85811015610a5857610fbb878783818110610f6457610f64611b8b565b9050602002016020810190610f7991906116d0565b868684818110610f8b57610f8b611b8b565b90506020020135858585818110610fa457610fa4611b8b565b9050602002810190610fb691906119c0565b611450565b5080610fc681611b3d565b915050610f47565b600081610fdd5750600061067c565b600354600090610fee600185611b26565b610ff89190611b07565b6110029085611a48565b90508260026110118387611a48565b61101b9190611a60565b610c749190611b07565b6000611035600260075481161490565b6110745760405162461bcd60e51b815260206004820152601060248201526f1cd95b1b1a5b99c8191a5cd8589b195960821b60448201526064016106db565b600061107f85610be6565b90507f000000000000000000000000000000000000000000000000000000000000000060006110ad83610682565b9050600354876110bd9190611b07565b600260008282546110ce9190611b26565b9091555050801561116f5760405163a9059cbb60e01b81527329fe8914e76da5ce2d90de98a64d0055f199d06d6004820152602481018290526001600160a01b0383169063a9059cbb90604401602060405180830381600087803b15801561113557600080fd5b505af1158015611149573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061116d9190611891565b505b6111798686611569565b15611218576001600160a01b03821663a9059cbb896111988487611b26565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b1580156111de57600080fd5b505af11580156111f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112169190611891565b505b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f424641a08047715d4b70195e1d90818d302683d9f65f41910ca13f5a486d37cc89888861126f8c611b58565b7f0000000000000000000000000000000000000000000000000000000000000000898861129a610a61565b6040516112ae98979695949392919061194b565b60405180910390a250909695505050505050565b6000806112ce856108ec565b905060006112de87838787611450565b9050858110156113a2576001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663a9059cbb88611322848a611b26565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b15801561136857600080fd5b505af115801561137c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113a09190611891565b505b60405163a9059cbb60e01b81526001600160a01b038881166004830152602482018490527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb90604401602060405180830381600087803b15801561140c57600080fd5b505af1158015611420573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114449190611891565b50909695505050505050565b6000611460600160075481161490565b61149e5760405162461bcd60e51b815260206004820152600f60248201526e189d5e5a5b99c8191a5cd8589b1959608a1b60448201526064016106db565b60006114a985610669565b9050600354856114b99190611b07565b6002546114c69190611a48565b6002556001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f424641a08047715d4b70195e1d90818d302683d9f65f41910ca13f5a486d37cc878686897f0000000000000000000000000000000000000000000000000000000000000000876000611544610a61565b60405161155898979695949392919061194b565b60405180910390a295945050505050565b60008115806115785750601482145b156115855750600161067c565b600160f81b838360008161159b5761159b611b8b565b9050013560f81c60f81b6001600160f81b03191614156115bd5750600161067c565b600160f91b83836000816115d3576115d3611b8b565b9050013560f81c60f81b6001600160f81b03191614156115f55750600061067c565b60405162461bcd60e51b815260206004820152600b60248201526a3ab735b737bbb7103932b360a91b60448201526064016106db565b80356001600160a01b0381168114610c8457600080fd5b60008083601f84011261165457600080fd5b50813567ffffffffffffffff81111561166c57600080fd5b6020830191508360208260051b850101111561168757600080fd5b9250929050565b60008083601f8401126116a057600080fd5b50813567ffffffffffffffff8111156116b857600080fd5b60208301915083602082850101111561168757600080fd5b6000602082840312156116e257600080fd5b6116eb8261162b565b9392505050565b60008060006060848603121561170757600080fd5b6117108461162b565b925061171e6020850161162b565b9150604084013590509250925092565b60008060008060006080868803121561174657600080fd5b61174f8661162b565b945061175d6020870161162b565b935060408601359250606086013567ffffffffffffffff81111561178057600080fd5b61178c8882890161168e565b969995985093965092949392505050565b600080600080606085870312156117b357600080fd5b6117bc8561162b565b935060208501359250604085013567ffffffffffffffff8111156117df57600080fd5b6117eb8782880161168e565b95989497509550505050565b6000806000806000806060878903121561181057600080fd5b863567ffffffffffffffff8082111561182857600080fd5b6118348a838b01611642565b9098509650602089013591508082111561184d57600080fd5b6118598a838b01611642565b9096509450604089013591508082111561187257600080fd5b5061187f89828a01611642565b979a9699509497509295939492505050565b6000602082840312156118a357600080fd5b81516116eb81611ba1565b600080604083850312156118c157600080fd5b82356118cc81611ba1565b915060208301356118dc81611ba1565b809150509250929050565b6000602082840312156118f957600080fd5b5035919050565b6000806040838503121561191357600080fd5b50508035926020909101359150565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b600060018060a01b03808b16835260e0602084015261196e60e084018a8c611922565b6040840198909852959095166060820152608081019390935260a083019190915260c090910152509392505050565b6020808252600990820152683737ba1037bbb732b960b91b604082015260600190565b6000808335601e198436030181126119d757600080fd5b83018035915067ffffffffffffffff8211156119f257600080fd5b60200191503681900382131561168757600080fd5b600080821280156001600160ff1b0384900385131615611a2957611a29611b75565b600160ff1b8390038412811615611a4257611a42611b75565b50500190565b60008219821115611a5b57611a5b611b75565b500190565b600082611a7d57634e487b7160e01b600052601260045260246000fd5b500490565b60006001600160ff1b0381841382841380821686840486111615611aa857611aa8611b75565b600160ff1b6000871282811687830589121615611ac757611ac7611b75565b60008712925087820587128484161615611ae357611ae3611b75565b87850587128184161615611af957611af9611b75565b505050929093029392505050565b6000816000190483118215151615611b2157611b21611b75565b500290565b600082821015611b3857611b38611b75565b500390565b6000600019821415611b5157611b51611b75565b5060010190565b6000600160ff1b821415611b6e57611b6e611b75565b5060000390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b8015158114611baf57600080fd5b5056fea2646970667358221220053ddbf176f8c04d1cb729dd0e79b7910bb5a0c1b4d08b282d78a815c8ea529464736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "processIncoming(address,address,uint256,bytes)": {
        "notice": "Payment hub might actually have sent another accepted token, including Ether."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 8440,
        "contract": "src/brokerbot/Brokerbot.sol:Brokerbot",
        "label": "owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 1377,
        "contract": "src/brokerbot/Brokerbot.sol:Brokerbot",
        "label": "paymenthub",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 1386,
        "contract": "src/brokerbot/Brokerbot.sol:Brokerbot",
        "label": "price",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 1388,
        "contract": "src/brokerbot/Brokerbot.sol:Brokerbot",
        "label": "increment",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 1390,
        "contract": "src/brokerbot/Brokerbot.sol:Brokerbot",
        "label": "driftStart",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 1392,
        "contract": "src/brokerbot/Brokerbot.sol:Brokerbot",
        "label": "timeToDrift",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 1394,
        "contract": "src/brokerbot/Brokerbot.sol:Brokerbot",
        "label": "driftIncrement",
        "offset": 0,
        "slot": "6",
        "type": "t_int256"
      },
      {
        "astId": 1419,
        "contract": "src/brokerbot/Brokerbot.sol:Brokerbot",
        "label": "settings",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_int256": {
        "encoding": "inplace",
        "label": "int256",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}