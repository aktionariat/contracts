{
  "address": "0xeaEE772489648614316AB1323ee8Db20890D9bF0",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_shareToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_increment",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_baseCurrency",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "ref",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "amount",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "base",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totPrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newprice",
          "type": "uint256"
        }
      ],
      "name": "Trade",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "erc20",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "base",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "buyingEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "copyright",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "driftIncrement",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "driftStart",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "getBuyPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "totPrice",
          "type": "uint256"
        }
      ],
      "name": "getLicenseFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "getPriceAtTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "getSellPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "money",
          "type": "uint256"
        }
      ],
      "name": "getShares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "hasDrift",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "increment",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "ref",
          "type": "bytes"
        }
      ],
      "name": "notifyTrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "ref",
          "type": "bytes"
        }
      ],
      "name": "notifyTradeAndTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "buyers",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "shares",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes[]",
          "name": "ref",
          "type": "bytes[]"
        }
      ],
      "name": "notifyTrades",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "buyers",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "shares",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes[]",
          "name": "ref",
          "type": "bytes[]"
        }
      ],
      "name": "notifyTradesAndTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "ref",
          "type": "bytes"
        }
      ],
      "name": "onTokenTransfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "ref",
          "type": "bytes"
        }
      ],
      "name": "onTokenTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paymenthub",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "ref",
          "type": "bytes"
        }
      ],
      "name": "processIncoming",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sellingEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "secondsPerStep",
          "type": "uint256"
        },
        {
          "internalType": "int256",
          "name": "newDriftIncrement",
          "type": "int256"
        }
      ],
      "name": "setDrift",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "newBuyingEnabled",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "newSellingEnabled",
          "type": "bool"
        }
      ],
      "name": "setEnabled",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "hub",
          "type": "address"
        }
      ],
      "name": "setPaymentHub",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "newIncrement",
          "type": "uint256"
        }
      ],
      "name": "setPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "settings_",
          "type": "uint256"
        }
      ],
      "name": "setSettings",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "settings",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timeToDrift",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "ercAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawEther",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x0a9f10867c901f8467f7a375dbe32b576f9644630d9e6e8371d88cbd4c7f247c",
  "receipt": {
    "to": null,
    "from": "0x39E5351E6CE3c4B19B8b0a2F5C82c511782457BE",
    "contractAddress": "0xeaEE772489648614316AB1323ee8Db20890D9bF0",
    "transactionIndex": 4,
    "gasUsed": "1653035",
    "logsBloom": "0x
    "blockHash": "0x00a46cb17feefc2798e045377aff8e039982d3b05ead19b952ae8a9f929b72cd",
    "transactionHash": "0x0a9f10867c901f8467f7a375dbe32b576f9644630d9e6e8371d88cbd4c7f247c",
    "logs": [
      {
        "transactionIndex": 4,
        "blockNumber": 22105722,
        "transactionHash": "0x0a9f10867c901f8467f7a375dbe32b576f9644630d9e6e8371d88cbd4c7f247c",
        "address": "0xeaEE772489648614316AB1323ee8Db20890D9bF0",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000dc6715b0d5ad3add9e9bd4b2c49df2bb220ad44a"
        ],
        "data": "0x",
        "logIndex": 13,
        "blockHash": "0x00a46cb17feefc2798e045377aff8e039982d3b05ead19b952ae8a9f929b72cd"
      },
      {
        "transactionIndex": 4,
        "blockNumber": 22105722,
        "transactionHash": "0x0a9f10867c901f8467f7a375dbe32b576f9644630d9e6e8371d88cbd4c7f247c",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x00000000000000000000000039e5351e6ce3c4b19b8b0a2f5c82c511782457be",
          "0x000000000000000000000000be188d6641e8b680743a4815dfa0f6208038960f"
        ],
        "data": "0x00000000000000000000000000000000000000000000000000148dfe35eac1000000000000000000000000000000000000000000000000000d3469ac2d75bf0000000000000000000000000000000000000000000000019de081f404cb2ee3730000000000000000000000000000000000000000000000000d1fdbadf78afe0000000000000000000000000000000000000000000000019de09682030119a473",
        "logIndex": 14,
        "blockHash": "0x00a46cb17feefc2798e045377aff8e039982d3b05ead19b952ae8a9f929b72cd"
      }
    ],
    "blockNumber": 22105722,
    "cumulativeGasUsed": "2163658",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x7B4f2e6292D1a22B61525a003EbF3Bbd85536C5D",
    "500000000000000000",
    10,
    "0xB4272071eCAdd69d933AdcD19cA99fe80664fc08",
    "0xDC6715b0d5ad3AdD9e9Bd4b2c49df2BB220AD44A"
  ],
  "solcInputHash": "77a9961c3b2fdeee8fb0d98e225d3d31",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_shareToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_increment\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_baseCurrency\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"ref\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"base\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newprice\",\"type\":\"uint256\"}],\"name\":\"Trade\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"erc20\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"base\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyingEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"copyright\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"driftIncrement\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"driftStart\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"getBuyPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"totPrice\",\"type\":\"uint256\"}],\"name\":\"getLicenseFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"getPriceAtTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"getSellPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"money\",\"type\":\"uint256\"}],\"name\":\"getShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hasDrift\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"increment\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ref\",\"type\":\"bytes\"}],\"name\":\"notifyTrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ref\",\"type\":\"bytes\"}],\"name\":\"notifyTradeAndTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"buyers\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"ref\",\"type\":\"bytes[]\"}],\"name\":\"notifyTrades\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"buyers\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"ref\",\"type\":\"bytes[]\"}],\"name\":\"notifyTradesAndTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ref\",\"type\":\"bytes\"}],\"name\":\"onTokenTransfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ref\",\"type\":\"bytes\"}],\"name\":\"onTokenTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paymenthub\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ref\",\"type\":\"bytes\"}],\"name\":\"processIncoming\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellingEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"secondsPerStep\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"newDriftIncrement\",\"type\":\"int256\"}],\"name\":\"setDrift\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"newBuyingEnabled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"newSellingEnabled\",\"type\":\"bool\"}],\"name\":\"setEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"hub\",\"type\":\"address\"}],\"name\":\"setPaymentHub\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newIncrement\",\"type\":\"uint256\"}],\"name\":\"setPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"settings_\",\"type\":\"uint256\"}],\"name\":\"setSettings\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"settings\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timeToDrift\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ercAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawEther\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"processIncoming(address,address,uint256,bytes)\":{\"notice\":\"Payment hub might actually have sent another accepted token, including Ether.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/shares/Brokerbot.sol\":\"Brokerbot\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/ERC20/IERC20.sol\":{\"content\":\"/**\\n* SPDX-License-Identifier: MIT\\n*\\n* Copyright (c) 2016-2019 zOS Global Limited\\n*\\n*/\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP. Does not include\\n * the optional functions; to access them see `ERC20Detailed`.\\n */\\n\\ninterface IERC20 {\\n\\n    // Optional functions\\n    function name() external view returns (string memory);\\n\\n    function symbol() external view returns (string memory);\\n\\n    event NameChanged(string name, string symbol);\\n\\n    function decimals() external view returns (uint8);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a `Transfer` event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through `transferFrom`. This is\\n     * zero by default.\\n     *\\n     * This value changes when `approve` or `transferFrom` are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * > Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an `Approval` event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a `Transfer` event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to `approve`. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n}\",\"keccak256\":\"0xfaefd97261d6413e7b891435756e82b7133d5c7c854ab04af50b2ab089136f4b\",\"license\":\"MIT\"},\"src/interfaces/IERC677Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IERC677Receiver {\\n    \\n    function onTokenTransfer(address from, uint256 amount, bytes calldata data) external returns (bool);\\n\\n}\",\"keccak256\":\"0x40703acdfa2126286b117ad0cca84c0a4ca2d3b18586765186c9bdd8ad5cf744\",\"license\":\"MIT\"},\"src/interfaces/ITokenReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// Copied from https://github.com/Uniswap/uniswap-v2-periphery/blob/master/contracts/UniswapV2Router02.sol\\npragma solidity ^0.8.0;\\n\\ninterface ITokenReceiver {\\n\\n    function onTokenTransfer(address token, address from, uint256 amount, bytes calldata data) external;\\n\\n}\",\"keccak256\":\"0xd9b831bb8a9eed0428b87351af0087934ee3682294fe918d5db7a7447446e4c1\",\"license\":\"MIT\"},\"src/shares/Brokerbot.sol\":{\"content\":\"/**\\n* SPDX-License-Identifier: LicenseRef-Aktionariat\\n*\\n* MIT License with Automated License Fee Payments\\n*\\n* Copyright (c) 2020 Aktionariat AG (aktionariat.com)\\n*\\n* Permission is hereby granted to any person obtaining a copy of this software\\n* and associated documentation files (the \\\"Software\\\"), to deal in the Software\\n* without restriction, including without limitation the rights to use, copy,\\n* modify, merge, publish, distribute, sublicense, and/or sell copies of the\\n* Software, and to permit persons to whom the Software is furnished to do so,\\n* subject to the following conditions:\\n*\\n* - The above copyright notice and this permission notice shall be included in\\n*   all copies or substantial portions of the Software.\\n* - All automated license fee payments integrated into this and related Software\\n*   are preserved.\\n*\\n* THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\n* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\n* SOFTWARE.\\n*/\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Ownable.sol\\\";\\nimport \\\"../ERC20/IERC20.sol\\\";\\nimport \\\"../interfaces/ITokenReceiver.sol\\\";\\nimport \\\"../interfaces/IERC677Receiver.sol\\\";\\n\\ncontract Brokerbot is Ownable {\\n\\n    address public paymenthub;\\n\\n    address public immutable base;  // ERC-20 currency\\n    address public immutable token; // ERC-20 share token\\n\\n    address public constant copyright = 0x29Fe8914e76da5cE2d90De98a64d0055f199d06D; // Aktionariat AG\\n\\n    uint256 private price; // current offer price, without drift\\n    uint256 public increment; // increment\\n\\n    uint256 public driftStart;\\n    uint256 public timeToDrift; // seconds until drift pushes price by one drift increment\\n    int256 public driftIncrement;\\n\\n    uint8 private constant licenseFeeBps = 90;\\n\\n    uint8 private constant BUYING_ENABLED = 0x1;\\n    uint8 private constant SELLING_ENABLED = 0x2;\\n    uint8 private constant VERSION = 0x1;\\n\\n    // more bits to be used by payment hub\\n    uint256 public settings = BUYING_ENABLED | SELLING_ENABLED | (VERSION<<248);\\n\\n    event Trade(address indexed token, address who, bytes ref, int amount, address base, uint totPrice, uint fee, uint newprice);\\n\\n    constructor(\\n        address _shareToken,\\n        uint256 _price,\\n        uint256 _increment,\\n        address _baseCurrency,\\n        address _owner\\n    )\\n        Ownable(_owner)\\n    {\\n        base = _baseCurrency;\\n        token = _shareToken;\\n        price = _price;\\n        increment = _increment;\\n        paymenthub = address(0x3eABee781f6569328143C610700A99E9ceE82cba);\\n    }\\n\\n    function setPrice(uint256 newPrice, uint256 newIncrement) external onlyOwner {\\n        anchorPrice(newPrice);\\n        increment = newIncrement;\\n    }\\n\\n    function hasDrift() public view returns (bool) {\\n        return timeToDrift != 0;\\n    }\\n\\n    // secondsPerStep should be negative for downwards drift\\n    function setDrift(uint256 secondsPerStep, int256 newDriftIncrement) external onlyOwner {\\n        anchorPrice(getPrice());\\n        timeToDrift = secondsPerStep;\\n        driftIncrement = newDriftIncrement;\\n    }\\n\\n    function anchorPrice(uint256 currentPrice) private {\\n        price = currentPrice;\\n        driftStart = block.timestamp;\\n    }\\n\\n    function getPrice() public view returns (uint256) {\\n        return getPriceAtTime(block.timestamp);\\n    }\\n\\n    function getPriceAtTime(uint256 timestamp) public view returns (uint256) {\\n        if (hasDrift()){\\n            uint256 passed = timestamp - driftStart;\\n            int256 drifted = int256(passed / timeToDrift) * driftIncrement;\\n            int256 driftedPrice = int256(price) + drifted;\\n            if (driftedPrice < 0){\\n                return 0;\\n            } else {\\n                return uint256(driftedPrice);\\n            }\\n        } else {\\n            return price;\\n        }\\n    }\\n\\n    function buy(address from, uint256 paid, bytes calldata ref) internal returns (uint256) {\\n        uint shares = getShares(paid);\\n        uint costs = notifyTraded(from, shares, ref);\\n        if (costs < paid){\\n            IERC20(base).transfer(from, paid - costs);\\n        }\\n        IERC20(token).transfer(from, shares);\\n        return shares;\\n    }\\n\\n    function notifyTraded(address from, uint256 shares, bytes calldata ref) internal returns (uint256) {\\n        require(hasSetting(BUYING_ENABLED));\\n        uint costs = getBuyPrice(shares);\\n        price = price + (shares * increment);\\n        emit Trade(token, from, ref, int256(shares), base, costs, 0, getPrice());\\n        return costs;\\n    }\\n\\n    function notifyTrade(address buyer, uint256 shares, bytes calldata ref) external onlyOwner {\\n        notifyTraded(buyer, shares, ref);\\n    }\\n\\n    function notifyTradeAndTransfer(address buyer, uint256 shares, bytes calldata ref) public onlyOwner {\\n        notifyTraded(buyer, shares, ref);\\n        IERC20(token).transfer(buyer, shares);\\n    }\\n\\n    function notifyTrades(address[] calldata buyers, uint256[] calldata shares, bytes[] calldata ref) external onlyOwner {\\n        for (uint i = 0; i < buyers.length; i++) {\\n            notifyTraded(buyers[i], shares[i], ref[i]);\\n        }\\n    }\\n\\n    function notifyTradesAndTransfer(address[] calldata buyers, uint256[] calldata shares, bytes[] calldata ref) external onlyOwner {\\n        for (uint i = 0; i < buyers.length; i++) {\\n            notifyTradeAndTransfer(buyers[i], shares[i], ref[i]);\\n        }\\n    }\\n\\n    /**\\n     * Payment hub might actually have sent another accepted token, including Ether.\\n     */\\n    function processIncoming(address token_, address from, uint256 amount, bytes calldata ref) public payable returns (uint256) {\\n        require(msg.sender == token_ || msg.sender == base || msg.sender == paymenthub);\\n        if (token_ == token){\\n            return sell(from, amount, ref);\\n        } else if (token_ == base){\\n            return buy(from, amount, ref);\\n        } else {\\n            require(false);\\n            return 0;\\n        }\\n    }\\n\\n    // ERC-677 recipient\\n    function onTokenTransfer(address from, uint256 amount, bytes calldata ref) external returns (bool) {\\n        processIncoming(msg.sender, from, amount, ref);\\n        return true;\\n    }\\n\\n    // ITokenReceiver\\n    function onTokenTransfer(address token_, address from, uint256 amount, bytes calldata ref) external {\\n        processIncoming(token_, from, amount, ref);\\n    }\\n\\n    function buyingEnabled() external view returns (bool){\\n        return hasSetting(BUYING_ENABLED);\\n    }\\n\\n    function sellingEnabled() external view returns (bool){\\n        return hasSetting(SELLING_ENABLED);\\n    }\\n\\n    function hasSetting(uint256 setting) private view returns (bool) {\\n        return settings & setting == setting;\\n    }\\n\\n    function isDirectSale(bytes calldata ref) internal pure returns (bool) {\\n        if (ref.length == 0 || ref.length == 20) {\\n            return true; // old format\\n        } else {\\n            if (ref[0] == bytes1(0x01)){\\n                return true;\\n            } else if (ref[0] == bytes1(0x02)) {\\n                return false;\\n            } else {\\n                require(false, \\\"unknown ref\\\");\\n                return true;\\n            }\\n        }\\n    }\\n\\n\\n    function sell(address recipient, uint256 amount, bytes calldata ref) internal returns (uint256) {\\n        require(hasSetting(SELLING_ENABLED));\\n        uint256 totPrice = getSellPrice(amount);\\n        IERC20 baseToken = IERC20(base);\\n        uint256 fee = getLicenseFee(totPrice);\\n        if (fee > 0){\\n            baseToken.transfer(copyright, fee);\\n        }\\n        if (isDirectSale(ref)){\\n            baseToken.transfer(recipient, totPrice - fee);\\n        }\\n        price -= amount * increment;\\n        emit Trade(token, recipient, ref, -int256(amount), base, totPrice, fee, getPrice());\\n        return totPrice;\\n    }\\n\\n    function getLicenseFee(uint256 totPrice) public pure returns (uint256) {\\n        return totPrice * licenseFeeBps / 10000;\\n    }\\n\\n    function getSellPrice(uint256 shares) public view returns (uint256) {\\n        return getPrice(getPrice() - (shares * increment), shares);\\n    }\\n\\n    function getBuyPrice(uint256 shares) public view returns (uint256) {\\n        return getPrice(getPrice(), shares);\\n    }\\n\\n    function getPrice(uint256 lowest, uint256 shares) internal view returns (uint256){\\n        if (shares == 0) {\\n            return 0;\\n        } else {\\n            uint256 highest = lowest + (shares - 1) * increment;\\n            return ((lowest + highest) / 2) * shares;\\n        }\\n    }\\n\\n    function getShares(uint256 money) public view returns (uint256) {\\n        uint256 currentPrice = getPrice();\\n        uint256 min = 0;\\n        uint256 max = money / currentPrice;\\n        while (min < max){\\n            uint256 middle = (min + max)/2;\\n            uint256 totalPrice = getPrice(currentPrice, middle);\\n            if (money > totalPrice){\\n                min = middle + 1;\\n            } else {\\n                max = middle;\\n            }\\n        }\\n        return min;\\n    }\\n\\n    function withdrawEther(uint256 amount) external ownerOrHub() {\\n        payable(msg.sender).transfer(amount); // return change\\n    }\\n\\n    function approve(address erc20, address who, uint256 amount) external onlyOwner() {\\n        IERC20(erc20).approve(who, amount);\\n    }\\n\\n    function withdraw(address ercAddress, address to, uint256 amount) external ownerOrHub() {\\n        IERC20(ercAddress).transfer(to, amount);\\n    }\\n\\n    function setPaymentHub(address hub) external onlyOwner() {\\n        paymenthub = hub;\\n    }\\n\\n    function setSettings(uint256 settings_) external onlyOwner() {\\n        settings = settings_;\\n    }\\n\\n    function setEnabled(bool newBuyingEnabled, bool newSellingEnabled) external onlyOwner() {\\n        if (newBuyingEnabled != hasSetting(BUYING_ENABLED)){\\n            settings ^= BUYING_ENABLED;\\n        }\\n        if (newSellingEnabled != hasSetting(SELLING_ENABLED)){\\n            settings ^= SELLING_ENABLED;\\n        }\\n    }\\n    \\n    modifier ownerOrHub() {\\n        require(owner == msg.sender || paymenthub == msg.sender, \\\"not owner\\\");\\n        _;\\n    }\\n}\",\"keccak256\":\"0xe833f192cec8837f1bc502e8a2f0e71fe4f7838b431f54ddc39c5ecdb51c1488\",\"license\":\"LicenseRef-Aktionariat\"},\"src/utils/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n//\\n// From https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\\n//\\n// Modifications:\\n// - Replaced Context._msgSender() with msg.sender\\n// - Made leaner\\n// - Extracted interface\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\ncontract Ownable {\\n\\n    address public owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor (address initialOwner) {\\n        owner = initialOwner;\\n        emit OwnershipTransferred(address(0), owner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) external onlyOwner {\\n        emit OwnershipTransferred(owner, newOwner);\\n        owner = newOwner;\\n    }\\n\\n    modifier onlyOwner() {\\n        require(owner == msg.sender, \\\"not owner\\\");\\n        _;\\n    }\\n}\",\"keccak256\":\"0x1104f456d1ee340a1674c34f132578b599d8fd1a8e12e57d5a7691de1191caca\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60c060405260036007553480156200001657600080fd5b5060405162001c9f38038062001c9f8339810160408190526200003991620000ee565b600080546001600160a01b0319166001600160a01b03831690811782556040518392907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350506001600160601b0319606091821b811660805293901b90921660a052600255600355600180546001600160a01b031916733eabee781f6569328143c610700a99e9cee82cba1790556200014c565b80516001600160a01b0381168114620000e957600080fd5b919050565b600080600080600060a086880312156200010757600080fd5b6200011286620000d1565b945060208601519350604086015192506200013060608701620000d1565b91506200014060808701620000d1565b90509295509295909350565b60805160601c60a05160601c611ada620001c560003960008181610607015281816107e701528181610aff01528181611149015281816112ef01526113c5015260008181610290015281816107a50152818161083401528181610fab0152818161119801528181611219015261140c0152611ada6000f3fe6080604052600436106102045760003560e01c8063a4c0ed3611610118578063d9caed12116100a0578063f771cb651161006f578063f771cb65146105c0578063f7d97577146105d5578063fc0c546a146105f5578063fff4da1f14610629578063fff897451461064957600080fd5b8063d9caed121461054a578063e06174e41461056a578063e1f21c6714610580578063f2fde38b146105a057600080fd5b8063ba730e53116100e7578063ba730e53146104be578063bf13d438146104de578063c7780ab2146104fe578063d09de08a14610514578063d7e06ca81461052a57600080fd5b8063a4c0ed3614610436578063a63ae9c714610456578063afaefe9e1461047e578063b03a13fe1461049e57600080fd5b80637cd6a7fd1161019b5780638da5cb5b1161016a5780638da5cb5b146103ac5780638ed2fe91146103cc57806391be6ad5146103e157806398d5fdca146104015780639bb8c0fd1461041657600080fd5b80637cd6a7fd1461033d5780637ff6c1911461035d57806384b41fda146103735780638a07d3d01461038957600080fd5b80635c627935116101d75780635c627935146102ca57806369365c52146102ea5780636f7267b7146102fd578063777adcf01461031d57600080fd5b806308d4db141461020957806321bea8581461023c5780633bed33ce1461025c5780635001f3b51461027e575b600080fd5b34801561021557600080fd5b506102296102243660046117d9565b610669565b6040519081526020015b60405180910390f35b34801561024857600080fd5b506102296102573660046117d9565b610682565b34801561026857600080fd5b5061027c6102773660046117d9565b61069c565b005b34801561028a57600080fd5b506102b27f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610233565b3480156102d657600080fd5b5061027c6102e53660046117a0565b610715565b6102296102f8366004611620565b610786565b34801561030957600080fd5b506102296103183660046117d9565b610881565b34801561032957600080fd5b506001546102b2906001600160a01b031681565b34801561034957600080fd5b5061027c6103583660046117d9565b6108fb565b34801561036957600080fd5b5061022960045481565b34801561037f57600080fd5b5061022960055481565b34801561039557600080fd5b5060055415155b6040519015158152602001610233565b3480156103b857600080fd5b506000546102b2906001600160a01b031681565b3480156103d857600080fd5b5061039c61092a565b3480156103ed57600080fd5b5061027c6103fc3660046116e9565b61093f565b34801561040d57600080fd5b506102296109f6565b34801561042257600080fd5b5061027c61043136600461168f565b610a01565b34801561044257600080fd5b5061039c61045136600461168f565b610a3e565b34801561046257600080fd5b506102b27329fe8914e76da5ce2d90de98a64d0055f199d06d81565b34801561048a57600080fd5b5061027c6104993660046117f2565b610a59565b3480156104aa57600080fd5b5061027c6104b936600461168f565b610aa2565b3480156104ca57600080fd5b506102296104d93660046117d9565b610b7b565b3480156104ea57600080fd5b506102296104f93660046117d9565b610ba0565b34801561050a57600080fd5b5061022960065481565b34801561052057600080fd5b5061022960035481565b34801561053657600080fd5b5061027c610545366004611620565b610c1e565b34801561055657600080fd5b5061027c6105653660046115e4565b610c33565b34801561057657600080fd5b5061022960075481565b34801561058c57600080fd5b5061027c61059b3660046115e4565b610cfb565b3480156105ac57600080fd5b5061027c6105bb3660046115c2565b610d5a565b3480156105cc57600080fd5b5061039c610ddf565b3480156105e157600080fd5b5061027c6105f03660046117f2565b610def565b34801561060157600080fd5b506102b27f000000000000000000000000000000000000000000000000000000000000000081565b34801561063557600080fd5b5061027c6106443660046115c2565b610e2c565b34801561065557600080fd5b5061027c6106643660046116e9565b610e78565b600061067c6106766109f6565b83610f2c565b92915050565b6000612710610692605a846119f9565b61067c9190611952565b6000546001600160a01b03163314806106bf57506001546001600160a01b031633145b6106e45760405162461bcd60e51b81526004016106db9061188f565b60405180910390fd5b604051339082156108fc029083906000818181858888f19350505050158015610711573d6000803e3d6000fd5b5050565b6000546001600160a01b0316331461073f5760405162461bcd60e51b81526004016106db9061188f565b61074d600160075481161490565b151582151514610761576007805460011890555b61076f600260075481161490565b151581151514610711576007805460021890555050565b6000336001600160a01b03871614806107c75750336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016145b806107dc57506001546001600160a01b031633145b6107e557600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316866001600160a01b031614156108325761082b85858585610f83565b9050610878565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316866001600160a01b031614156102045761082b858585856111e9565b95945050505050565b60008061088c6109f6565b905060008061089b8386611952565b90505b808210156108f357600060026108b4838561193a565b6108be9190611952565b905060006108cc8583610f2c565b9050808711156108e8576108e182600161193a565b93506108ec565b8192505b505061089e565b509392505050565b6000546001600160a01b031633146109255760405162461bcd60e51b81526004016106db9061188f565b600755565b600061093a600160075481161490565b905090565b6000546001600160a01b031633146109695760405162461bcd60e51b81526004016106db9061188f565b60005b858110156109ed576109db87878381811061098957610989611a7d565b905060200201602081019061099e91906115c2565b8686848181106109b0576109b0611a7d565b905060200201358585858181106109c9576109c9611a7d565b90506020028101906104b991906118b2565b806109e581611a2f565b91505061096c565b50505050505050565b600061093a42610ba0565b6000546001600160a01b03163314610a2b5760405162461bcd60e51b81526004016106db9061188f565b610a3784848484611377565b5050505050565b6000610a4d3386868686610786565b50600195945050505050565b6000546001600160a01b03163314610a835760405162461bcd60e51b81526004016106db9061188f565b610a97610a8e6109f6565b60025542600455565b600591909155600655565b6000546001600160a01b03163314610acc5760405162461bcd60e51b81526004016106db9061188f565b610ad884848484611377565b5060405163a9059cbb60e01b81526001600160a01b038581166004830152602482018590527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb90604401602060405180830381600087803b158015610b4357600080fd5b505af1158015610b57573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a379190611783565b600061067c60035483610b8e91906119f9565b610b966109f6565b6106769190611a18565b6000610bad600554151590565b15610c1157600060045483610bc29190611a18565b9050600060065460055483610bd79190611952565b610be19190611974565b9050600081600254610bf391906118f9565b90506000811215610c0957506000949350505050565b949350505050565b505060025490565b919050565b610c2b8585858585610786565b505050505050565b6000546001600160a01b0316331480610c5657506001546001600160a01b031633145b610c725760405162461bcd60e51b81526004016106db9061188f565b60405163a9059cbb60e01b81526001600160a01b0383811660048301526024820183905284169063a9059cbb906044015b602060405180830381600087803b158015610cbd57600080fd5b505af1158015610cd1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cf59190611783565b50505050565b6000546001600160a01b03163314610d255760405162461bcd60e51b81526004016106db9061188f565b60405163095ea7b360e01b81526001600160a01b0383811660048301526024820183905284169063095ea7b390604401610ca3565b6000546001600160a01b03163314610d845760405162461bcd60e51b81526004016106db9061188f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b600061093a600260075481161490565b6000546001600160a01b03163314610e195760405162461bcd60e51b81526004016106db9061188f565b610e268260025542600455565b60035550565b6000546001600160a01b03163314610e565760405162461bcd60e51b81526004016106db9061188f565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314610ea25760405162461bcd60e51b81526004016106db9061188f565b60005b858110156109ed57610f19878783818110610ec257610ec2611a7d565b9050602002016020810190610ed791906115c2565b868684818110610ee957610ee9611a7d565b90506020020135858585818110610f0257610f02611a7d565b9050602002810190610f1491906118b2565b611377565b5080610f2481611a2f565b915050610ea5565b600081610f3b5750600061067c565b600354600090610f4c600185611a18565b610f5691906119f9565b610f60908561193a565b9050826002610f6f838761193a565b610f799190611952565b610c0991906119f9565b6000610f93600260075481161490565b610f9c57600080fd5b6000610fa785610b7b565b90507f00000000000000000000000000000000000000000000000000000000000000006000610fd583610682565b905080156110735760405163a9059cbb60e01b81527329fe8914e76da5ce2d90de98a64d0055f199d06d6004820152602481018290526001600160a01b0383169063a9059cbb90604401602060405180830381600087803b15801561103957600080fd5b505af115801561104d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110719190611783565b505b61107d868661145b565b1561111c576001600160a01b03821663a9059cbb8961109c8487611a18565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b1580156110e257600080fd5b505af11580156110f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061111a9190611783565b505b60035461112990886119f9565b6002600082825461113a9190611a18565b90915550506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f424641a08047715d4b70195e1d90818d302683d9f65f41910ca13f5a486d37cc8988886111968c611a4a565b7f000000000000000000000000000000000000000000000000000000000000000089886111c16109f6565b6040516111d598979695949392919061183d565b60405180910390a250909695505050505050565b6000806111f585610881565b9050600061120587838787611377565b9050858110156112c9576001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663a9059cbb88611249848a611a18565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b15801561128f57600080fd5b505af11580156112a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112c79190611783565b505b60405163a9059cbb60e01b81526001600160a01b038881166004830152602482018490527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb90604401602060405180830381600087803b15801561133357600080fd5b505af1158015611347573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061136b9190611783565b50909695505050505050565b6000611387600160075481161490565b61139057600080fd5b600061139b85610669565b9050600354856113ab91906119f9565b6002546113b8919061193a565b6002556001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f424641a08047715d4b70195e1d90818d302683d9f65f41910ca13f5a486d37cc878686897f00000000000000000000000000000000000000000000000000000000000000008760006114366109f6565b60405161144a98979695949392919061183d565b60405180910390a295945050505050565b600081158061146a5750601482145b156114775750600161067c565b600160f81b838360008161148d5761148d611a7d565b9050013560f81c60f81b6001600160f81b03191614156114af5750600161067c565b600160f91b83836000816114c5576114c5611a7d565b9050013560f81c60f81b6001600160f81b03191614156114e75750600061067c565b60405162461bcd60e51b815260206004820152600b60248201526a3ab735b737bbb7103932b360a91b60448201526064016106db565b80356001600160a01b0381168114610c1957600080fd5b60008083601f84011261154657600080fd5b50813567ffffffffffffffff81111561155e57600080fd5b6020830191508360208260051b850101111561157957600080fd5b9250929050565b60008083601f84011261159257600080fd5b50813567ffffffffffffffff8111156115aa57600080fd5b60208301915083602082850101111561157957600080fd5b6000602082840312156115d457600080fd5b6115dd8261151d565b9392505050565b6000806000606084860312156115f957600080fd5b6116028461151d565b92506116106020850161151d565b9150604084013590509250925092565b60008060008060006080868803121561163857600080fd5b6116418661151d565b945061164f6020870161151d565b935060408601359250606086013567ffffffffffffffff81111561167257600080fd5b61167e88828901611580565b969995985093965092949392505050565b600080600080606085870312156116a557600080fd5b6116ae8561151d565b935060208501359250604085013567ffffffffffffffff8111156116d157600080fd5b6116dd87828801611580565b95989497509550505050565b6000806000806000806060878903121561170257600080fd5b863567ffffffffffffffff8082111561171a57600080fd5b6117268a838b01611534565b9098509650602089013591508082111561173f57600080fd5b61174b8a838b01611534565b9096509450604089013591508082111561176457600080fd5b5061177189828a01611534565b979a9699509497509295939492505050565b60006020828403121561179557600080fd5b81516115dd81611a93565b600080604083850312156117b357600080fd5b82356117be81611a93565b915060208301356117ce81611a93565b809150509250929050565b6000602082840312156117eb57600080fd5b5035919050565b6000806040838503121561180557600080fd5b50508035926020909101359150565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b600060018060a01b03808b16835260e0602084015261186060e084018a8c611814565b6040840198909852959095166060820152608081019390935260a083019190915260c090910152509392505050565b6020808252600990820152683737ba1037bbb732b960b91b604082015260600190565b6000808335601e198436030181126118c957600080fd5b83018035915067ffffffffffffffff8211156118e457600080fd5b60200191503681900382131561157957600080fd5b600080821280156001600160ff1b038490038513161561191b5761191b611a67565b600160ff1b839003841281161561193457611934611a67565b50500190565b6000821982111561194d5761194d611a67565b500190565b60008261196f57634e487b7160e01b600052601260045260246000fd5b500490565b60006001600160ff1b038184138284138082168684048611161561199a5761199a611a67565b600160ff1b60008712828116878305891216156119b9576119b9611a67565b600087129250878205871284841616156119d5576119d5611a67565b878505871281841616156119eb576119eb611a67565b505050929093029392505050565b6000816000190483118215151615611a1357611a13611a67565b500290565b600082821015611a2a57611a2a611a67565b500390565b6000600019821415611a4357611a43611a67565b5060010190565b6000600160ff1b821415611a6057611a60611a67565b5060000390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b8015158114611aa157600080fd5b5056fea26469706673582212201da7180faaf50f105b8966908898c2b43a5267964b0fd94cae9de6cc59c83a7364736f6c63430008070033",
  "deployedBytecode": "0x6080604052600436106102045760003560e01c8063a4c0ed3611610118578063d9caed12116100a0578063f771cb651161006f578063f771cb65146105c0578063f7d97577146105d5578063fc0c546a146105f5578063fff4da1f14610629578063fff897451461064957600080fd5b8063d9caed121461054a578063e06174e41461056a578063e1f21c6714610580578063f2fde38b146105a057600080fd5b8063ba730e53116100e7578063ba730e53146104be578063bf13d438146104de578063c7780ab2146104fe578063d09de08a14610514578063d7e06ca81461052a57600080fd5b8063a4c0ed3614610436578063a63ae9c714610456578063afaefe9e1461047e578063b03a13fe1461049e57600080fd5b80637cd6a7fd1161019b5780638da5cb5b1161016a5780638da5cb5b146103ac5780638ed2fe91146103cc57806391be6ad5146103e157806398d5fdca146104015780639bb8c0fd1461041657600080fd5b80637cd6a7fd1461033d5780637ff6c1911461035d57806384b41fda146103735780638a07d3d01461038957600080fd5b80635c627935116101d75780635c627935146102ca57806369365c52146102ea5780636f7267b7146102fd578063777adcf01461031d57600080fd5b806308d4db141461020957806321bea8581461023c5780633bed33ce1461025c5780635001f3b51461027e575b600080fd5b34801561021557600080fd5b506102296102243660046117d9565b610669565b6040519081526020015b60405180910390f35b34801561024857600080fd5b506102296102573660046117d9565b610682565b34801561026857600080fd5b5061027c6102773660046117d9565b61069c565b005b34801561028a57600080fd5b506102b27f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610233565b3480156102d657600080fd5b5061027c6102e53660046117a0565b610715565b6102296102f8366004611620565b610786565b34801561030957600080fd5b506102296103183660046117d9565b610881565b34801561032957600080fd5b506001546102b2906001600160a01b031681565b34801561034957600080fd5b5061027c6103583660046117d9565b6108fb565b34801561036957600080fd5b5061022960045481565b34801561037f57600080fd5b5061022960055481565b34801561039557600080fd5b5060055415155b6040519015158152602001610233565b3480156103b857600080fd5b506000546102b2906001600160a01b031681565b3480156103d857600080fd5b5061039c61092a565b3480156103ed57600080fd5b5061027c6103fc3660046116e9565b61093f565b34801561040d57600080fd5b506102296109f6565b34801561042257600080fd5b5061027c61043136600461168f565b610a01565b34801561044257600080fd5b5061039c61045136600461168f565b610a3e565b34801561046257600080fd5b506102b27329fe8914e76da5ce2d90de98a64d0055f199d06d81565b34801561048a57600080fd5b5061027c6104993660046117f2565b610a59565b3480156104aa57600080fd5b5061027c6104b936600461168f565b610aa2565b3480156104ca57600080fd5b506102296104d93660046117d9565b610b7b565b3480156104ea57600080fd5b506102296104f93660046117d9565b610ba0565b34801561050a57600080fd5b5061022960065481565b34801561052057600080fd5b5061022960035481565b34801561053657600080fd5b5061027c610545366004611620565b610c1e565b34801561055657600080fd5b5061027c6105653660046115e4565b610c33565b34801561057657600080fd5b5061022960075481565b34801561058c57600080fd5b5061027c61059b3660046115e4565b610cfb565b3480156105ac57600080fd5b5061027c6105bb3660046115c2565b610d5a565b3480156105cc57600080fd5b5061039c610ddf565b3480156105e157600080fd5b5061027c6105f03660046117f2565b610def565b34801561060157600080fd5b506102b27f000000000000000000000000000000000000000000000000000000000000000081565b34801561063557600080fd5b5061027c6106443660046115c2565b610e2c565b34801561065557600080fd5b5061027c6106643660046116e9565b610e78565b600061067c6106766109f6565b83610f2c565b92915050565b6000612710610692605a846119f9565b61067c9190611952565b6000546001600160a01b03163314806106bf57506001546001600160a01b031633145b6106e45760405162461bcd60e51b81526004016106db9061188f565b60405180910390fd5b604051339082156108fc029083906000818181858888f19350505050158015610711573d6000803e3d6000fd5b5050565b6000546001600160a01b0316331461073f5760405162461bcd60e51b81526004016106db9061188f565b61074d600160075481161490565b151582151514610761576007805460011890555b61076f600260075481161490565b151581151514610711576007805460021890555050565b6000336001600160a01b03871614806107c75750336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016145b806107dc57506001546001600160a01b031633145b6107e557600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316866001600160a01b031614156108325761082b85858585610f83565b9050610878565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316866001600160a01b031614156102045761082b858585856111e9565b95945050505050565b60008061088c6109f6565b905060008061089b8386611952565b90505b808210156108f357600060026108b4838561193a565b6108be9190611952565b905060006108cc8583610f2c565b9050808711156108e8576108e182600161193a565b93506108ec565b8192505b505061089e565b509392505050565b6000546001600160a01b031633146109255760405162461bcd60e51b81526004016106db9061188f565b600755565b600061093a600160075481161490565b905090565b6000546001600160a01b031633146109695760405162461bcd60e51b81526004016106db9061188f565b60005b858110156109ed576109db87878381811061098957610989611a7d565b905060200201602081019061099e91906115c2565b8686848181106109b0576109b0611a7d565b905060200201358585858181106109c9576109c9611a7d565b90506020028101906104b991906118b2565b806109e581611a2f565b91505061096c565b50505050505050565b600061093a42610ba0565b6000546001600160a01b03163314610a2b5760405162461bcd60e51b81526004016106db9061188f565b610a3784848484611377565b5050505050565b6000610a4d3386868686610786565b50600195945050505050565b6000546001600160a01b03163314610a835760405162461bcd60e51b81526004016106db9061188f565b610a97610a8e6109f6565b60025542600455565b600591909155600655565b6000546001600160a01b03163314610acc5760405162461bcd60e51b81526004016106db9061188f565b610ad884848484611377565b5060405163a9059cbb60e01b81526001600160a01b038581166004830152602482018590527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb90604401602060405180830381600087803b158015610b4357600080fd5b505af1158015610b57573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a379190611783565b600061067c60035483610b8e91906119f9565b610b966109f6565b6106769190611a18565b6000610bad600554151590565b15610c1157600060045483610bc29190611a18565b9050600060065460055483610bd79190611952565b610be19190611974565b9050600081600254610bf391906118f9565b90506000811215610c0957506000949350505050565b949350505050565b505060025490565b919050565b610c2b8585858585610786565b505050505050565b6000546001600160a01b0316331480610c5657506001546001600160a01b031633145b610c725760405162461bcd60e51b81526004016106db9061188f565b60405163a9059cbb60e01b81526001600160a01b0383811660048301526024820183905284169063a9059cbb906044015b602060405180830381600087803b158015610cbd57600080fd5b505af1158015610cd1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cf59190611783565b50505050565b6000546001600160a01b03163314610d255760405162461bcd60e51b81526004016106db9061188f565b60405163095ea7b360e01b81526001600160a01b0383811660048301526024820183905284169063095ea7b390604401610ca3565b6000546001600160a01b03163314610d845760405162461bcd60e51b81526004016106db9061188f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b600061093a600260075481161490565b6000546001600160a01b03163314610e195760405162461bcd60e51b81526004016106db9061188f565b610e268260025542600455565b60035550565b6000546001600160a01b03163314610e565760405162461bcd60e51b81526004016106db9061188f565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314610ea25760405162461bcd60e51b81526004016106db9061188f565b60005b858110156109ed57610f19878783818110610ec257610ec2611a7d565b9050602002016020810190610ed791906115c2565b868684818110610ee957610ee9611a7d565b90506020020135858585818110610f0257610f02611a7d565b9050602002810190610f1491906118b2565b611377565b5080610f2481611a2f565b915050610ea5565b600081610f3b5750600061067c565b600354600090610f4c600185611a18565b610f5691906119f9565b610f60908561193a565b9050826002610f6f838761193a565b610f799190611952565b610c0991906119f9565b6000610f93600260075481161490565b610f9c57600080fd5b6000610fa785610b7b565b90507f00000000000000000000000000000000000000000000000000000000000000006000610fd583610682565b905080156110735760405163a9059cbb60e01b81527329fe8914e76da5ce2d90de98a64d0055f199d06d6004820152602481018290526001600160a01b0383169063a9059cbb90604401602060405180830381600087803b15801561103957600080fd5b505af115801561104d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110719190611783565b505b61107d868661145b565b1561111c576001600160a01b03821663a9059cbb8961109c8487611a18565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b1580156110e257600080fd5b505af11580156110f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061111a9190611783565b505b60035461112990886119f9565b6002600082825461113a9190611a18565b90915550506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f424641a08047715d4b70195e1d90818d302683d9f65f41910ca13f5a486d37cc8988886111968c611a4a565b7f000000000000000000000000000000000000000000000000000000000000000089886111c16109f6565b6040516111d598979695949392919061183d565b60405180910390a250909695505050505050565b6000806111f585610881565b9050600061120587838787611377565b9050858110156112c9576001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663a9059cbb88611249848a611a18565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b15801561128f57600080fd5b505af11580156112a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112c79190611783565b505b60405163a9059cbb60e01b81526001600160a01b038881166004830152602482018490527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb90604401602060405180830381600087803b15801561133357600080fd5b505af1158015611347573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061136b9190611783565b50909695505050505050565b6000611387600160075481161490565b61139057600080fd5b600061139b85610669565b9050600354856113ab91906119f9565b6002546113b8919061193a565b6002556001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f424641a08047715d4b70195e1d90818d302683d9f65f41910ca13f5a486d37cc878686897f00000000000000000000000000000000000000000000000000000000000000008760006114366109f6565b60405161144a98979695949392919061183d565b60405180910390a295945050505050565b600081158061146a5750601482145b156114775750600161067c565b600160f81b838360008161148d5761148d611a7d565b9050013560f81c60f81b6001600160f81b03191614156114af5750600161067c565b600160f91b83836000816114c5576114c5611a7d565b9050013560f81c60f81b6001600160f81b03191614156114e75750600061067c565b60405162461bcd60e51b815260206004820152600b60248201526a3ab735b737bbb7103932b360a91b60448201526064016106db565b80356001600160a01b0381168114610c1957600080fd5b60008083601f84011261154657600080fd5b50813567ffffffffffffffff81111561155e57600080fd5b6020830191508360208260051b850101111561157957600080fd5b9250929050565b60008083601f84011261159257600080fd5b50813567ffffffffffffffff8111156115aa57600080fd5b60208301915083602082850101111561157957600080fd5b6000602082840312156115d457600080fd5b6115dd8261151d565b9392505050565b6000806000606084860312156115f957600080fd5b6116028461151d565b92506116106020850161151d565b9150604084013590509250925092565b60008060008060006080868803121561163857600080fd5b6116418661151d565b945061164f6020870161151d565b935060408601359250606086013567ffffffffffffffff81111561167257600080fd5b61167e88828901611580565b969995985093965092949392505050565b600080600080606085870312156116a557600080fd5b6116ae8561151d565b935060208501359250604085013567ffffffffffffffff8111156116d157600080fd5b6116dd87828801611580565b95989497509550505050565b6000806000806000806060878903121561170257600080fd5b863567ffffffffffffffff8082111561171a57600080fd5b6117268a838b01611534565b9098509650602089013591508082111561173f57600080fd5b61174b8a838b01611534565b9096509450604089013591508082111561176457600080fd5b5061177189828a01611534565b979a9699509497509295939492505050565b60006020828403121561179557600080fd5b81516115dd81611a93565b600080604083850312156117b357600080fd5b82356117be81611a93565b915060208301356117ce81611a93565b809150509250929050565b6000602082840312156117eb57600080fd5b5035919050565b6000806040838503121561180557600080fd5b50508035926020909101359150565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b600060018060a01b03808b16835260e0602084015261186060e084018a8c611814565b6040840198909852959095166060820152608081019390935260a083019190915260c090910152509392505050565b6020808252600990820152683737ba1037bbb732b960b91b604082015260600190565b6000808335601e198436030181126118c957600080fd5b83018035915067ffffffffffffffff8211156118e457600080fd5b60200191503681900382131561157957600080fd5b600080821280156001600160ff1b038490038513161561191b5761191b611a67565b600160ff1b839003841281161561193457611934611a67565b50500190565b6000821982111561194d5761194d611a67565b500190565b60008261196f57634e487b7160e01b600052601260045260246000fd5b500490565b60006001600160ff1b038184138284138082168684048611161561199a5761199a611a67565b600160ff1b60008712828116878305891216156119b9576119b9611a67565b600087129250878205871284841616156119d5576119d5611a67565b878505871281841616156119eb576119eb611a67565b505050929093029392505050565b6000816000190483118215151615611a1357611a13611a67565b500290565b600082821015611a2a57611a2a611a67565b500390565b6000600019821415611a4357611a43611a67565b5060010190565b6000600160ff1b821415611a6057611a60611a67565b5060000390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b8015158114611aa157600080fd5b5056fea26469706673582212201da7180faaf50f105b8966908898c2b43a5267964b0fd94cae9de6cc59c83a7364736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "processIncoming(address,address,uint256,bytes)": {
        "notice": "Payment hub might actually have sent another accepted token, including Ether."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 11532,
        "contract": "src/shares/Brokerbot.sol:Brokerbot",
        "label": "owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 5897,
        "contract": "src/shares/Brokerbot.sol:Brokerbot",
        "label": "paymenthub",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 5906,
        "contract": "src/shares/Brokerbot.sol:Brokerbot",
        "label": "price",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 5908,
        "contract": "src/shares/Brokerbot.sol:Brokerbot",
        "label": "increment",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 5910,
        "contract": "src/shares/Brokerbot.sol:Brokerbot",
        "label": "driftStart",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 5912,
        "contract": "src/shares/Brokerbot.sol:Brokerbot",
        "label": "timeToDrift",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 5914,
        "contract": "src/shares/Brokerbot.sol:Brokerbot",
        "label": "driftIncrement",
        "offset": 0,
        "slot": "6",
        "type": "t_int256"
      },
      {
        "astId": 5936,
        "contract": "src/shares/Brokerbot.sol:Brokerbot",
        "label": "settings",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_int256": {
        "encoding": "inplace",
        "label": "int256",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}