{
  "address": "0xF08c085748711078C32338e3356c0E533a4a22aC",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20Permit",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_increment",
          "type": "uint256"
        },
        {
          "internalType": "contract IERC20",
          "name": "_base",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_paymentHub",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        }
      ],
      "name": "Address_NotTransferNorContract",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Brokerbot_BuyingDisabled",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "Brokerbot_InvalidSender",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "Brokerbot_NotAuthorized",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Brokerbot_SellingDisabled",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Brokerbot_WithdrawFailed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "Ownable_NotOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "SafeERC20FailedOperation",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timeToDrift",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "driftIncrement",
          "type": "int256"
        }
      ],
      "name": "DriftSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "paymentHub",
          "type": "address"
        }
      ],
      "name": "PaymentHubUpdate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "increment",
          "type": "uint256"
        }
      ],
      "name": "PriceSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountETH",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountBase",
          "type": "uint256"
        }
      ],
      "name": "Received",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "setting",
          "type": "uint256"
        }
      ],
      "name": "SettingsChange",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IERC20Permit",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "ref",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "amount",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "contract IERC20",
          "name": "base",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totPrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newprice",
          "type": "uint256"
        }
      ],
      "name": "Trade",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountETH",
          "type": "uint256"
        }
      ],
      "name": "Withdrawn",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "VERSION",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "erc20",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "base",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "driftIncrement",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "driftStart",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "getBuyPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "getPriceAtTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "getSellPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "money",
          "type": "uint256"
        }
      ],
      "name": "getShares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "hasDrift",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "increment",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "costs",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "ref",
          "type": "bytes"
        }
      ],
      "name": "notifyTrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "costs",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "ref",
          "type": "bytes"
        }
      ],
      "name": "notifyTradeAndTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "buyers",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "shares",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "costs",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes[]",
          "name": "ref",
          "type": "bytes[]"
        }
      ],
      "name": "notifyTrades",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "buyers",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "shares",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "costs",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes[]",
          "name": "ref",
          "type": "bytes[]"
        }
      ],
      "name": "notifyTradesAndTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "ref",
          "type": "bytes"
        }
      ],
      "name": "onTokenTransfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paymenthub",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "incomingAsset",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "ref",
          "type": "bytes"
        }
      ],
      "name": "processIncoming",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "secondsPerStep",
          "type": "uint256"
        },
        {
          "internalType": "int256",
          "name": "_driftIncrement",
          "type": "int256"
        }
      ],
      "name": "setDrift",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_buyingEnabled",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "_sellingEnabled",
          "type": "bool"
        }
      ],
      "name": "setEnabled",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "hub",
          "type": "address"
        }
      ],
      "name": "setPaymentHub",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_increment",
          "type": "uint256"
        }
      ],
      "name": "setPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_settings",
          "type": "uint256"
        }
      ],
      "name": "setSettings",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "settings",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timeToDrift",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20Permit",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "ercAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawEther",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawEther",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x4b6ee8909f85c7091dccf303c757c31e761fce77fcd435c56d70bd5ab0d422df",
  "receipt": {
    "to": null,
    "from": "0x447ffD9a116efb3D77f47802cc4869C3730f723C",
    "contractAddress": "0xF08c085748711078C32338e3356c0E533a4a22aC",
    "transactionIndex": 7,
    "gasUsed": "1616593",
    "logsBloom": "0x
    "blockHash": "0xeaa88ac80e878dea0a0b4b17ffe899984e9967960521cf0701f6f61923f4113a",
    "transactionHash": "0x4b6ee8909f85c7091dccf303c757c31e761fce77fcd435c56d70bd5ab0d422df",
    "logs": [
      {
        "transactionIndex": 7,
        "blockNumber": 42751320,
        "transactionHash": "0x4b6ee8909f85c7091dccf303c757c31e761fce77fcd435c56d70bd5ab0d422df",
        "address": "0xF08c085748711078C32338e3356c0E533a4a22aC",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000050872469e4b156b0e1e98365317a885ec096e92d"
        ],
        "data": "0x",
        "logIndex": 27,
        "blockHash": "0xeaa88ac80e878dea0a0b4b17ffe899984e9967960521cf0701f6f61923f4113a"
      },
      {
        "transactionIndex": 7,
        "blockNumber": 42751320,
        "transactionHash": "0x4b6ee8909f85c7091dccf303c757c31e761fce77fcd435c56d70bd5ab0d422df",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000447ffd9a116efb3d77f47802cc4869c3730f723c",
          "0x000000000000000000000000c275dc8be39f50d12f66b6a63629c39da5bae5bd"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000005be486382ea000000000000000000000000000000000000000000000000000c1f5fb3a5664776000000000000000000000000000000000000000000001384343b9d519d11d69a0000000000000000000000000000000000000000000000000c19a16b41e35d7600000000000000000000000000000000000000000000138434415b9a0094c09a",
        "logIndex": 28,
        "blockHash": "0xeaa88ac80e878dea0a0b4b17ffe899984e9967960521cf0701f6f61923f4113a"
      }
    ],
    "blockNumber": 42751320,
    "cumulativeGasUsed": "2389510",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x425cE8A2d6A2fAF2506ce32437666d3156136a43",
    "1000000000000000000",
    "0",
    "0xB4272071eCAdd69d933AdcD19cA99fe80664fc08",
    "0x50872469E4b156b0e1E98365317A885Ec096e92d",
    "0xc557D5AaCa8646F6742fB322c7497f7E610033bA"
  ],
  "numDeployments": 1,
  "solcInputHash": "c09db190254609638ceaf50da3e257ba",
  "metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20Permit\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_increment\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"_base\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_paymentHub\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"Address_NotTransferNorContract\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Brokerbot_BuyingDisabled\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"Brokerbot_InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"Brokerbot_NotAuthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Brokerbot_SellingDisabled\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Brokerbot_WithdrawFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"Ownable_NotOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timeToDrift\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"driftIncrement\",\"type\":\"int256\"}],\"name\":\"DriftSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"paymentHub\",\"type\":\"address\"}],\"name\":\"PaymentHubUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"increment\",\"type\":\"uint256\"}],\"name\":\"PriceSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountBase\",\"type\":\"uint256\"}],\"name\":\"Received\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"setting\",\"type\":\"uint256\"}],\"name\":\"SettingsChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20Permit\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"ref\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"contract IERC20\",\"name\":\"base\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newprice\",\"type\":\"uint256\"}],\"name\":\"Trade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"erc20\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"base\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"driftIncrement\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"driftStart\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"getBuyPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"getPriceAtTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"getSellPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"money\",\"type\":\"uint256\"}],\"name\":\"getShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hasDrift\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"increment\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"costs\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ref\",\"type\":\"bytes\"}],\"name\":\"notifyTrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"costs\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ref\",\"type\":\"bytes\"}],\"name\":\"notifyTradeAndTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"buyers\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"costs\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"ref\",\"type\":\"bytes[]\"}],\"name\":\"notifyTrades\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"buyers\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"costs\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"ref\",\"type\":\"bytes[]\"}],\"name\":\"notifyTradesAndTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ref\",\"type\":\"bytes\"}],\"name\":\"onTokenTransfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paymenthub\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"incomingAsset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ref\",\"type\":\"bytes\"}],\"name\":\"processIncoming\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"secondsPerStep\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"_driftIncrement\",\"type\":\"int256\"}],\"name\":\"setDrift\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_buyingEnabled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_sellingEnabled\",\"type\":\"bool\"}],\"name\":\"setEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"hub\",\"type\":\"address\"}],\"name\":\"setPaymentHub\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_increment\",\"type\":\"uint256\"}],\"name\":\"setPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_settings\",\"type\":\"uint256\"}],\"name\":\"setSettings\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"settings\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timeToDrift\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20Permit\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"ercAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawEther\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawEther\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"Address_NotTransferNorContract(address)\":[{\"params\":{\"target\":\"Target address to call the function on.\"}}],\"Brokerbot_InvalidSender(address)\":[{\"params\":{\"sender\":\"The msg.sender.\"}}],\"Brokerbot_NotAuthorized(address)\":[{\"params\":{\"sender\":\"The msg.sender.\"}}],\"Brokerbot_WithdrawFailed(address,uint256)\":[{\"params\":{\"amount\":\"The withdraw amount.\",\"target\":\"The receiver of the Eth.\"}}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"processIncoming(address,address,uint256,bytes)\":{\"details\":\"Is either called from payment hub or from transferAndCall of the share token (via onTokenTransfer).\",\"params\":{\"amount\":\"The amount of shares the are sold / The base amount paid to buy sharees.\",\"from\":\"Who iniciated the sell/buy.\",\"incomingAsset\":\"the erc20 address of either base currency or the share token.\",\"ref\":\"Reference data blob.\"},\"returns\":{\"_0\":\"The amount of shares bought / The amount received for selling the shares. \"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"Brokerbot_InvalidSender(address)\":[{\"notice\":\"Sender(msg.sender) has to be incoming token or paymenthub.\"}],\"Brokerbot_NotAuthorized(address)\":[{\"notice\":\"Sender(msg.sender) needs to be owner or paymenthub.\"}],\"Brokerbot_WithdrawFailed(address,uint256)\":[{\"notice\":\"target.call() wasn't successful.\"}]},\"kind\":\"user\",\"methods\":{\"processIncoming(address,address,uint256,bytes)\":{\"notice\":\"Payment hub might actually have sent another accepted token, including Ether.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/brokerbot/Brokerbot.sol\":\"Brokerbot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/ERC20/IERC20.sol\":{\"content\":\"/**\\n* SPDX-License-Identifier: MIT\\n*\\n* Copyright (c) 2016-2019 zOS Global Limited\\n*\\n*/\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP. Does not include\\n * the optional functions; to access them see `ERC20Detailed`.\\n */\\n\\ninterface IERC20 {\\n\\n    // Optional functions\\n    function name() external view returns (string memory);\\n\\n    function symbol() external view returns (string memory);\\n\\n    function decimals() external view returns (uint8);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a `Transfer` event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through `transferFrom`. This is\\n     * zero by default.\\n     *\\n     * This value changes when `approve` or `transferFrom` are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * > Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an `Approval` event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a `Transfer` event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to `approve`. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n}\",\"keccak256\":\"0x2224189bcdeb28cbadfdb8d126c278df60ec39875c7929e7ffa9e2055cded960\",\"license\":\"MIT\"},\"src/ERC20/IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\\n// Copied from https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit is IERC20 {\\n\\n    /*//////////////////////////////////////////////////////////////\\n                            Custom errors\\n\\t//////////////////////////////////////////////////////////////*/\\n    /// Block timestamp must to be before deadline.\\n    /// @param deadline The deadline of the permit.\\n    /// @param blockTimestamp The timestamp of the execution block.\\n    error Permit_DeadlineExpired(uint256 deadline, uint256 blockTimestamp);\\n    /// Recovered address must be owner and not zero address.\\n    /// @param signerAddress The recovered signer address.\\n    error Permit_InvalidSigner(address signerAddress);\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\",\"keccak256\":\"0x9c6c4c49deffc8176f13b34150dd580526b45dd85ce1b71fe2ed340ff0489ebd\",\"license\":\"MIT\"},\"src/ERC20/IERC677Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// Given that development on ERC 677 has stalled, we should consider supporting EIP 1363: https://eips.ethereum.org/EIPS/eip-1363\\ninterface IERC677Receiver {\\n\\n    error IERC677_OnTokenTransferFailed();\\n    \\n    function onTokenTransfer(address from, uint256 amount, bytes calldata data) external returns (bool);\\n\\n}\",\"keccak256\":\"0xcca2937791e78a77e83f586e21a84fcc46fa910062f929145bf4159ef3f9d73c\",\"license\":\"MIT\"},\"src/brokerbot/Brokerbot.sol\":{\"content\":\"/**\\n* SPDX-License-Identifier: LicenseRef-Aktionariat\\n*\\n* Proprietary License\\n*\\n* This code cannot be used without an explicit permission from the copyright holder.\\n* If you wish to use the Aktionariat Brokerbot, you can either use the open version\\n* named Brokerbot.sol that can be used under an MIT License with Automated License Fee Payments,\\n* or you can get in touch with use to negotiate a license to use LicensedBrokerbot.sol .\\n*\\n* Copyright (c) 2021 Aktionariat AG (aktionariat.com), All rights reserved.\\n*/\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Ownable.sol\\\";\\nimport \\\"../ERC20/IERC20.sol\\\";\\nimport \\\"../ERC20/IERC20Permit.sol\\\";\\nimport \\\"../ERC20/IERC677Receiver.sol\\\";\\nimport \\\"./IBrokerbot.sol\\\";\\nimport \\\"../utils/SafeERC20.sol\\\";\\n\\ncontract Brokerbot is IBrokerbot, Ownable {\\n\\n    using SafeERC20 for IERC20;\\n\\n    address public override paymenthub;\\n\\n    IERC20 public override immutable base;  // ERC-20 currency\\n    IERC20Permit public override immutable token; // ERC-20 share token\\n\\n    uint256 private price; // current offer price in base currency, without drift\\n    uint256 public increment; // increment step the price in/decreases when buying/selling\\n\\n    uint256 public driftStart;\\n    uint256 public timeToDrift; // seconds until drift pushes price by one drift increment\\n    int256 public driftIncrement;\\n\\n    // Note that these settings might be hard-coded in various places, so better not change these values.\\n    uint8 private constant BUYING_ENABLED = 0x1;\\n    uint8 private constant SELLING_ENABLED = 0x2;\\n    // note that in the UI, we call the setting \\\"convert ether\\\", which is the opposite\\n    uint8 private constant KEEP_ETHER = 0x4;\\n\\n    // Version history\\n    // Version 2: added ability to process bank orders even if buying disabled\\n    // Version 3: added various events, removed license fee\\n    // Version 4: made version field public so it is actually usable    \\n    // Version 5: added target address for withdrawEther\\n    // Version 6: added costs field to notifyTrade\\n    // Version 7: added withdraw eth event\\n    // Version 8: use SafeERC20\\n    uint8 public constant VERSION = 0x8;\\n\\n    // more bits to be used by payment hub\\n    uint256 public override settings = BUYING_ENABLED | SELLING_ENABLED;\\n\\n    event Trade(IERC20Permit indexed token, address who, bytes ref, int amount, IERC20 base, uint totPrice, uint fee, uint newprice);\\n    event PaymentHubUpdate(address indexed paymentHub);\\n    event PriceSet(uint256 price, uint256 increment);\\n    event DriftSet(uint256 timeToDrift, int256 driftIncrement);\\n    event SettingsChange(uint256 setting);\\n    // ETH in/out events\\n    event Received(address indexed from, uint amountETH, uint amountBase);\\n    event Withdrawn(address indexed target, uint amountETH);\\n    \\n    constructor(\\n        IERC20Permit _token,\\n        uint256 _price,\\n        uint256 _increment,\\n        IERC20 _base,\\n        address _owner,\\n        address _paymentHub\\n    )\\n        Ownable(_owner)\\n    {\\n        base = _base;\\n        token = _token;\\n        price = _price;\\n        increment = _increment;\\n        paymenthub = _paymentHub;\\n        // Should we disabled recoverability in the recovery hub here?\\n        // No, if someone attacks us, we can always trigger a transfer and recover the tokens as well as the collateral.\\n    }\\n\\n    function setPrice(uint256 _price, uint256 _increment) external onlyOwner {\\n        anchorPrice(_price);\\n        increment = _increment;\\n        emit PriceSet(_price, _increment);\\n    }\\n\\n    function hasDrift() public view returns (bool) {\\n        return timeToDrift != 0;\\n    }\\n\\n    // secondsPerStep should be negative for downwards drift\\n    function setDrift(uint256 secondsPerStep, int256 _driftIncrement) external onlyOwner {\\n        anchorPrice(getPrice());\\n        timeToDrift = secondsPerStep;\\n        driftIncrement = _driftIncrement;\\n        emit DriftSet(secondsPerStep, _driftIncrement);\\n    }\\n\\n    function anchorPrice(uint256 currentPrice) private {\\n        price = currentPrice;\\n        // rely on time stamp is ok, no exact time stamp needed\\n        // solhint-disable-next-line not-rely-on-time\\n        driftStart = block.timestamp;\\n    }\\n\\n    function getPrice() public view returns (uint256) {\\n        // rely on time stamp is ok, no exact time stamp needed\\n        // solhint-disable-next-line not-rely-on-time\\n        return getPriceAtTime(block.timestamp);\\n    }\\n\\n    function getPriceAtTime(uint256 timestamp) public view returns (uint256) {\\n        if (hasDrift()){\\n            uint256 passed = timestamp - driftStart;\\n            int256 drifted = int256(passed / timeToDrift) * driftIncrement;\\n            int256 driftedPrice = int256(price) + drifted;\\n            if (driftedPrice < 0){\\n                return 0;\\n            } else {\\n                return uint256(driftedPrice);\\n            }\\n        } else {\\n            return price;\\n        }\\n    }\\n\\n    function buy(address from, uint256 paid, bytes calldata ref) internal returns (uint256) {\\n        if (!hasSetting(BUYING_ENABLED)) {\\n            revert Brokerbot_BuyingDisabled();\\n        }\\n        uint shares = getShares(paid);\\n        uint costs = getBuyPrice(shares);\\n        notifyTraded(from, shares, costs, ref);\\n        if (costs < paid){\\n            base.safeTransfer(from, paid - costs);\\n        }\\n        IERC20(token).safeTransfer(from, shares);\\n        return shares;\\n    }\\n\\n    // Callers must verify that (hasSetting(BUYING_ENABLED) || msg.sender == owner) holds!\\n    function notifyTraded(address from, uint256 shares, uint256 costs, bytes calldata ref) internal returns (uint256) {\\n        // disabling the requirement below for efficiency as this always holds once we reach this point\\n        // require(hasSetting(BUYING_ENABLED) || msg.sender == owner, \\\"buying disabled\\\");\\n        price = price + (shares * increment);\\n        emit Trade(token, from, ref, int256(shares), base, costs, 0, getPrice());\\n        return costs;\\n    }\\n\\n    function notifyTrade(address buyer, uint256 shares, uint256 costs, bytes calldata ref) external onlyOwner {\\n        notifyTraded(buyer, shares, costs, ref);\\n    }\\n\\n    function notifyTradeAndTransfer(address buyer, uint256 shares, uint256 costs, bytes calldata ref) public onlyOwner {\\n        notifyTraded(buyer, shares, costs, ref);\\n        IERC20(token).safeTransfer(buyer, shares);\\n    }\\n\\n    function notifyTrades(address[] calldata buyers, uint256[] calldata shares, uint256[] calldata costs, bytes[] calldata ref) external onlyOwner {\\n        for (uint i = 0; i < buyers.length; i++) {\\n            notifyTraded(buyers[i], shares[i], costs[i], ref[i]);\\n        }\\n    }\\n\\n    function notifyTradesAndTransfer(address[] calldata buyers, uint256[] calldata shares, uint256[] calldata costs, bytes[] calldata ref) external onlyOwner {\\n        for (uint i = 0; i < buyers.length; i++) {\\n            notifyTradeAndTransfer(buyers[i], shares[i], costs[i], ref[i]);\\n        }\\n    }\\n\\n    /**\\n     * @notice Payment hub might actually have sent another accepted token, including Ether.\\n     * @dev Is either called from payment hub or from transferAndCall of the share token (via onTokenTransfer).\\n     * @param incomingAsset the erc20 address of either base currency or the share token.\\n     * @param from Who iniciated the sell/buy.\\n     * @param amount The amount of shares the are sold / The base amount paid to buy sharees.\\n     * @param ref Reference data blob.\\n     * @return The amount of shares bought / The amount received for selling the shares. \\n     */\\n    function processIncoming(IERC20 incomingAsset, address from, uint256 amount, bytes calldata ref) public override payable returns (uint256) {\\n        if (msg.sender != address(incomingAsset) && msg.sender != paymenthub) {\\n            revert Brokerbot_InvalidSender(msg.sender);\\n        }\\n        if(msg.value > 0) {\\n            emit Received(from, msg.value, amount);\\n        }\\n        if (incomingAsset == token){\\n            return sell(from, amount, ref);\\n        } else if (incomingAsset == base){\\n            return buy(from, amount, ref);\\n        } else {\\n            revert(\\\"invalid token\\\");\\n        }\\n    }\\n\\n    // ERC-677 recipient\\n    function onTokenTransfer(address from, uint256 amount, bytes calldata ref) external returns (bool) {\\n        processIncoming(IERC20(msg.sender), from, amount, ref);\\n        return true;\\n    }\\n\\n    function hasSetting(uint256 setting) private view returns (bool) {\\n        return settings & setting == setting;\\n    }\\n\\n    /**\\n     * ref 0x01 or old format sells shares for base currency.\\n     * ref 0x02 indicates a sell via bank transfer.\\n     */\\n    function isDirectSale(bytes calldata ref) internal pure returns (bool) {\\n        if (ref.length == 0 || ref.length == 20) {\\n            return true; // old format\\n        } else {\\n            if (ref[0] == bytes1(0x01)){\\n                return true;\\n            } else if (ref[0] == bytes1(0x02)) {\\n                return false;\\n            } else {\\n                revert(\\\"unknown ref\\\");\\n            }\\n        }\\n    }\\n\\n\\n    function sell(address recipient, uint256 amount, bytes calldata ref) internal returns (uint256) {\\n        if (!hasSetting(SELLING_ENABLED)) {\\n            revert Brokerbot_SellingDisabled();\\n        }\\n        uint256 totPrice = getSellPrice(amount);\\n        price -= amount * increment;\\n        if (isDirectSale(ref)){\\n            base.safeTransfer(recipient, totPrice);\\n        }\\n        emit Trade(token, recipient, ref, -int256(amount), base, totPrice, 0, getPrice());\\n        return totPrice;\\n    }\\n\\n    function getSellPrice(uint256 shares) public view override returns (uint256) {\\n        return getPrice(getPrice() - (shares * increment), shares);\\n    }\\n\\n    function getBuyPrice(uint256 shares) public view override returns (uint256) {\\n        return getPrice(getPrice(), shares);\\n    }\\n\\n    function getPrice(uint256 lowest, uint256 shares) internal view returns (uint256){\\n        if (shares == 0) {\\n            return 0;\\n        } else {\\n            uint256 highest = lowest + (shares - 1) * increment;\\n            return ((lowest + highest) / 2) * shares;\\n        }\\n    }\\n\\n    function getShares(uint256 money) public view returns (uint256) {\\n        uint256 currentPrice = getPrice();\\n        uint256 min = 0;\\n        uint256 max = money / currentPrice;\\n        while (min < max){\\n            uint256 middle = (min + max)/2;\\n            uint256 totalPrice = getPrice(currentPrice, middle);\\n            if (money > totalPrice){\\n                min = middle + 1;\\n            } else {\\n                max = middle;\\n            }\\n        }\\n        return min;\\n    }\\n\\n    function withdrawEther(address target, uint256 amount) public ownerOrHub() {\\n        (bool success, ) = payable(target).call{value:amount}(\\\"\\\");\\n        if (!success) {\\n            revert Brokerbot_WithdrawFailed(target, amount);\\n        }\\n        emit Withdrawn(target, amount);\\n    }\\n\\n    function withdrawEther(uint256 amount) external ownerOrHub() {\\n        withdrawEther(msg.sender, amount);\\n    }\\n\\n    function approve(address erc20, address who, uint256 amount) external onlyOwner() {\\n        IERC20(erc20).approve(who, amount);\\n    }\\n\\n    function withdraw(IERC20 ercAddress, address to, uint256 amount) external ownerOrHub() {\\n        ercAddress.safeTransfer(to, amount);\\n    }\\n\\n    function setPaymentHub(address hub) external onlyOwner() {\\n        paymenthub = hub;\\n        emit PaymentHubUpdate(paymenthub);\\n    }\\n\\n    function setSettings(uint256 _settings) public onlyOwner() {\\n        settings = _settings;\\n        emit SettingsChange(_settings);\\n    }\\n\\n    function setEnabled(bool _buyingEnabled, bool _sellingEnabled) external onlyOwner() {\\n        uint256 _settings = settings;\\n        if (_buyingEnabled != hasSetting(BUYING_ENABLED)){\\n            _settings ^= BUYING_ENABLED;\\n        }\\n        if (_sellingEnabled != hasSetting(SELLING_ENABLED)){\\n            _settings ^= SELLING_ENABLED;\\n        }\\n        setSettings(_settings);\\n    }\\n    \\n    modifier ownerOrHub() {\\n        if (owner != msg.sender && paymenthub != msg.sender) {\\n            revert Brokerbot_NotAuthorized(msg.sender);\\n        }\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0x622daa769e16938198a53b016401e1f14ba9a2aace452fab3ad9ffba9f616c50\",\"license\":\"LicenseRef-Aktionariat\"},\"src/brokerbot/IBrokerbot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC20/IERC20.sol\\\";\\nimport \\\"../ERC20/IERC20Permit.sol\\\";\\n\\ninterface IBrokerbot {\\n\\n\\t/*//////////////////////////////////////////////////////////////\\n                            Custom errors\\n  //////////////////////////////////////////////////////////////*/\\n  error Brokerbot_BuyingDisabled();\\n  error Brokerbot_SellingDisabled();\\n  /// Sender(msg.sender) has to be incoming token or paymenthub.\\n  /// @param sender The msg.sender.\\n  error Brokerbot_InvalidSender(address sender);\\n  /// target.call() wasn't successful.\\n  /// @param target The receiver of the Eth.\\n  /// @param amount The withdraw amount.\\n  error Brokerbot_WithdrawFailed(address target, uint256 amount);\\n  /// Sender(msg.sender) needs to be owner or paymenthub.\\n  /// @param sender The msg.sender.\\n  error Brokerbot_NotAuthorized(address sender);\\n\\n  function paymenthub() external view returns (address);\\n\\n  function base() external view returns (IERC20);\\n\\n  function token() external view returns (IERC20Permit);\\n  \\n  function settings() external view returns (uint256);\\n\\n  // @return The amount of shares bought on buying or how much in the base currency is transfered on selling\\n  function processIncoming(IERC20 token_, address from, uint256 amount, bytes calldata ref) external payable returns (uint256);\\n\\n  function getBuyPrice(uint256 shares) external view returns (uint256);\\n\\n  function getSellPrice(uint256 shares) external view returns (uint256);\\n\\n}\",\"keccak256\":\"0xb41ad02c5b587309ecd6c84d4677d457e4cdb9f993447e97a605b10ec24de7b5\",\"license\":\"MIT\"},\"src/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// Copied from https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\\n// and modified it.\\n\\npragma solidity ^0.8.0;\\n\\nlibrary Address {\\n\\n    /// @param target Target address to call the function on.\\n    error Address_NotTransferNorContract(address target);\\n\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n        return account.code.length > 0;\\n    }\\n    \\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    function functionCallWithValue(address target, bytes memory data, uint256 weiValue) internal returns (bytes memory) {\\n        if (data.length != 0 && !isContract(target)) {\\n            revert Address_NotTransferNorContract(target);\\n        }\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: weiValue }(data);\\n        if (success) {\\n            return returndata;\\n        } else if (returndata.length > 0) {\\n            assembly{\\n                revert (add (returndata, 0x20), mload (returndata))\\n            }\\n        } else {\\n           revert(\\\"failed\\\");\\n        }\\n    }\\n}\",\"keccak256\":\"0xb95d45875550203c1afb7dfc9c99ce62c77496c36e96f3adfaad2d42cb3380a2\",\"license\":\"MIT\"},\"src/utils/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n//\\n// From https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\\n//\\n// Modifications:\\n// - Replaced Context._msgSender() with msg.sender\\n// - Made leaner\\n// - Extracted interface\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\ncontract Ownable {\\n\\n    address public owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    error Ownable_NotOwner(address sender);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor (address initialOwner) {\\n        owner = initialOwner;\\n        emit OwnershipTransferred(address(0), owner);\\n    }\\n\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) external onlyOwner {\\n        emit OwnershipTransferred(owner, newOwner);\\n        owner = newOwner;\\n    }\\n\\n    function _checkOwner() internal view {\\n        if (msg.sender != owner) {\\n            revert Ownable_NotOwner(msg.sender);\\n        }\\n    }\\n}\",\"keccak256\":\"0x9057578671d192c7891a59854cf8bab2698450c5b271f21e0696036fb65cae3b\",\"license\":\"MIT\"},\"src/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// coppied and adjusted from OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../ERC20/IERC20.sol\\\";\\nimport {IERC20Permit} from \\\"../ERC20/IERC20Permit.sol\\\";\\nimport {Address} from \\\"./Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    /**\\n     * @dev An operation with an ERC20 token failed.\\n     */\\n    error SafeERC20FailedOperation(address token);\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\\n    }\\n\\n    /**\\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\\n     * Revert on invalid signature.\\n     */\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        if (nonceAfter != nonceBefore + 1) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data);\\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\\n        // and not revert is the subcall reverts.\\n\\n        (bool success, bytes memory returndata) = address(token).call(data);\\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\\n    }\\n}\",\"keccak256\":\"0xa162e550fe203915126fddc231c55d28dd3f16d39be22dd48c5fc7f5ccd6fd93\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60c060405260036007553480156200001657600080fd5b5060405162001c4738038062001c478339810160408190526200003991620000d7565b600080546001600160a01b0319166001600160a01b03841690811782556040518492907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506001600160a01b0392831660805294821660a05250600292909255600355600180546001600160a01b0319169290911691909117905562000154565b6001600160a01b0381168114620000d457600080fd5b50565b60008060008060008060c08789031215620000f157600080fd5b8651620000fe81620000be565b80965050602087015194506040870151935060608701516200012081620000be565b60808801519093506200013381620000be565b60a08801519092506200014681620000be565b809150509295509295509295565b60805160a051611a87620001c060003960008181610594015281816106e90152818161095d01528181610f7201528181611107015261124e01526000818161028f015281816109a901528181610fb9015281816110d601528181611156015261121a0152611a876000f3fe6080604052600436106101e35760003560e01c806396199f5511610102578063d9caed1211610095578063f7d9757711610064578063f7d9757714610562578063fc0c546a14610582578063ffa1ad74146105b6578063fff4da1f146105dd57600080fd5b8063d9caed12146104ec578063e06174e41461050c578063e1f21c6714610522578063f2fde38b1461054257600080fd5b8063ba730e53116100d1578063ba730e5314610480578063bf13d438146104a0578063c7780ab2146104c0578063d09de08a146104d657600080fd5b806396199f551461040b57806398d5fdca1461042b578063a4c0ed3614610440578063afaefe9e1461046057600080fd5b80636f7267b71161017a5780637ff6c191116101495780637ff6c1911461039c57806384b41fda146103b25780638a07d3d0146103c85780638da5cb5b146103eb57600080fd5b80636f7267b71461031c578063777adcf01461033c5780637cd6a7fd1461035c5780637fcc15991461037c57600080fd5b80635001f3b5116101b65780635001f3b51461027d578063522f6815146102c95780635c627935146102e957806369365c521461030957600080fd5b806308d4db14146101e857806314bf043c1461021b57806322ae3e6f1461023d5780633bed33ce1461025d575b600080fd5b3480156101f457600080fd5b506102086102033660046114ae565b6105fd565b6040519081526020015b60405180910390f35b34801561022757600080fd5b5061023b610236366004611513565b610616565b005b34801561024957600080fd5b5061023b61025836600461162e565b6106c6565b34801561026957600080fd5b5061023b6102783660046114ae565b610717565b34801561028957600080fd5b506102b17f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610212565b3480156102d557600080fd5b5061023b6102e4366004611698565b61076f565b3480156102f557600080fd5b5061023b6103043660046116d2565b610883565b61020861031736600461170b565b6108ca565b34801561032857600080fd5b506102086103373660046114ae565b610a2d565b34801561034857600080fd5b506001546102b1906001600160a01b031681565b34801561036857600080fd5b5061023b6103773660046114ae565b610aa7565b34801561038857600080fd5b5061023b610397366004611513565b610aea565b3480156103a857600080fd5b5061020860045481565b3480156103be57600080fd5b5061020860055481565b3480156103d457600080fd5b5060055415155b6040519015158152602001610212565b3480156103f757600080fd5b506000546102b1906001600160a01b031681565b34801561041757600080fd5b5061023b61042636600461162e565b610b95565b34801561043757600080fd5b50610208610bb2565b34801561044c57600080fd5b506103db61045b366004611761565b610bc2565b34801561046c57600080fd5b5061023b61047b3660046117bd565b610bdd565b34801561048c57600080fd5b5061020861049b3660046114ae565b610c41565b3480156104ac57600080fd5b506102086104bb3660046114ae565b610c66565b3480156104cc57600080fd5b5061020860065481565b3480156104e257600080fd5b5061020860035481565b3480156104f857600080fd5b5061023b6105073660046117df565b610cdf565b34801561051857600080fd5b5061020860075481565b34801561052e57600080fd5b5061023b61053d3660046117df565b610d39565b34801561054e57600080fd5b5061023b61055d366004611820565b610dba565b34801561056e57600080fd5b5061023b61057d3660046117bd565b610e1d565b34801561058e57600080fd5b506102b17f000000000000000000000000000000000000000000000000000000000000000081565b3480156105c257600080fd5b506105cb600881565b60405160ff9091168152602001610212565b3480156105e957600080fd5b5061023b6105f8366004611820565b610e6d565b600061061061060a610bb2565b83610ebf565b92915050565b61061e610f19565b60005b878110156106bb576106a989898381811061063e5761063e61183d565b90506020020160208101906106539190611820565b8888848181106106655761066561183d565b9050602002013587878581811061067e5761067e61183d565b905060200201358686868181106106975761069761183d565b90506020028101906102589190611853565b806106b3816118b0565b915050610621565b505050505050505050565b6106ce610f19565b6106db8585858585610f48565b506107106001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168686611009565b5050505050565b6000546001600160a01b0316331480159061073d57506001546001600160a01b03163314155b156107625760405163618a6eaf60e01b81523360048201526024015b60405180910390fd5b61076c338261076f565b50565b6000546001600160a01b0316331480159061079557506001546001600160a01b03163314155b156107b55760405163618a6eaf60e01b8152336004820152602401610759565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610802576040519150601f19603f3d011682016040523d82523d6000602084013e610807565b606091505b505090508061083b5760405163fd4206e360e01b81526001600160a01b038416600482015260248101839052604401610759565b826001600160a01b03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d58360405161087691815260200190565b60405180910390a2505050565b61088b610f19565b600754821515600180831614146108a0576001185b6108ae600260075481161490565b1515821515146108bc576002185b6108c581610aa7565b505050565b6000336001600160a01b038716148015906108f057506001546001600160a01b03163314155b15610910576040516336e733c560e21b8152336004820152602401610759565b341561095b5760408051348152602081018690526001600160a01b038716917f74cf3d18d0ddca79038197ad0dd2c7fa5005ef61a5d1ed190e8a8a437e2fcf10910160405180910390a25b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316866001600160a01b0316036109a7576109a08585858561105b565b9050610a24565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316866001600160a01b0316036109ec576109a0858585856111a5565b60405162461bcd60e51b815260206004820152600d60248201526c34b73b30b634b2103a37b5b2b760991b6044820152606401610759565b95945050505050565b600080610a38610bb2565b9050600080610a4783866118c9565b90505b80821015610a9f5760006002610a6083856118eb565b610a6a91906118c9565b90506000610a788583610ebf565b905080871115610a9457610a8d8260016118eb565b9350610a98565b8192505b5050610a4a565b509392505050565b610aaf610f19565b60078190556040518181527f73f575b434990a047744d035619e8cb101d71ae30e15cee70124fcfa992a4b479060200160405180910390a150565b610af2610f19565b60005b878110156106bb57610b82898983818110610b1257610b1261183d565b9050602002016020810190610b279190611820565b888884818110610b3957610b3961183d565b90506020020135878785818110610b5257610b5261183d565b90506020020135868686818110610b6b57610b6b61183d565b9050602002810190610b7d9190611853565b610f48565b5080610b8d816118b0565b915050610af5565b610b9d610f19565b610baa8585858585610f48565b505050505050565b6000610bbd42610c66565b905090565b6000610bd133868686866108ca565b50600195945050505050565b610be5610f19565b610bf9610bf0610bb2565b60025542600455565b6005829055600681905560408051838152602081018390527f0c64990ff5fa601870b48aa83367706d39e6f55a0f73069c97c2f9c08241a17e91015b60405180910390a15050565b600061061060035483610c5491906118fe565b610c5c610bb2565b61060a9190611915565b6000610c73600554151590565b15610cd757600060045483610c889190611915565b9050600060065460055483610c9d91906118c9565b610ca79190611928565b9050600081600254610cb99190611958565b90506000811215610ccf57506000949350505050565b949350505050565b505060025490565b6000546001600160a01b03163314801590610d0557506001546001600160a01b03163314155b15610d255760405163618a6eaf60e01b8152336004820152602401610759565b6108c56001600160a01b0384168383611009565b610d41610f19565b60405163095ea7b360e01b81526001600160a01b0383811660048301526024820183905284169063095ea7b3906044016020604051808303816000875af1158015610d90573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db49190611980565b50505050565b610dc2610f19565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b610e25610f19565b610e328260025542600455565b600381905560408051838152602081018390527fa0f1665b7b659537b52deec61ea64d134a3bccda74c7f4e79f2246e7a8187a8a9101610c35565b610e75610f19565b600180546001600160a01b0319166001600160a01b0383169081179091556040517f4a534dbb0a1201b9baddbb0018d195c269a25847c33b19c06d24309f20f84b3390600090a250565b600081600003610ed157506000610610565b600354600090610ee2600185611915565b610eec91906118fe565b610ef690856118eb565b9050826002610f0583876118eb565b610f0f91906118c9565b610ccf91906118fe565b6000546001600160a01b03163314610f46576040516396a19be960e01b8152336004820152602401610759565b565b600060035485610f5891906118fe565b600254610f6591906118eb565b6002556001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f424641a08047715d4b70195e1d90818d302683d9f65f41910ca13f5a486d37cc878585897f00000000000000000000000000000000000000000000000000000000000000008a6000610fe3610bb2565b604051610ff798979695949392919061199d565b60405180910390a25091949350505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526108c590849061127f565b600061106b600260075481161490565b61108857604051632f168fef60e01b815260040160405180910390fd5b600061109385610c41565b9050600354856110a391906118fe565b600260008282546110b49190611915565b909155506110c4905084846112e2565b156110fd576110fd6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168783611009565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f424641a08047715d4b70195e1d90818d302683d9f65f41910ca13f5a486d37cc8786866111548a611a06565b7f0000000000000000000000000000000000000000000000000000000000000000876000611180610bb2565b60405161119498979695949392919061199d565b60405180910390a295945050505050565b60006111b5600160075481161490565b6111d2576040516301ab85d360e71b815260040160405180910390fd5b60006111dd85610a2d565b905060006111ea826105fd565b90506111f98783838888610f48565b508581101561124157611241876112108389611915565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169190611009565b6112756001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168884611009565b5095945050505050565b60006112946001600160a01b038416836113a2565b905080516000141580156112b95750808060200190518101906112b79190611980565b155b156108c557604051635274afe760e01b81526001600160a01b0384166004820152602401610759565b60008115806112f15750601482145b156112fe57506001610610565b600160f81b83836000816113145761131461183d565b9050013560f81c60f81b6001600160f81b0319160361133557506001610610565b600160f91b838360008161134b5761134b61183d565b9050013560f81c60f81b6001600160f81b0319160361136c57506000610610565b60405162461bcd60e51b815260206004820152600b60248201526a3ab735b737bbb7103932b360a91b6044820152606401610759565b60606113b0838360006113b7565b9392505050565b606082516000141580156113d357506001600160a01b0384163b155b156113fc57604051639eb1341360e01b81526001600160a01b0385166004820152602401610759565b600080856001600160a01b031684866040516114189190611a22565b60006040518083038185875af1925050503d8060008114611455576040519150601f19603f3d011682016040523d82523d6000602084013e61145a565b606091505b5091509150811561146e5791506113b09050565b80511561147d57805160208201fd5b60405162461bcd60e51b815260206004820152600660248201526519985a5b195960d21b6044820152606401610759565b6000602082840312156114c057600080fd5b5035919050565b60008083601f8401126114d957600080fd5b50813567ffffffffffffffff8111156114f157600080fd5b6020830191508360208260051b850101111561150c57600080fd5b9250929050565b6000806000806000806000806080898b03121561152f57600080fd5b883567ffffffffffffffff8082111561154757600080fd5b6115538c838d016114c7565b909a50985060208b013591508082111561156c57600080fd5b6115788c838d016114c7565b909850965060408b013591508082111561159157600080fd5b61159d8c838d016114c7565b909650945060608b01359150808211156115b657600080fd5b506115c38b828c016114c7565b999c989b5096995094979396929594505050565b6001600160a01b038116811461076c57600080fd5b60008083601f8401126115fe57600080fd5b50813567ffffffffffffffff81111561161657600080fd5b60208301915083602082850101111561150c57600080fd5b60008060008060006080868803121561164657600080fd5b8535611651816115d7565b94506020860135935060408601359250606086013567ffffffffffffffff81111561167b57600080fd5b611687888289016115ec565b969995985093965092949392505050565b600080604083850312156116ab57600080fd5b82356116b6816115d7565b946020939093013593505050565b801515811461076c57600080fd5b600080604083850312156116e557600080fd5b82356116f0816116c4565b91506020830135611700816116c4565b809150509250929050565b60008060008060006080868803121561172357600080fd5b853561172e816115d7565b9450602086013561173e816115d7565b935060408601359250606086013567ffffffffffffffff81111561167b57600080fd5b6000806000806060858703121561177757600080fd5b8435611782816115d7565b935060208501359250604085013567ffffffffffffffff8111156117a557600080fd5b6117b1878288016115ec565b95989497509550505050565b600080604083850312156117d057600080fd5b50508035926020909101359150565b6000806000606084860312156117f457600080fd5b83356117ff816115d7565b9250602084013561180f816115d7565b929592945050506040919091013590565b60006020828403121561183257600080fd5b81356113b0816115d7565b634e487b7160e01b600052603260045260246000fd5b6000808335601e1984360301811261186a57600080fd5b83018035915067ffffffffffffffff82111561188557600080fd5b60200191503681900382131561150c57600080fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016118c2576118c261189a565b5060010190565b6000826118e657634e487b7160e01b600052601260045260246000fd5b500490565b808201808211156106105761061061189a565b80820281158282048414176106105761061061189a565b818103818111156106105761061061189a565b80820260008212600160ff1b841416156119445761194461189a565b81810583148215176106105761061061189a565b80820182811260008312801582168215821617156119785761197861189a565b505092915050565b60006020828403121561199257600080fd5b81516113b0816116c4565b6001600160a01b03898116825260e0602083018190528201889052600090610100898b828601376000848b018201526040840198909852959095166060820152608081019390935260a083019190915260c0820152601f909301601f1916909201019392505050565b6000600160ff1b8201611a1b57611a1b61189a565b5060000390565b6000825160005b81811015611a435760208186018101518583015201611a29565b50600092019182525091905056fea26469706673582212200296298807af6ae72150362ee313462d120d107ad39661a9394db4148a85492564736f6c63430008150033",
  "deployedBytecode": "0x6080604052600436106101e35760003560e01c806396199f5511610102578063d9caed1211610095578063f7d9757711610064578063f7d9757714610562578063fc0c546a14610582578063ffa1ad74146105b6578063fff4da1f146105dd57600080fd5b8063d9caed12146104ec578063e06174e41461050c578063e1f21c6714610522578063f2fde38b1461054257600080fd5b8063ba730e53116100d1578063ba730e5314610480578063bf13d438146104a0578063c7780ab2146104c0578063d09de08a146104d657600080fd5b806396199f551461040b57806398d5fdca1461042b578063a4c0ed3614610440578063afaefe9e1461046057600080fd5b80636f7267b71161017a5780637ff6c191116101495780637ff6c1911461039c57806384b41fda146103b25780638a07d3d0146103c85780638da5cb5b146103eb57600080fd5b80636f7267b71461031c578063777adcf01461033c5780637cd6a7fd1461035c5780637fcc15991461037c57600080fd5b80635001f3b5116101b65780635001f3b51461027d578063522f6815146102c95780635c627935146102e957806369365c521461030957600080fd5b806308d4db14146101e857806314bf043c1461021b57806322ae3e6f1461023d5780633bed33ce1461025d575b600080fd5b3480156101f457600080fd5b506102086102033660046114ae565b6105fd565b6040519081526020015b60405180910390f35b34801561022757600080fd5b5061023b610236366004611513565b610616565b005b34801561024957600080fd5b5061023b61025836600461162e565b6106c6565b34801561026957600080fd5b5061023b6102783660046114ae565b610717565b34801561028957600080fd5b506102b17f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610212565b3480156102d557600080fd5b5061023b6102e4366004611698565b61076f565b3480156102f557600080fd5b5061023b6103043660046116d2565b610883565b61020861031736600461170b565b6108ca565b34801561032857600080fd5b506102086103373660046114ae565b610a2d565b34801561034857600080fd5b506001546102b1906001600160a01b031681565b34801561036857600080fd5b5061023b6103773660046114ae565b610aa7565b34801561038857600080fd5b5061023b610397366004611513565b610aea565b3480156103a857600080fd5b5061020860045481565b3480156103be57600080fd5b5061020860055481565b3480156103d457600080fd5b5060055415155b6040519015158152602001610212565b3480156103f757600080fd5b506000546102b1906001600160a01b031681565b34801561041757600080fd5b5061023b61042636600461162e565b610b95565b34801561043757600080fd5b50610208610bb2565b34801561044c57600080fd5b506103db61045b366004611761565b610bc2565b34801561046c57600080fd5b5061023b61047b3660046117bd565b610bdd565b34801561048c57600080fd5b5061020861049b3660046114ae565b610c41565b3480156104ac57600080fd5b506102086104bb3660046114ae565b610c66565b3480156104cc57600080fd5b5061020860065481565b3480156104e257600080fd5b5061020860035481565b3480156104f857600080fd5b5061023b6105073660046117df565b610cdf565b34801561051857600080fd5b5061020860075481565b34801561052e57600080fd5b5061023b61053d3660046117df565b610d39565b34801561054e57600080fd5b5061023b61055d366004611820565b610dba565b34801561056e57600080fd5b5061023b61057d3660046117bd565b610e1d565b34801561058e57600080fd5b506102b17f000000000000000000000000000000000000000000000000000000000000000081565b3480156105c257600080fd5b506105cb600881565b60405160ff9091168152602001610212565b3480156105e957600080fd5b5061023b6105f8366004611820565b610e6d565b600061061061060a610bb2565b83610ebf565b92915050565b61061e610f19565b60005b878110156106bb576106a989898381811061063e5761063e61183d565b90506020020160208101906106539190611820565b8888848181106106655761066561183d565b9050602002013587878581811061067e5761067e61183d565b905060200201358686868181106106975761069761183d565b90506020028101906102589190611853565b806106b3816118b0565b915050610621565b505050505050505050565b6106ce610f19565b6106db8585858585610f48565b506107106001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168686611009565b5050505050565b6000546001600160a01b0316331480159061073d57506001546001600160a01b03163314155b156107625760405163618a6eaf60e01b81523360048201526024015b60405180910390fd5b61076c338261076f565b50565b6000546001600160a01b0316331480159061079557506001546001600160a01b03163314155b156107b55760405163618a6eaf60e01b8152336004820152602401610759565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610802576040519150601f19603f3d011682016040523d82523d6000602084013e610807565b606091505b505090508061083b5760405163fd4206e360e01b81526001600160a01b038416600482015260248101839052604401610759565b826001600160a01b03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d58360405161087691815260200190565b60405180910390a2505050565b61088b610f19565b600754821515600180831614146108a0576001185b6108ae600260075481161490565b1515821515146108bc576002185b6108c581610aa7565b505050565b6000336001600160a01b038716148015906108f057506001546001600160a01b03163314155b15610910576040516336e733c560e21b8152336004820152602401610759565b341561095b5760408051348152602081018690526001600160a01b038716917f74cf3d18d0ddca79038197ad0dd2c7fa5005ef61a5d1ed190e8a8a437e2fcf10910160405180910390a25b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316866001600160a01b0316036109a7576109a08585858561105b565b9050610a24565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316866001600160a01b0316036109ec576109a0858585856111a5565b60405162461bcd60e51b815260206004820152600d60248201526c34b73b30b634b2103a37b5b2b760991b6044820152606401610759565b95945050505050565b600080610a38610bb2565b9050600080610a4783866118c9565b90505b80821015610a9f5760006002610a6083856118eb565b610a6a91906118c9565b90506000610a788583610ebf565b905080871115610a9457610a8d8260016118eb565b9350610a98565b8192505b5050610a4a565b509392505050565b610aaf610f19565b60078190556040518181527f73f575b434990a047744d035619e8cb101d71ae30e15cee70124fcfa992a4b479060200160405180910390a150565b610af2610f19565b60005b878110156106bb57610b82898983818110610b1257610b1261183d565b9050602002016020810190610b279190611820565b888884818110610b3957610b3961183d565b90506020020135878785818110610b5257610b5261183d565b90506020020135868686818110610b6b57610b6b61183d565b9050602002810190610b7d9190611853565b610f48565b5080610b8d816118b0565b915050610af5565b610b9d610f19565b610baa8585858585610f48565b505050505050565b6000610bbd42610c66565b905090565b6000610bd133868686866108ca565b50600195945050505050565b610be5610f19565b610bf9610bf0610bb2565b60025542600455565b6005829055600681905560408051838152602081018390527f0c64990ff5fa601870b48aa83367706d39e6f55a0f73069c97c2f9c08241a17e91015b60405180910390a15050565b600061061060035483610c5491906118fe565b610c5c610bb2565b61060a9190611915565b6000610c73600554151590565b15610cd757600060045483610c889190611915565b9050600060065460055483610c9d91906118c9565b610ca79190611928565b9050600081600254610cb99190611958565b90506000811215610ccf57506000949350505050565b949350505050565b505060025490565b6000546001600160a01b03163314801590610d0557506001546001600160a01b03163314155b15610d255760405163618a6eaf60e01b8152336004820152602401610759565b6108c56001600160a01b0384168383611009565b610d41610f19565b60405163095ea7b360e01b81526001600160a01b0383811660048301526024820183905284169063095ea7b3906044016020604051808303816000875af1158015610d90573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db49190611980565b50505050565b610dc2610f19565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b610e25610f19565b610e328260025542600455565b600381905560408051838152602081018390527fa0f1665b7b659537b52deec61ea64d134a3bccda74c7f4e79f2246e7a8187a8a9101610c35565b610e75610f19565b600180546001600160a01b0319166001600160a01b0383169081179091556040517f4a534dbb0a1201b9baddbb0018d195c269a25847c33b19c06d24309f20f84b3390600090a250565b600081600003610ed157506000610610565b600354600090610ee2600185611915565b610eec91906118fe565b610ef690856118eb565b9050826002610f0583876118eb565b610f0f91906118c9565b610ccf91906118fe565b6000546001600160a01b03163314610f46576040516396a19be960e01b8152336004820152602401610759565b565b600060035485610f5891906118fe565b600254610f6591906118eb565b6002556001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f424641a08047715d4b70195e1d90818d302683d9f65f41910ca13f5a486d37cc878585897f00000000000000000000000000000000000000000000000000000000000000008a6000610fe3610bb2565b604051610ff798979695949392919061199d565b60405180910390a25091949350505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526108c590849061127f565b600061106b600260075481161490565b61108857604051632f168fef60e01b815260040160405180910390fd5b600061109385610c41565b9050600354856110a391906118fe565b600260008282546110b49190611915565b909155506110c4905084846112e2565b156110fd576110fd6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168783611009565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f424641a08047715d4b70195e1d90818d302683d9f65f41910ca13f5a486d37cc8786866111548a611a06565b7f0000000000000000000000000000000000000000000000000000000000000000876000611180610bb2565b60405161119498979695949392919061199d565b60405180910390a295945050505050565b60006111b5600160075481161490565b6111d2576040516301ab85d360e71b815260040160405180910390fd5b60006111dd85610a2d565b905060006111ea826105fd565b90506111f98783838888610f48565b508581101561124157611241876112108389611915565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169190611009565b6112756001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168884611009565b5095945050505050565b60006112946001600160a01b038416836113a2565b905080516000141580156112b95750808060200190518101906112b79190611980565b155b156108c557604051635274afe760e01b81526001600160a01b0384166004820152602401610759565b60008115806112f15750601482145b156112fe57506001610610565b600160f81b83836000816113145761131461183d565b9050013560f81c60f81b6001600160f81b0319160361133557506001610610565b600160f91b838360008161134b5761134b61183d565b9050013560f81c60f81b6001600160f81b0319160361136c57506000610610565b60405162461bcd60e51b815260206004820152600b60248201526a3ab735b737bbb7103932b360a91b6044820152606401610759565b60606113b0838360006113b7565b9392505050565b606082516000141580156113d357506001600160a01b0384163b155b156113fc57604051639eb1341360e01b81526001600160a01b0385166004820152602401610759565b600080856001600160a01b031684866040516114189190611a22565b60006040518083038185875af1925050503d8060008114611455576040519150601f19603f3d011682016040523d82523d6000602084013e61145a565b606091505b5091509150811561146e5791506113b09050565b80511561147d57805160208201fd5b60405162461bcd60e51b815260206004820152600660248201526519985a5b195960d21b6044820152606401610759565b6000602082840312156114c057600080fd5b5035919050565b60008083601f8401126114d957600080fd5b50813567ffffffffffffffff8111156114f157600080fd5b6020830191508360208260051b850101111561150c57600080fd5b9250929050565b6000806000806000806000806080898b03121561152f57600080fd5b883567ffffffffffffffff8082111561154757600080fd5b6115538c838d016114c7565b909a50985060208b013591508082111561156c57600080fd5b6115788c838d016114c7565b909850965060408b013591508082111561159157600080fd5b61159d8c838d016114c7565b909650945060608b01359150808211156115b657600080fd5b506115c38b828c016114c7565b999c989b5096995094979396929594505050565b6001600160a01b038116811461076c57600080fd5b60008083601f8401126115fe57600080fd5b50813567ffffffffffffffff81111561161657600080fd5b60208301915083602082850101111561150c57600080fd5b60008060008060006080868803121561164657600080fd5b8535611651816115d7565b94506020860135935060408601359250606086013567ffffffffffffffff81111561167b57600080fd5b611687888289016115ec565b969995985093965092949392505050565b600080604083850312156116ab57600080fd5b82356116b6816115d7565b946020939093013593505050565b801515811461076c57600080fd5b600080604083850312156116e557600080fd5b82356116f0816116c4565b91506020830135611700816116c4565b809150509250929050565b60008060008060006080868803121561172357600080fd5b853561172e816115d7565b9450602086013561173e816115d7565b935060408601359250606086013567ffffffffffffffff81111561167b57600080fd5b6000806000806060858703121561177757600080fd5b8435611782816115d7565b935060208501359250604085013567ffffffffffffffff8111156117a557600080fd5b6117b1878288016115ec565b95989497509550505050565b600080604083850312156117d057600080fd5b50508035926020909101359150565b6000806000606084860312156117f457600080fd5b83356117ff816115d7565b9250602084013561180f816115d7565b929592945050506040919091013590565b60006020828403121561183257600080fd5b81356113b0816115d7565b634e487b7160e01b600052603260045260246000fd5b6000808335601e1984360301811261186a57600080fd5b83018035915067ffffffffffffffff82111561188557600080fd5b60200191503681900382131561150c57600080fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016118c2576118c261189a565b5060010190565b6000826118e657634e487b7160e01b600052601260045260246000fd5b500490565b808201808211156106105761061061189a565b80820281158282048414176106105761061061189a565b818103818111156106105761061061189a565b80820260008212600160ff1b841416156119445761194461189a565b81810583148215176106105761061061189a565b80820182811260008312801582168215821617156119785761197861189a565b505092915050565b60006020828403121561199257600080fd5b81516113b0816116c4565b6001600160a01b03898116825260e0602083018190528201889052600090610100898b828601376000848b018201526040840198909852959095166060820152608081019390935260a083019190915260c0820152601f909301601f1916909201019392505050565b6000600160ff1b8201611a1b57611a1b61189a565b5060000390565b6000825160005b81811015611a435760208186018101518583015201611a29565b50600092019182525091905056fea26469706673582212200296298807af6ae72150362ee313462d120d107ad39661a9394db4148a85492564736f6c63430008150033",
  "devdoc": {
    "errors": {
      "Address_NotTransferNorContract(address)": [
        {
          "params": {
            "target": "Target address to call the function on."
          }
        }
      ],
      "Brokerbot_InvalidSender(address)": [
        {
          "params": {
            "sender": "The msg.sender."
          }
        }
      ],
      "Brokerbot_NotAuthorized(address)": [
        {
          "params": {
            "sender": "The msg.sender."
          }
        }
      ],
      "Brokerbot_WithdrawFailed(address,uint256)": [
        {
          "params": {
            "amount": "The withdraw amount.",
            "target": "The receiver of the Eth."
          }
        }
      ],
      "SafeERC20FailedOperation(address)": [
        {
          "details": "An operation with an ERC20 token failed."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "processIncoming(address,address,uint256,bytes)": {
        "details": "Is either called from payment hub or from transferAndCall of the share token (via onTokenTransfer).",
        "params": {
          "amount": "The amount of shares the are sold / The base amount paid to buy sharees.",
          "from": "Who iniciated the sell/buy.",
          "incomingAsset": "the erc20 address of either base currency or the share token.",
          "ref": "Reference data blob."
        },
        "returns": {
          "_0": "The amount of shares bought / The amount received for selling the shares. "
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "errors": {
      "Brokerbot_InvalidSender(address)": [
        {
          "notice": "Sender(msg.sender) has to be incoming token or paymenthub."
        }
      ],
      "Brokerbot_NotAuthorized(address)": [
        {
          "notice": "Sender(msg.sender) needs to be owner or paymenthub."
        }
      ],
      "Brokerbot_WithdrawFailed(address,uint256)": [
        {
          "notice": "target.call() wasn't successful."
        }
      ]
    },
    "kind": "user",
    "methods": {
      "processIncoming(address,address,uint256,bytes)": {
        "notice": "Payment hub might actually have sent another accepted token, including Ether."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 11415,
        "contract": "src/brokerbot/Brokerbot.sol:Brokerbot",
        "label": "owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 1476,
        "contract": "src/brokerbot/Brokerbot.sol:Brokerbot",
        "label": "paymenthub",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 1486,
        "contract": "src/brokerbot/Brokerbot.sol:Brokerbot",
        "label": "price",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 1488,
        "contract": "src/brokerbot/Brokerbot.sol:Brokerbot",
        "label": "increment",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 1490,
        "contract": "src/brokerbot/Brokerbot.sol:Brokerbot",
        "label": "driftStart",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 1492,
        "contract": "src/brokerbot/Brokerbot.sol:Brokerbot",
        "label": "timeToDrift",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 1494,
        "contract": "src/brokerbot/Brokerbot.sol:Brokerbot",
        "label": "driftIncrement",
        "offset": 0,
        "slot": "6",
        "type": "t_int256"
      },
      {
        "astId": 1512,
        "contract": "src/brokerbot/Brokerbot.sol:Brokerbot",
        "label": "settings",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_int256": {
        "encoding": "inplace",
        "label": "int256",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}