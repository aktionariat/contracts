{
  "address": "0x1abD8b5194D733691D64c3F898300f88Ba0035d5",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_increment",
          "type": "uint256"
        },
        {
          "internalType": "contract IERC20",
          "name": "_base",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_paymentHub",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timeToDrift",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "driftIncrement",
          "type": "int256"
        }
      ],
      "name": "DriftSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "paymentHub",
          "type": "address"
        }
      ],
      "name": "PaymentHubUpdate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "increment",
          "type": "uint256"
        }
      ],
      "name": "PriceSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "setting",
          "type": "uint256"
        }
      ],
      "name": "SettingsChange",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "ref",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "amount",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "contract IERC20",
          "name": "base",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totPrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newprice",
          "type": "uint256"
        }
      ],
      "name": "Trade",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "erc20",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "base",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "driftIncrement",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "driftStart",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "getBuyPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "getPriceAtTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "getSellPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "money",
          "type": "uint256"
        }
      ],
      "name": "getShares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "hasDrift",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "increment",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "ref",
          "type": "bytes"
        }
      ],
      "name": "notifyTrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "ref",
          "type": "bytes"
        }
      ],
      "name": "notifyTradeAndTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "buyers",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "shares",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes[]",
          "name": "ref",
          "type": "bytes[]"
        }
      ],
      "name": "notifyTrades",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "buyers",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "shares",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes[]",
          "name": "ref",
          "type": "bytes[]"
        }
      ],
      "name": "notifyTradesAndTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "ref",
          "type": "bytes"
        }
      ],
      "name": "onTokenTransfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paymenthub",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "incomingAsset",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "ref",
          "type": "bytes"
        }
      ],
      "name": "processIncoming",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "secondsPerStep",
          "type": "uint256"
        },
        {
          "internalType": "int256",
          "name": "_driftIncrement",
          "type": "int256"
        }
      ],
      "name": "setDrift",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_buyingEnabled",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "_sellingEnabled",
          "type": "bool"
        }
      ],
      "name": "setEnabled",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "hub",
          "type": "address"
        }
      ],
      "name": "setPaymentHub",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_increment",
          "type": "uint256"
        }
      ],
      "name": "setPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_settings",
          "type": "uint256"
        }
      ],
      "name": "setSettings",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "settings",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timeToDrift",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "ercAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawEther",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xa80ef1c40dd1d1b3ada5fb19c4494abdf788280d371c7df70001c1a005e9b05d",
  "receipt": {
    "to": null,
    "from": "0x39E5351E6CE3c4B19B8b0a2F5C82c511782457BE",
    "contractAddress": "0x1abD8b5194D733691D64c3F898300f88Ba0035d5",
    "transactionIndex": 108,
    "gasUsed": "1664145",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000800000000000000000000004000000000000000000000000000000000000000000000000000000000000000000000004000000000000000001000000000000000000000000000000000002020000000000000000000800000000000000000000000000000000400000000000000000000000000000000000002000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x7decf050de735c90c83ade70432226e3c782d5b23601ec0c61cbd23d5af9c66a",
    "transactionHash": "0xa80ef1c40dd1d1b3ada5fb19c4494abdf788280d371c7df70001c1a005e9b05d",
    "logs": [
      {
        "transactionIndex": 108,
        "blockNumber": 14412543,
        "transactionHash": "0xa80ef1c40dd1d1b3ada5fb19c4494abdf788280d371c7df70001c1a005e9b05d",
        "address": "0x1abD8b5194D733691D64c3F898300f88Ba0035d5",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000031fa63132841785194c7f0fa1daf2f4cb01b985a"
        ],
        "data": "0x",
        "logIndex": 210,
        "blockHash": "0x7decf050de735c90c83ade70432226e3c782d5b23601ec0c61cbd23d5af9c66a"
      }
    ],
    "blockNumber": 14412543,
    "cumulativeGasUsed": "11954263",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x8747a3114Ef7f0eEBd3eB337F745E31dBF81a952",
    "6000000000000000000",
    "30000000000000",
    "0xB4272071eCAdd69d933AdcD19cA99fe80664fc08",
    "0x31fa63132841785194C7F0fa1Daf2F4cb01b985A",
    "0xfb330379134EA1EfCE9Cf6F28E2CcB917899e007"
  ],
  "numDeployments": 1,
  "solcInputHash": "7f68446d97b3818dad3638dcc67627fd",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_increment\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"_base\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_paymentHub\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timeToDrift\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"driftIncrement\",\"type\":\"int256\"}],\"name\":\"DriftSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"paymentHub\",\"type\":\"address\"}],\"name\":\"PaymentHubUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"increment\",\"type\":\"uint256\"}],\"name\":\"PriceSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"setting\",\"type\":\"uint256\"}],\"name\":\"SettingsChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"ref\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"contract IERC20\",\"name\":\"base\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newprice\",\"type\":\"uint256\"}],\"name\":\"Trade\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"erc20\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"base\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"driftIncrement\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"driftStart\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"getBuyPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"getPriceAtTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"getSellPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"money\",\"type\":\"uint256\"}],\"name\":\"getShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hasDrift\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"increment\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ref\",\"type\":\"bytes\"}],\"name\":\"notifyTrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ref\",\"type\":\"bytes\"}],\"name\":\"notifyTradeAndTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"buyers\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"ref\",\"type\":\"bytes[]\"}],\"name\":\"notifyTrades\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"buyers\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"ref\",\"type\":\"bytes[]\"}],\"name\":\"notifyTradesAndTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ref\",\"type\":\"bytes\"}],\"name\":\"onTokenTransfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paymenthub\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"incomingAsset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ref\",\"type\":\"bytes\"}],\"name\":\"processIncoming\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"secondsPerStep\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"_driftIncrement\",\"type\":\"int256\"}],\"name\":\"setDrift\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_buyingEnabled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_sellingEnabled\",\"type\":\"bool\"}],\"name\":\"setEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"hub\",\"type\":\"address\"}],\"name\":\"setPaymentHub\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_increment\",\"type\":\"uint256\"}],\"name\":\"setPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_settings\",\"type\":\"uint256\"}],\"name\":\"setSettings\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"settings\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timeToDrift\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ercAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawEther\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"processIncoming(address,address,uint256,bytes)\":{\"notice\":\"Payment hub might actually have sent another accepted token, including Ether.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/brokerbot/Brokerbot.sol\":\"Brokerbot\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/ERC20/IERC20.sol\":{\"content\":\"/**\\n* SPDX-License-Identifier: MIT\\n*\\n* Copyright (c) 2016-2019 zOS Global Limited\\n*\\n*/\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP. Does not include\\n * the optional functions; to access them see `ERC20Detailed`.\\n */\\n\\ninterface IERC20 {\\n\\n    // Optional functions\\n    function name() external view returns (string memory);\\n\\n    function symbol() external view returns (string memory);\\n\\n    function decimals() external view returns (uint8);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a `Transfer` event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through `transferFrom`. This is\\n     * zero by default.\\n     *\\n     * This value changes when `approve` or `transferFrom` are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * > Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an `Approval` event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a `Transfer` event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to `approve`. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n}\",\"keccak256\":\"0x2224189bcdeb28cbadfdb8d126c278df60ec39875c7929e7ffa9e2055cded960\",\"license\":\"MIT\"},\"src/ERC20/IERC677Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IERC677Receiver {\\n    \\n    function onTokenTransfer(address from, uint256 amount, bytes calldata data) external returns (bool);\\n\\n}\",\"keccak256\":\"0x40703acdfa2126286b117ad0cca84c0a4ca2d3b18586765186c9bdd8ad5cf744\",\"license\":\"MIT\"},\"src/brokerbot/Brokerbot.sol\":{\"content\":\"/**\\n* SPDX-License-Identifier: LicenseRef-Aktionariat\\n*\\n* Proprietary License\\n*\\n* This code cannot be used without an explicit permission from the copyright holder.\\n* If you wish to use the Aktionariat Brokerbot you can get in touch with us to \\n* negotiate a license.\\n*\\n* Copyright (c) 2021 Aktionariat AG (aktionariat.com), All rights reserved.\\n*/\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Ownable.sol\\\";\\nimport \\\"../ERC20/IERC20.sol\\\";\\nimport \\\"../ERC20/IERC677Receiver.sol\\\";\\nimport \\\"./IBrokerbot.sol\\\";\\n\\ncontract Brokerbot is IBrokerbot, Ownable {\\n\\n    address public paymenthub;\\n\\n    IERC20 public override immutable base;  // ERC-20 currency\\n    IERC20 public immutable token; // ERC-20 share token\\n\\n    uint256 private price; // current offer price in base currency, without drift\\n    uint256 public increment; // increment step the price in/decreases when buying/selling\\n\\n    uint256 public driftStart;\\n    uint256 public timeToDrift; // seconds until drift pushes price by one drift increment\\n    int256 public driftIncrement;\\n\\n    // Note that these settings might be hard-coded in various places, so better not change these values.\\n    uint8 private constant BUYING_ENABLED = 0x1;\\n    uint8 private constant SELLING_ENABLED = 0x2;\\n    // note that in the UI, we call the setting \\\"convert ether\\\", which is the opposite\\n    uint8 private constant KEEP_ETHER = 0x4;\\n\\n    // Version history\\n    // Version 2: added ability to process bank orders even if buying disabled\\n    // Version 3: added various events, removed license fee\\n    uint8 private constant VERSION = 0x3;\\n\\n    // more bits to be used by payment hub\\n    uint256 public override settings = BUYING_ENABLED | SELLING_ENABLED | (VERSION<<248);\\n\\n    event Trade(IERC20 indexed token, address who, bytes ref, int amount, IERC20 base, uint totPrice, uint fee, uint newprice);\\n    event PaymentHubUpdate(address indexed paymentHub);\\n    event PriceSet(uint256 price, uint256 increment);\\n    event DriftSet(uint256 timeToDrift, int256 driftIncrement);\\n    event SettingsChange(uint256 setting);\\n\\n    constructor(\\n        IERC20 _token,\\n        uint256 _price,\\n        uint256 _increment,\\n        IERC20 _base,\\n        address _owner,\\n        address _paymentHub\\n    )\\n        Ownable(_owner)\\n    {\\n        base = _base;\\n        token = _token;\\n        price = _price;\\n        increment = _increment;\\n        paymenthub = _paymentHub;\\n        // Should we disabled recoverability in the recovery hub here?\\n        // No, if someone attacks us, we can always trigger a transfer and recover the tokens as well as the collateral.\\n    }\\n\\n    function setPrice(uint256 _price, uint256 _increment) external onlyOwner {\\n        anchorPrice(_price);\\n        increment = _increment;\\n        emit PriceSet(_price, _increment);\\n    }\\n\\n    function hasDrift() public view returns (bool) {\\n        return timeToDrift != 0;\\n    }\\n\\n    // secondsPerStep should be negative for downwards drift\\n    function setDrift(uint256 secondsPerStep, int256 _driftIncrement) external onlyOwner {\\n        anchorPrice(getPrice());\\n        timeToDrift = secondsPerStep;\\n        driftIncrement = _driftIncrement;\\n        emit DriftSet(secondsPerStep, _driftIncrement);\\n    }\\n\\n    function anchorPrice(uint256 currentPrice) private {\\n        price = currentPrice;\\n        // rely on time stamp is ok, no exact time stamp needed\\n        // solhint-disable-next-line not-rely-on-time\\n        driftStart = block.timestamp;\\n    }\\n\\n    function getPrice() public view returns (uint256) {\\n        // rely on time stamp is ok, no exact time stamp needed\\n        // solhint-disable-next-line not-rely-on-time\\n        return getPriceAtTime(block.timestamp);\\n    }\\n\\n    function getPriceAtTime(uint256 timestamp) public view returns (uint256) {\\n        if (hasDrift()){\\n            uint256 passed = timestamp - driftStart;\\n            int256 drifted = int256(passed / timeToDrift) * driftIncrement;\\n            int256 driftedPrice = int256(price) + drifted;\\n            if (driftedPrice < 0){\\n                return 0;\\n            } else {\\n                return uint256(driftedPrice);\\n            }\\n        } else {\\n            return price;\\n        }\\n    }\\n\\n    function buy(address from, uint256 paid, bytes calldata ref) internal returns (uint256) {\\n        require(hasSetting(BUYING_ENABLED), \\\"buying disabled\\\");\\n        uint shares = getShares(paid);\\n        uint costs = notifyTraded(from, shares, ref);\\n        if (costs < paid){\\n            IERC20(base).transfer(from, paid - costs);\\n        }\\n        IERC20(token).transfer(from, shares);\\n        return shares;\\n    }\\n\\n    // Callers must verify that (hasSetting(BUYING_ENABLED) || msg.sender == owner) holds!\\n    function notifyTraded(address from, uint256 shares, bytes calldata ref) internal returns (uint256) {\\n        // disabling the requirement below for efficiency as this always holds once we reach this point\\n        // require(hasSetting(BUYING_ENABLED) || msg.sender == owner, \\\"buying disabled\\\");\\n        uint costs = getBuyPrice(shares);\\n        price = price + (shares * increment);\\n        emit Trade(token, from, ref, int256(shares), base, costs, 0, getPrice());\\n        return costs;\\n    }\\n\\n    function notifyTrade(address buyer, uint256 shares, bytes calldata ref) external onlyOwner {\\n        notifyTraded(buyer, shares, ref);\\n    }\\n\\n    function notifyTradeAndTransfer(address buyer, uint256 shares, bytes calldata ref) public onlyOwner {\\n        notifyTraded(buyer, shares, ref);\\n        IERC20(token).transfer(buyer, shares);\\n    }\\n\\n    function notifyTrades(address[] calldata buyers, uint256[] calldata shares, bytes[] calldata ref) external onlyOwner {\\n        for (uint i = 0; i < buyers.length; i++) {\\n            notifyTraded(buyers[i], shares[i], ref[i]);\\n        }\\n    }\\n\\n    function notifyTradesAndTransfer(address[] calldata buyers, uint256[] calldata shares, bytes[] calldata ref) external onlyOwner {\\n        for (uint i = 0; i < buyers.length; i++) {\\n            notifyTradeAndTransfer(buyers[i], shares[i], ref[i]);\\n        }\\n    }\\n\\n    /**\\n     * Payment hub might actually have sent another accepted token, including Ether.\\n     */\\n    function processIncoming(IERC20 incomingAsset, address from, uint256 amount, bytes calldata ref) public override payable returns (uint256) {\\n        require(msg.sender == address(incomingAsset) || msg.sender == paymenthub, \\\"invalid caller\\\");\\n        if (incomingAsset == token){\\n            return sell(from, amount, ref);\\n        } else if (incomingAsset == base){\\n            return buy(from, amount, ref);\\n        } else {\\n            revert(\\\"invalid token\\\");\\n        }\\n    }\\n\\n    // ERC-677 recipient\\n    function onTokenTransfer(address from, uint256 amount, bytes calldata ref) external returns (bool) {\\n        processIncoming(IERC20(msg.sender), from, amount, ref);\\n        return true;\\n    }\\n\\n    function hasSetting(uint256 setting) private view returns (bool) {\\n        return settings & setting == setting;\\n    }\\n\\n    /**\\n     * ref 0x01 or old format sells shares for base currency.\\n     * ref 0x02 indicates a sell via bank transfer.\\n     */\\n    function isDirectSale(bytes calldata ref) internal pure returns (bool) {\\n        if (ref.length == 0 || ref.length == 20) {\\n            return true; // old format\\n        } else {\\n            if (ref[0] == bytes1(0x01)){\\n                return true;\\n            } else if (ref[0] == bytes1(0x02)) {\\n                return false;\\n            } else {\\n                revert(\\\"unknown ref\\\");\\n            }\\n        }\\n    }\\n\\n\\n    function sell(address recipient, uint256 amount, bytes calldata ref) internal returns (uint256) {\\n        require(hasSetting(SELLING_ENABLED), \\\"selling disabled\\\");\\n        uint256 totPrice = getSellPrice(amount);\\n        IERC20 baseToken = IERC20(base);\\n        price -= amount * increment;\\n        if (isDirectSale(ref)){\\n            baseToken.transfer(recipient, totPrice);\\n        }\\n        emit Trade(token, recipient, ref, -int256(amount), base, totPrice, 0, getPrice());\\n        return totPrice;\\n    }\\n\\n    function getSellPrice(uint256 shares) public view returns (uint256) {\\n        return getPrice(getPrice() - (shares * increment), shares);\\n    }\\n\\n    function getBuyPrice(uint256 shares) public view returns (uint256) {\\n        return getPrice(getPrice(), shares);\\n    }\\n\\n    function getPrice(uint256 lowest, uint256 shares) internal view returns (uint256){\\n        if (shares == 0) {\\n            return 0;\\n        } else {\\n            uint256 highest = lowest + (shares - 1) * increment;\\n            return ((lowest + highest) / 2) * shares;\\n        }\\n    }\\n\\n    function getShares(uint256 money) public view returns (uint256) {\\n        uint256 currentPrice = getPrice();\\n        uint256 min = 0;\\n        uint256 max = money / currentPrice;\\n        while (min < max){\\n            uint256 middle = (min + max)/2;\\n            uint256 totalPrice = getPrice(currentPrice, middle);\\n            if (money > totalPrice){\\n                min = middle + 1;\\n            } else {\\n                max = middle;\\n            }\\n        }\\n        return min;\\n    }\\n\\n    function withdrawEther(uint256 amount) external ownerOrHub() {\\n        (bool success, ) = msg.sender.call{value:amount}(\\\"\\\");\\n        require(success, \\\"Transfer failed.\\\");\\n    }\\n\\n    function approve(address erc20, address who, uint256 amount) external onlyOwner() {\\n        IERC20(erc20).approve(who, amount);\\n    }\\n\\n    function withdraw(address ercAddress, address to, uint256 amount) external ownerOrHub() {\\n        IERC20(ercAddress).transfer(to, amount);\\n    }\\n\\n    function setPaymentHub(address hub) external onlyOwner() {\\n        paymenthub = hub;\\n        emit PaymentHubUpdate(paymenthub);\\n    }\\n\\n    function setSettings(uint256 _settings) public onlyOwner() {\\n        settings = _settings;\\n        emit SettingsChange(_settings);\\n    }\\n\\n    function setEnabled(bool _buyingEnabled, bool _sellingEnabled) external onlyOwner() {\\n        uint256 _settings = settings;\\n        if (_buyingEnabled != hasSetting(BUYING_ENABLED)){\\n            _settings ^= BUYING_ENABLED;\\n        }\\n        if (_sellingEnabled != hasSetting(SELLING_ENABLED)){\\n            _settings ^= SELLING_ENABLED;\\n        }\\n        setSettings(_settings);\\n    }\\n    \\n    modifier ownerOrHub() {\\n        require(owner == msg.sender || paymenthub == msg.sender, \\\"not owner nor hub\\\");\\n        _;\\n    }\\n}\",\"keccak256\":\"0x067af3dcceac8142c44bf67c165b049bbee5a6ff61b54398fed22857555ce976\",\"license\":\"LicenseRef-Aktionariat\"},\"src/brokerbot/IBrokerbot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC20/IERC20.sol\\\";\\n\\ninterface IBrokerbot {\\n\\n  function base() external view returns (IERC20);\\n  \\n  function settings() external view returns (uint256);\\n\\n  // @return The amount of shares bought on buying or how much in the base currency is transfered on selling\\n  function processIncoming(IERC20 token_, address from, uint256 amount, bytes calldata ref) external payable returns (uint256);\\n\\n}\",\"keccak256\":\"0xfa9a31e2499366c027ec809b1216189809546c434536aba032c8e1ae8272ad15\",\"license\":\"MIT\"},\"src/utils/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n//\\n// From https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\\n//\\n// Modifications:\\n// - Replaced Context._msgSender() with msg.sender\\n// - Made leaner\\n// - Extracted interface\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\ncontract Ownable {\\n\\n    address public owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor (address initialOwner) {\\n        owner = initialOwner;\\n        emit OwnershipTransferred(address(0), owner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) external onlyOwner {\\n        emit OwnershipTransferred(owner, newOwner);\\n        owner = newOwner;\\n    }\\n\\n    modifier onlyOwner() {\\n        require(owner == msg.sender, \\\"not owner\\\");\\n        _;\\n    }\\n}\",\"keccak256\":\"0x1104f456d1ee340a1674c34f132578b599d8fd1a8e12e57d5a7691de1191caca\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60c060405260036007553480156200001657600080fd5b5060405162001cde38038062001cde8339810160408190526200003991620000cf565b600080546001600160a01b0319166001600160a01b03841690811782556040518492907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350606092831b6001600160601b03199081166080529590921b90941660a052600292909255600355600180546001600160a01b0319166001600160a01b039092169190911790555062000165565b60008060008060008060c08789031215620000e957600080fd5b8651620000f6816200014c565b809650506020870151945060408701519350606087015162000118816200014c565b60808801519093506200012b816200014c565b60a08801519092506200013e816200014c565b809150509295509295509295565b6001600160a01b03811681146200016257600080fd5b50565b60805160601c60a05160601c611b07620001d76000396000818161053e0152818161077b01528181610b2e015281816111490152818161133b01526113f9015260008181610239015281816107c80152818161106b015281816111980152818161126501526114400152611b076000f3fe6080604052600436106101cd5760003560e01c8063a4c0ed36116100f7578063d9caed1211610095578063f7d9757711610064578063f7d975771461050c578063fc0c546a1461052c578063fff4da1f14610560578063fff897451461058057600080fd5b8063d9caed1214610496578063e06174e4146104b6578063e1f21c67146104cc578063f2fde38b146104ec57600080fd5b8063ba730e53116100d1578063ba730e531461042a578063bf13d4381461044a578063c7780ab21461046a578063d09de08a1461048057600080fd5b8063a4c0ed36146103ca578063afaefe9e146103ea578063b03a13fe1461040a57600080fd5b80637cd6a7fd1161016f5780638da5cb5b1161013e5780638da5cb5b1461035557806391be6ad51461037557806398d5fdca146103955780639bb8c0fd146103aa57600080fd5b80637cd6a7fd146102e65780637ff6c1911461030657806384b41fda1461031c5780638a07d3d01461033257600080fd5b80635c627935116101ab5780635c6279351461027357806369365c52146102935780636f7267b7146102a6578063777adcf0146102c657600080fd5b806308d4db14146101d25780633bed33ce146102055780635001f3b514610227575b600080fd5b3480156101de57600080fd5b506101f26101ed366004611803565b6105a0565b6040519081526020015b60405180910390f35b34801561021157600080fd5b50610225610220366004611803565b6105b9565b005b34801561023357600080fd5b5061025b7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101fc565b34801561027f57600080fd5b5061022561028e366004611757565b6106b0565b6101f26102a1366004611790565b610719565b3480156102b257600080fd5b506101f26102c1366004611803565b61084d565b3480156102d257600080fd5b5060015461025b906001600160a01b031681565b3480156102f257600080fd5b50610225610301366004611803565b6108c7565b34801561031257600080fd5b506101f260045481565b34801561032857600080fd5b506101f260055481565b34801561033e57600080fd5b5060055415155b60405190151581526020016101fc565b34801561036157600080fd5b5060005461025b906001600160a01b031681565b34801561038157600080fd5b506102256103903660046116a0565b61092c565b3480156103a157600080fd5b506101f26109e3565b3480156103b657600080fd5b506102256103c5366004611644565b6109f3565b3480156103d657600080fd5b506103456103e5366004611644565b610a30565b3480156103f657600080fd5b5061022561040536600461181c565b610a4b565b34801561041657600080fd5b50610225610425366004611644565b610ad1565b34801561043657600080fd5b506101f2610445366004611803565b610baa565b34801561045657600080fd5b506101f2610465366004611803565b610bcf565b34801561047657600080fd5b506101f260065481565b34801561048c57600080fd5b506101f260035481565b3480156104a257600080fd5b506102256104b1366004611603565b610c48565b3480156104c257600080fd5b506101f260075481565b3480156104d857600080fd5b506102256104e7366004611603565b610d34565b3480156104f857600080fd5b506102256105073660046115df565b610d93565b34801561051857600080fd5b5061022561052736600461181c565b610e18565b34801561053857600080fd5b5061025b7f000000000000000000000000000000000000000000000000000000000000000081565b34801561056c57600080fd5b5061022561057b3660046115df565b610e8a565b34801561058c57600080fd5b5061022561059b3660046116a0565b610efe565b60006105b36105ad6109e3565b83610fb2565b92915050565b6000546001600160a01b03163314806105dc57506001546001600160a01b031633145b6106215760405162461bcd60e51b81526020600482015260116024820152703737ba1037bbb732b9103737b910343ab160791b60448201526064015b60405180910390fd5b604051600090339083908381818185875af1925050503d8060008114610663576040519150601f19603f3d011682016040523d82523d6000602084013e610668565b606091505b50509050806106ac5760405162461bcd60e51b815260206004820152601060248201526f2a3930b739b332b9103330b4b632b21760811b6044820152606401610618565b5050565b6000546001600160a01b031633146106da5760405162461bcd60e51b8152600401610618906118a7565b600754821515600180831614146106ef576001185b6106fd600260075481161490565b15158215151461070b576002185b610714816108c7565b505050565b6000336001600160a01b038716148061073c57506001546001600160a01b031633145b6107795760405162461bcd60e51b815260206004820152600e60248201526d34b73b30b634b21031b0b63632b960911b6044820152606401610618565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316866001600160a01b031614156107c6576107bf85858585611009565b9050610844565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316866001600160a01b0316141561080c576107bf858585856111e8565b60405162461bcd60e51b815260206004820152600d60248201526c34b73b30b634b2103a37b5b2b760991b6044820152606401610618565b95945050505050565b6000806108586109e3565b9050600080610867838661196a565b90505b808210156108bf57600060026108808385611952565b61088a919061196a565b905060006108988583610fb2565b9050808711156108b4576108ad826001611952565b93506108b8565b8192505b505061086a565b509392505050565b6000546001600160a01b031633146108f15760405162461bcd60e51b8152600401610618906118a7565b60078190556040518181527f73f575b434990a047744d035619e8cb101d71ae30e15cee70124fcfa992a4b479060200160405180910390a150565b6000546001600160a01b031633146109565760405162461bcd60e51b8152600401610618906118a7565b60005b858110156109da576109c887878381811061097657610976611a95565b905060200201602081019061098b91906115df565b86868481811061099d5761099d611a95565b905060200201358585858181106109b6576109b6611a95565b905060200281019061042591906118ca565b806109d281611a47565b915050610959565b50505050505050565b60006109ee42610bcf565b905090565b6000546001600160a01b03163314610a1d5760405162461bcd60e51b8152600401610618906118a7565b610a29848484846113c3565b5050505050565b6000610a3f3386868686610719565b50600195945050505050565b6000546001600160a01b03163314610a755760405162461bcd60e51b8152600401610618906118a7565b610a89610a806109e3565b60025542600455565b6005829055600681905560408051838152602081018390527f0c64990ff5fa601870b48aa83367706d39e6f55a0f73069c97c2f9c08241a17e91015b60405180910390a15050565b6000546001600160a01b03163314610afb5760405162461bcd60e51b8152600401610618906118a7565b610b07848484846113c3565b5060405163a9059cbb60e01b81526001600160a01b038581166004830152602482018590527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb90604401602060405180830381600087803b158015610b7257600080fd5b505af1158015610b86573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a29919061173a565b60006105b360035483610bbd9190611a11565b610bc56109e3565b6105ad9190611a30565b6000610bdc600554151590565b15610c4057600060045483610bf19190611a30565b9050600060065460055483610c06919061196a565b610c10919061198c565b9050600081600254610c229190611911565b90506000811215610c3857506000949350505050565b949350505050565b505060025490565b6000546001600160a01b0316331480610c6b57506001546001600160a01b031633145b610cab5760405162461bcd60e51b81526020600482015260116024820152703737ba1037bbb732b9103737b910343ab160791b6044820152606401610618565b60405163a9059cbb60e01b81526001600160a01b0383811660048301526024820183905284169063a9059cbb906044015b602060405180830381600087803b158015610cf657600080fd5b505af1158015610d0a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d2e919061173a565b50505050565b6000546001600160a01b03163314610d5e5760405162461bcd60e51b8152600401610618906118a7565b60405163095ea7b360e01b81526001600160a01b0383811660048301526024820183905284169063095ea7b390604401610cdc565b6000546001600160a01b03163314610dbd5760405162461bcd60e51b8152600401610618906118a7565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314610e425760405162461bcd60e51b8152600401610618906118a7565b610e4f8260025542600455565b600381905560408051838152602081018390527fa0f1665b7b659537b52deec61ea64d134a3bccda74c7f4e79f2246e7a8187a8a9101610ac5565b6000546001600160a01b03163314610eb45760405162461bcd60e51b8152600401610618906118a7565b600180546001600160a01b0319166001600160a01b0383169081179091556040517f4a534dbb0a1201b9baddbb0018d195c269a25847c33b19c06d24309f20f84b3390600090a250565b6000546001600160a01b03163314610f285760405162461bcd60e51b8152600401610618906118a7565b60005b858110156109da57610f9f878783818110610f4857610f48611a95565b9050602002016020810190610f5d91906115df565b868684818110610f6f57610f6f611a95565b90506020020135858585818110610f8857610f88611a95565b9050602002810190610f9a91906118ca565b6113c3565b5080610faa81611a47565b915050610f2b565b600081610fc1575060006105b3565b600354600090610fd2600185611a30565b610fdc9190611a11565b610fe69085611952565b9050826002610ff58387611952565b610fff919061196a565b610c389190611a11565b6000611019600260075481161490565b6110585760405162461bcd60e51b815260206004820152601060248201526f1cd95b1b1a5b99c8191a5cd8589b195960821b6044820152606401610618565b600061106385610baa565b6003549091507f0000000000000000000000000000000000000000000000000000000000000000906110959087611a11565b600260008282546110a69190611a30565b909155506110b69050858561148f565b1561113f5760405163a9059cbb60e01b81526001600160a01b0388811660048301526024820184905282169063a9059cbb90604401602060405180830381600087803b15801561110557600080fd5b505af1158015611119573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061113d919061173a565b505b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f424641a08047715d4b70195e1d90818d302683d9f65f41910ca13f5a486d37cc8887876111968b611a62565b7f00000000000000000000000000000000000000000000000000000000000000008860006111c26109e3565b6040516111d698979695949392919061183e565b60405180910390a25095945050505050565b60006111f8600160075481161490565b6112365760405162461bcd60e51b815260206004820152600f60248201526e189d5e5a5b99c8191a5cd8589b1959608a1b6044820152606401610618565b60006112418561084d565b90506000611251878387876113c3565b905085811015611315576001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663a9059cbb88611295848a611a30565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b1580156112db57600080fd5b505af11580156112ef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611313919061173a565b505b60405163a9059cbb60e01b81526001600160a01b038881166004830152602482018490527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb90604401602060405180830381600087803b15801561137f57600080fd5b505af1158015611393573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113b7919061173a565b50909695505050505050565b6000806113cf856105a0565b9050600354856113df9190611a11565b6002546113ec9190611952565b6002556001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f424641a08047715d4b70195e1d90818d302683d9f65f41910ca13f5a486d37cc878686897f000000000000000000000000000000000000000000000000000000000000000087600061146a6109e3565b60405161147e98979695949392919061183e565b60405180910390a295945050505050565b600081158061149e5750601482145b156114ab575060016105b3565b600160f81b83836000816114c1576114c1611a95565b9050013560f81c60f81b6001600160f81b03191614156114e3575060016105b3565b600160f91b83836000816114f9576114f9611a95565b9050013560f81c60f81b6001600160f81b031916141561151b575060006105b3565b60405162461bcd60e51b815260206004820152600b60248201526a3ab735b737bbb7103932b360a91b6044820152606401610618565b60008083601f84011261156357600080fd5b50813567ffffffffffffffff81111561157b57600080fd5b6020830191508360208260051b850101111561159657600080fd5b9250929050565b60008083601f8401126115af57600080fd5b50813567ffffffffffffffff8111156115c757600080fd5b60208301915083602082850101111561159657600080fd5b6000602082840312156115f157600080fd5b81356115fc81611aab565b9392505050565b60008060006060848603121561161857600080fd5b833561162381611aab565b9250602084013561163381611aab565b929592945050506040919091013590565b6000806000806060858703121561165a57600080fd5b843561166581611aab565b935060208501359250604085013567ffffffffffffffff81111561168857600080fd5b6116948782880161159d565b95989497509550505050565b600080600080600080606087890312156116b957600080fd5b863567ffffffffffffffff808211156116d157600080fd5b6116dd8a838b01611551565b909850965060208901359150808211156116f657600080fd5b6117028a838b01611551565b9096509450604089013591508082111561171b57600080fd5b5061172889828a01611551565b979a9699509497509295939492505050565b60006020828403121561174c57600080fd5b81516115fc81611ac3565b6000806040838503121561176a57600080fd5b823561177581611ac3565b9150602083013561178581611ac3565b809150509250929050565b6000806000806000608086880312156117a857600080fd5b85356117b381611aab565b945060208601356117c381611aab565b935060408601359250606086013567ffffffffffffffff8111156117e657600080fd5b6117f28882890161159d565b969995985093965092949392505050565b60006020828403121561181557600080fd5b5035919050565b6000806040838503121561182f57600080fd5b50508035926020909101359150565b6001600160a01b03898116825260e0602083018190528201889052600090610100898b828601376000848b018201526040840198909852959095166060820152608081019390935260a083019190915260c0820152601f909301601f1916909201019392505050565b6020808252600990820152683737ba1037bbb732b960b91b604082015260600190565b6000808335601e198436030181126118e157600080fd5b83018035915067ffffffffffffffff8211156118fc57600080fd5b60200191503681900382131561159657600080fd5b600080821280156001600160ff1b038490038513161561193357611933611a7f565b600160ff1b839003841281161561194c5761194c611a7f565b50500190565b6000821982111561196557611965611a7f565b500190565b60008261198757634e487b7160e01b600052601260045260246000fd5b500490565b60006001600160ff1b03818413828413808216868404861116156119b2576119b2611a7f565b600160ff1b60008712828116878305891216156119d1576119d1611a7f565b600087129250878205871284841616156119ed576119ed611a7f565b87850587128184161615611a0357611a03611a7f565b505050929093029392505050565b6000816000190483118215151615611a2b57611a2b611a7f565b500290565b600082821015611a4257611a42611a7f565b500390565b6000600019821415611a5b57611a5b611a7f565b5060010190565b6000600160ff1b821415611a7857611a78611a7f565b5060000390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6001600160a01b0381168114611ac057600080fd5b50565b8015158114611ac057600080fdfea2646970667358221220c6eee3adeaca7914a64c301f75cd0233e14db69a308e05124011b1856655105864736f6c63430008070033",
  "deployedBytecode": "0x6080604052600436106101cd5760003560e01c8063a4c0ed36116100f7578063d9caed1211610095578063f7d9757711610064578063f7d975771461050c578063fc0c546a1461052c578063fff4da1f14610560578063fff897451461058057600080fd5b8063d9caed1214610496578063e06174e4146104b6578063e1f21c67146104cc578063f2fde38b146104ec57600080fd5b8063ba730e53116100d1578063ba730e531461042a578063bf13d4381461044a578063c7780ab21461046a578063d09de08a1461048057600080fd5b8063a4c0ed36146103ca578063afaefe9e146103ea578063b03a13fe1461040a57600080fd5b80637cd6a7fd1161016f5780638da5cb5b1161013e5780638da5cb5b1461035557806391be6ad51461037557806398d5fdca146103955780639bb8c0fd146103aa57600080fd5b80637cd6a7fd146102e65780637ff6c1911461030657806384b41fda1461031c5780638a07d3d01461033257600080fd5b80635c627935116101ab5780635c6279351461027357806369365c52146102935780636f7267b7146102a6578063777adcf0146102c657600080fd5b806308d4db14146101d25780633bed33ce146102055780635001f3b514610227575b600080fd5b3480156101de57600080fd5b506101f26101ed366004611803565b6105a0565b6040519081526020015b60405180910390f35b34801561021157600080fd5b50610225610220366004611803565b6105b9565b005b34801561023357600080fd5b5061025b7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101fc565b34801561027f57600080fd5b5061022561028e366004611757565b6106b0565b6101f26102a1366004611790565b610719565b3480156102b257600080fd5b506101f26102c1366004611803565b61084d565b3480156102d257600080fd5b5060015461025b906001600160a01b031681565b3480156102f257600080fd5b50610225610301366004611803565b6108c7565b34801561031257600080fd5b506101f260045481565b34801561032857600080fd5b506101f260055481565b34801561033e57600080fd5b5060055415155b60405190151581526020016101fc565b34801561036157600080fd5b5060005461025b906001600160a01b031681565b34801561038157600080fd5b506102256103903660046116a0565b61092c565b3480156103a157600080fd5b506101f26109e3565b3480156103b657600080fd5b506102256103c5366004611644565b6109f3565b3480156103d657600080fd5b506103456103e5366004611644565b610a30565b3480156103f657600080fd5b5061022561040536600461181c565b610a4b565b34801561041657600080fd5b50610225610425366004611644565b610ad1565b34801561043657600080fd5b506101f2610445366004611803565b610baa565b34801561045657600080fd5b506101f2610465366004611803565b610bcf565b34801561047657600080fd5b506101f260065481565b34801561048c57600080fd5b506101f260035481565b3480156104a257600080fd5b506102256104b1366004611603565b610c48565b3480156104c257600080fd5b506101f260075481565b3480156104d857600080fd5b506102256104e7366004611603565b610d34565b3480156104f857600080fd5b506102256105073660046115df565b610d93565b34801561051857600080fd5b5061022561052736600461181c565b610e18565b34801561053857600080fd5b5061025b7f000000000000000000000000000000000000000000000000000000000000000081565b34801561056c57600080fd5b5061022561057b3660046115df565b610e8a565b34801561058c57600080fd5b5061022561059b3660046116a0565b610efe565b60006105b36105ad6109e3565b83610fb2565b92915050565b6000546001600160a01b03163314806105dc57506001546001600160a01b031633145b6106215760405162461bcd60e51b81526020600482015260116024820152703737ba1037bbb732b9103737b910343ab160791b60448201526064015b60405180910390fd5b604051600090339083908381818185875af1925050503d8060008114610663576040519150601f19603f3d011682016040523d82523d6000602084013e610668565b606091505b50509050806106ac5760405162461bcd60e51b815260206004820152601060248201526f2a3930b739b332b9103330b4b632b21760811b6044820152606401610618565b5050565b6000546001600160a01b031633146106da5760405162461bcd60e51b8152600401610618906118a7565b600754821515600180831614146106ef576001185b6106fd600260075481161490565b15158215151461070b576002185b610714816108c7565b505050565b6000336001600160a01b038716148061073c57506001546001600160a01b031633145b6107795760405162461bcd60e51b815260206004820152600e60248201526d34b73b30b634b21031b0b63632b960911b6044820152606401610618565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316866001600160a01b031614156107c6576107bf85858585611009565b9050610844565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316866001600160a01b0316141561080c576107bf858585856111e8565b60405162461bcd60e51b815260206004820152600d60248201526c34b73b30b634b2103a37b5b2b760991b6044820152606401610618565b95945050505050565b6000806108586109e3565b9050600080610867838661196a565b90505b808210156108bf57600060026108808385611952565b61088a919061196a565b905060006108988583610fb2565b9050808711156108b4576108ad826001611952565b93506108b8565b8192505b505061086a565b509392505050565b6000546001600160a01b031633146108f15760405162461bcd60e51b8152600401610618906118a7565b60078190556040518181527f73f575b434990a047744d035619e8cb101d71ae30e15cee70124fcfa992a4b479060200160405180910390a150565b6000546001600160a01b031633146109565760405162461bcd60e51b8152600401610618906118a7565b60005b858110156109da576109c887878381811061097657610976611a95565b905060200201602081019061098b91906115df565b86868481811061099d5761099d611a95565b905060200201358585858181106109b6576109b6611a95565b905060200281019061042591906118ca565b806109d281611a47565b915050610959565b50505050505050565b60006109ee42610bcf565b905090565b6000546001600160a01b03163314610a1d5760405162461bcd60e51b8152600401610618906118a7565b610a29848484846113c3565b5050505050565b6000610a3f3386868686610719565b50600195945050505050565b6000546001600160a01b03163314610a755760405162461bcd60e51b8152600401610618906118a7565b610a89610a806109e3565b60025542600455565b6005829055600681905560408051838152602081018390527f0c64990ff5fa601870b48aa83367706d39e6f55a0f73069c97c2f9c08241a17e91015b60405180910390a15050565b6000546001600160a01b03163314610afb5760405162461bcd60e51b8152600401610618906118a7565b610b07848484846113c3565b5060405163a9059cbb60e01b81526001600160a01b038581166004830152602482018590527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb90604401602060405180830381600087803b158015610b7257600080fd5b505af1158015610b86573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a29919061173a565b60006105b360035483610bbd9190611a11565b610bc56109e3565b6105ad9190611a30565b6000610bdc600554151590565b15610c4057600060045483610bf19190611a30565b9050600060065460055483610c06919061196a565b610c10919061198c565b9050600081600254610c229190611911565b90506000811215610c3857506000949350505050565b949350505050565b505060025490565b6000546001600160a01b0316331480610c6b57506001546001600160a01b031633145b610cab5760405162461bcd60e51b81526020600482015260116024820152703737ba1037bbb732b9103737b910343ab160791b6044820152606401610618565b60405163a9059cbb60e01b81526001600160a01b0383811660048301526024820183905284169063a9059cbb906044015b602060405180830381600087803b158015610cf657600080fd5b505af1158015610d0a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d2e919061173a565b50505050565b6000546001600160a01b03163314610d5e5760405162461bcd60e51b8152600401610618906118a7565b60405163095ea7b360e01b81526001600160a01b0383811660048301526024820183905284169063095ea7b390604401610cdc565b6000546001600160a01b03163314610dbd5760405162461bcd60e51b8152600401610618906118a7565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314610e425760405162461bcd60e51b8152600401610618906118a7565b610e4f8260025542600455565b600381905560408051838152602081018390527fa0f1665b7b659537b52deec61ea64d134a3bccda74c7f4e79f2246e7a8187a8a9101610ac5565b6000546001600160a01b03163314610eb45760405162461bcd60e51b8152600401610618906118a7565b600180546001600160a01b0319166001600160a01b0383169081179091556040517f4a534dbb0a1201b9baddbb0018d195c269a25847c33b19c06d24309f20f84b3390600090a250565b6000546001600160a01b03163314610f285760405162461bcd60e51b8152600401610618906118a7565b60005b858110156109da57610f9f878783818110610f4857610f48611a95565b9050602002016020810190610f5d91906115df565b868684818110610f6f57610f6f611a95565b90506020020135858585818110610f8857610f88611a95565b9050602002810190610f9a91906118ca565b6113c3565b5080610faa81611a47565b915050610f2b565b600081610fc1575060006105b3565b600354600090610fd2600185611a30565b610fdc9190611a11565b610fe69085611952565b9050826002610ff58387611952565b610fff919061196a565b610c389190611a11565b6000611019600260075481161490565b6110585760405162461bcd60e51b815260206004820152601060248201526f1cd95b1b1a5b99c8191a5cd8589b195960821b6044820152606401610618565b600061106385610baa565b6003549091507f0000000000000000000000000000000000000000000000000000000000000000906110959087611a11565b600260008282546110a69190611a30565b909155506110b69050858561148f565b1561113f5760405163a9059cbb60e01b81526001600160a01b0388811660048301526024820184905282169063a9059cbb90604401602060405180830381600087803b15801561110557600080fd5b505af1158015611119573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061113d919061173a565b505b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f424641a08047715d4b70195e1d90818d302683d9f65f41910ca13f5a486d37cc8887876111968b611a62565b7f00000000000000000000000000000000000000000000000000000000000000008860006111c26109e3565b6040516111d698979695949392919061183e565b60405180910390a25095945050505050565b60006111f8600160075481161490565b6112365760405162461bcd60e51b815260206004820152600f60248201526e189d5e5a5b99c8191a5cd8589b1959608a1b6044820152606401610618565b60006112418561084d565b90506000611251878387876113c3565b905085811015611315576001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663a9059cbb88611295848a611a30565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b1580156112db57600080fd5b505af11580156112ef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611313919061173a565b505b60405163a9059cbb60e01b81526001600160a01b038881166004830152602482018490527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb90604401602060405180830381600087803b15801561137f57600080fd5b505af1158015611393573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113b7919061173a565b50909695505050505050565b6000806113cf856105a0565b9050600354856113df9190611a11565b6002546113ec9190611952565b6002556001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f424641a08047715d4b70195e1d90818d302683d9f65f41910ca13f5a486d37cc878686897f000000000000000000000000000000000000000000000000000000000000000087600061146a6109e3565b60405161147e98979695949392919061183e565b60405180910390a295945050505050565b600081158061149e5750601482145b156114ab575060016105b3565b600160f81b83836000816114c1576114c1611a95565b9050013560f81c60f81b6001600160f81b03191614156114e3575060016105b3565b600160f91b83836000816114f9576114f9611a95565b9050013560f81c60f81b6001600160f81b031916141561151b575060006105b3565b60405162461bcd60e51b815260206004820152600b60248201526a3ab735b737bbb7103932b360a91b6044820152606401610618565b60008083601f84011261156357600080fd5b50813567ffffffffffffffff81111561157b57600080fd5b6020830191508360208260051b850101111561159657600080fd5b9250929050565b60008083601f8401126115af57600080fd5b50813567ffffffffffffffff8111156115c757600080fd5b60208301915083602082850101111561159657600080fd5b6000602082840312156115f157600080fd5b81356115fc81611aab565b9392505050565b60008060006060848603121561161857600080fd5b833561162381611aab565b9250602084013561163381611aab565b929592945050506040919091013590565b6000806000806060858703121561165a57600080fd5b843561166581611aab565b935060208501359250604085013567ffffffffffffffff81111561168857600080fd5b6116948782880161159d565b95989497509550505050565b600080600080600080606087890312156116b957600080fd5b863567ffffffffffffffff808211156116d157600080fd5b6116dd8a838b01611551565b909850965060208901359150808211156116f657600080fd5b6117028a838b01611551565b9096509450604089013591508082111561171b57600080fd5b5061172889828a01611551565b979a9699509497509295939492505050565b60006020828403121561174c57600080fd5b81516115fc81611ac3565b6000806040838503121561176a57600080fd5b823561177581611ac3565b9150602083013561178581611ac3565b809150509250929050565b6000806000806000608086880312156117a857600080fd5b85356117b381611aab565b945060208601356117c381611aab565b935060408601359250606086013567ffffffffffffffff8111156117e657600080fd5b6117f28882890161159d565b969995985093965092949392505050565b60006020828403121561181557600080fd5b5035919050565b6000806040838503121561182f57600080fd5b50508035926020909101359150565b6001600160a01b03898116825260e0602083018190528201889052600090610100898b828601376000848b018201526040840198909852959095166060820152608081019390935260a083019190915260c0820152601f909301601f1916909201019392505050565b6020808252600990820152683737ba1037bbb732b960b91b604082015260600190565b6000808335601e198436030181126118e157600080fd5b83018035915067ffffffffffffffff8211156118fc57600080fd5b60200191503681900382131561159657600080fd5b600080821280156001600160ff1b038490038513161561193357611933611a7f565b600160ff1b839003841281161561194c5761194c611a7f565b50500190565b6000821982111561196557611965611a7f565b500190565b60008261198757634e487b7160e01b600052601260045260246000fd5b500490565b60006001600160ff1b03818413828413808216868404861116156119b2576119b2611a7f565b600160ff1b60008712828116878305891216156119d1576119d1611a7f565b600087129250878205871284841616156119ed576119ed611a7f565b87850587128184161615611a0357611a03611a7f565b505050929093029392505050565b6000816000190483118215151615611a2b57611a2b611a7f565b500290565b600082821015611a4257611a42611a7f565b500390565b6000600019821415611a5b57611a5b611a7f565b5060010190565b6000600160ff1b821415611a7857611a78611a7f565b5060000390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6001600160a01b0381168114611ac057600080fd5b50565b8015158114611ac057600080fdfea2646970667358221220c6eee3adeaca7914a64c301f75cd0233e14db69a308e05124011b1856655105864736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "processIncoming(address,address,uint256,bytes)": {
        "notice": "Payment hub might actually have sent another accepted token, including Ether."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 8815,
        "contract": "src/brokerbot/Brokerbot.sol:Brokerbot",
        "label": "owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 1404,
        "contract": "src/brokerbot/Brokerbot.sol:Brokerbot",
        "label": "paymenthub",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 1413,
        "contract": "src/brokerbot/Brokerbot.sol:Brokerbot",
        "label": "price",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 1415,
        "contract": "src/brokerbot/Brokerbot.sol:Brokerbot",
        "label": "increment",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 1417,
        "contract": "src/brokerbot/Brokerbot.sol:Brokerbot",
        "label": "driftStart",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 1419,
        "contract": "src/brokerbot/Brokerbot.sol:Brokerbot",
        "label": "timeToDrift",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 1421,
        "contract": "src/brokerbot/Brokerbot.sol:Brokerbot",
        "label": "driftIncrement",
        "offset": 0,
        "slot": "6",
        "type": "t_int256"
      },
      {
        "astId": 1444,
        "contract": "src/brokerbot/Brokerbot.sol:Brokerbot",
        "label": "settings",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_int256": {
        "encoding": "inplace",
        "label": "int256",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}